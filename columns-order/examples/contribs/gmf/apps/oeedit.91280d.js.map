{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./contribs/gmf/src/objectediting/toolsComponent.html","webpack:///./contribs/gmf/src/objectediting/component.html","webpack:///./contribs/gmf/apps/oeedit/contextualdata.html","webpack:///./contribs/gmf/src/objectediting/coordinate.js","webpack:///./contribs/gmf/src/objectediting/geom.js","webpack:///./contribs/gmf/src/objectediting/Query.js","webpack:///./contribs/gmf/src/objectediting/getWMSFeatureComponent.js","webpack:///./src/interaction/DrawRegularPolygonFromClick.js","webpack:///./src/editing/createregularpolygonfromclickComponent.js","webpack:///./contribs/gmf/src/objectediting/toolsComponent.js","webpack:///./contribs/gmf/src/objectediting/component.js","webpack:///./contribs/gmf/src/objectediting/Manager.js","webpack:///./contribs/gmf/src/objectediting/module.js","webpack:///./contribs/gmf/apps/oeedit/Controller.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","5","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","obj","__t","__p","coordinates","nesting","ii","toXY","geom","isEmpty","olGeomSimpleGeometry","getFlatCoordinates","olGeomPoint","setCoordinates","gmfObjecteditingCoordinate","getCoordinates","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","$http","$q","gmfThemes","this","http_","q_","gmfThemes_","getQueryableLayerNodesDefered_","getQueryableLayersInfo","_this","defer","getOgcServersObject","then","ogcServers","getThemesObject","themes","allQueryableLayersInfo","getQueryableLayersInfoFromThemes","queryableLayersInfo","layerNode","metadata","copyable","resolve","promise","theme","group","nodes","node","jj","children","ogcServer","gmfThemeThemes","getFlatNodes","k","kk","childLayers","queryable","getFeatureInfo","layerInfo","coordinate","map","view","getView","projCode","getProjection","getCode","resolution","getResolution","infoFormat","ngeoDatasourceOGC","WMSInfoFormat","GML","layersParam","layers","split","format","olFormatWMSGetFeatureInfo","url","olSourceImageWMS","params","getGetFeatureInfoUrl","INFO_FORMAT","FEATURE_COUNT","QUERY_LAYERS","response","features","readFeatures","angular","service","gmfObjecteditingQuery","directive_","controller","scope","active","bindToController","directive","Controller_","$scope","gmfObjectEditingQuery","$watch","handleActiveChange_","gmfObjectEditingQuery_","olEvents","handleMapClick_","evt","_this2","feature","options","angle_","undefined","angle","radius_","radius","sides_","sides","listenerKeys_","olInteractionInteraction","handleEvent","olFunctions","olBase","setActive","getMap","enable_","disable_","setMap","getActive","googAsserts","assert","forEach","center","geometry","fromCircle","olGeomCircle","makeRegular","event","ngeoCustomEvent","olFeature","dispatchEvent","newVal","interaction_","interactionListenerKey_","$on","handleDestroy_","$onInit","ngeoInteractionDrawRegularPolygonFromClick","handleDrawEnd_","addInteraction","getGeometry","removeInteraction","gmfObjecteditingGetWMSFeatureComponent","ngeoEditingCreatefeatureComponent","ngeoEditingCreateregularpolygonfromclickComponent","ngeoMiscBtnComponent","ngeoMiscToolActivateMgr","run","$templateCache","put","require","copyFromActive","deleteFromActive","geomType","process","queryableLayerInfo","requiresLayer","sketchFeatures","templateUrl","$injector","ngeoToolActivateMgr","scope_","ngeoToolActivateMgr_","geomTypePolygon","ngeoGeometryType","POLYGON","toolActiveNames_","drawActive","registerTool_","ProcessType","ADD","eraseActive","DELETE","drawTriangleActive","triangleAngle","Math","PI","oeToolsOptions","triangleRadius","regularPolygonRadius","toolActiveName","opt_requiresLayer","handleToolActiveChange_","NAMESPACE_","toolActivate","ngeoMiscToolActivate","registerTool","jsts","io","OL3Parser","gmfEditingEditFeature","gmfLayertreeSyncLayertreeMap","gmfLayertreeTreeManager","gmfObjecteditingToolsComponent","ngeoMapLayerHelper","ngeoMiscFeatureHelper","gmfObjecteditingTemplateUrl","$element","$attrs","component_","bindings","layerNodeId","component","Controller","$timeout","gettextCatalog","gmfEditFeature","gmfTreeManager","ngeoFeatureHelper","ngeoLayerHelper","timeout_","gettextCatalog_","gmfEditFeature_","selectedQueryableLayerInfo","queryableLayerListShown","featureHasGeom","ngeoLayerHelper_","gmfTreeManager_","ngeoFeatureHelper_","skipGeometryChange_","editableWMSLayer_","jstsOL3Parser_","state_","geometryChanges_","defaultStyles_","defaultStylesWoVertice_","dirtyStyles_","dirtyStylesWoVertice_","pending","dirty","features_","olCollection","interactions_","modify_","olInteractionModify","deleteCondition","ngeoUtils","style","getVertexStyle","modifyToolActivate_","toolsActive","toolsToolActivate_","handleGetQueryableLayersInfo_","$watchCollection","rootCtrl","unregisterAllTreeCtrl_","traverseDepthFirst","registerTreeCtrl_","State","UPDATE","INSERT","oldVal","defaultColor","dirtyColor","initializeStyles_","setFeatureStyle_","gmfObjecteditingGeom","initializeInteractions_","registerInteractions_","toggle_","resetGeometryChanges_","delete","msg","getString","confirm","deleteFeature","handleDeleteFeature_","save","clone","setId","getId","insertFeatures","handleEditFeature_","updateFeature","undo","pop","cloneGeometry_","setGeometry","isStateInsert","resp","refreshWMSLayer_","olFormatGeoJSON","interaction","ngeoMiscDecorate","unregisterInteractions_","_this3","keys","uid","toolMgr","getGeometryName","handleFeatureGeometryChange_","handleModifyInteractionModifyEnd_","handleWindowBeforeUnload_","handleSketchFeaturesAdd_","undoAllChanges_","unregisterTool","jstsBuffered","read","buffer","toMulti","write","$apply","styles","color","opt_incVertice","incVertice","rgbaColor","image","olStyleCircle","stroke","olStyleStroke","width","fill","olStyleFill","olStyleStyle","getType","modifyActive","setStyle","treeCtrl","id","layer","getLayer","olLayerImage","olLayerTile","refreshWMSLayer","e","returnValue","sketchGeom","element","jstsProcessedGeom","jstsGeom","jstsSketchGeom","union","intersects","difference","processedGeom","multiGeom","clear","_this4","layersInfo","ngeoLocation","ngeoLocation_","getFeatureDefered_","getFeature","getParam","Param","GEOM_TYPE","ID","LAYER","PROPERTY","THEME","getFeaturesWithComparisonFilters","operator","handleGetFeatures_","getGeomType","getLayerNodeId","getParamAsInt","featureProperties","ngeoStatemanagerLocation","gmfObjecteditingComponent","gmfObjecteditingManager","requestAnimationFrame","alert","location","oeEditActive","gmfControllersAbstractDesktopController","srid","mapViewConfig","zoom","resolutions","unregisterGroup","oeEditToolActivate","queryToolActivate","vectorSource_","olSourceVector","wrapX","vectorLayer_","olLayerVector","source","sketchLayer_","addLayer","gmfObjectEditingManager","oeGeomType","oeLayerNodeId","oeFeature","addFeature","searchCoordinatesProjections","ngeoProjEPSG21781","ngeoProjEPSG2056","scaleSelectorValues","elevationLayers","selectedElevationLayer","profileLinesconfiguration","aster","srtm","mousePositionProjections","code","label","filter","has","Raven","config","addPlugin","RavenPluginsAngular","install","appBase","gmfObjecteditingModule"],"mappings":"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","file":"oeedit.91280d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t5: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([503,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = function (obj) {\nobj || (obj = {});\nvar __t, __p = '';\nwith (obj) {\n__p += '<div class=\"btn-group\" role=\"group\" aria-label=\"\">\\n  <a\\n    href\\n    ngeo-btn\\n    ngeo-createfeature\\n    ngeo-createfeature-active=\"oetCtrl.drawActive\"\\n    ngeo-createfeature-features=\"::oetCtrl.sketchFeatures\"\\n    ngeo-createfeature-geom-type=\"::oetCtrl.geomType\"\\n    ngeo-createfeature-map=\"::oetCtrl.map\"\\n    class=\"btn btn-sm btn-default\"\\n    ng-class=\"{active: oetCtrl.drawActive}\"\\n    ng-if=\"::(oetCtrl.geomType === \\'MultiPoint\\')\"\\n    ng-model=\"oetCtrl.drawActive\"\\n    title=\"{{\\'Add a point to the geometry\\' | translate}}\">\\n    <span\\n      class=\"fa fa-plus-square-o gmf-icon-oe-draw\">\\n    </span>\\n  </a>\\n  <a\\n    href\\n    ngeo-btn\\n    ngeo-createfeature\\n    ngeo-createfeature-active=\"oetCtrl.drawActive\"\\n    ngeo-createfeature-features=\"::oetCtrl.sketchFeatures\"\\n    ngeo-createfeature-geom-type=\"::oetCtrl.geomType\"\\n    ngeo-createfeature-map=\"::oetCtrl.map\"\\n    class=\"btn btn-sm btn-default\"\\n    ng-class=\"{active: oetCtrl.drawActive}\"\\n    ng-if=\"::(oetCtrl.geomType === \\'MultiLineString\\')\"\\n    ng-model=\"oetCtrl.drawActive\"\\n    title=\"{{\\'Add a linestring to the geometry\\' | translate}}\">\\n    <span\\n      class=\"fa fa-plus-square-o gmf-icon-oe-draw\">\\n    </span>\\n  </a>\\n  <a\\n    href\\n    ngeo-btn\\n    ngeo-createfeature\\n    ngeo-createfeature-active=\"oetCtrl.drawActive\"\\n    ngeo-createfeature-features=\"::oetCtrl.sketchFeatures\"\\n    ngeo-createfeature-geom-type=\"::oetCtrl.geomType\"\\n    ngeo-createfeature-map=\"::oetCtrl.map\"\\n    class=\"btn btn-sm btn-default\"\\n    ng-class=\"{active: oetCtrl.drawActive}\"\\n    ng-if=\"::(oetCtrl.geomType === \\'MultiPolygon\\')\"\\n    ng-model=\"oetCtrl.drawActive\"\\n    title=\"{{\\'Add a polygon to the geometry\\' | translate}}\">\\n    <span\\n      class=\"fa fa-plus-square-o gmf-icon-oe-draw\">\\n    </span>\\n  </a>\\n\\n  <a\\n    href\\n    ngeo-btn\\n    ngeo-createfeature\\n    ngeo-createfeature-active=\"oetCtrl.eraseActive\"\\n    ngeo-createfeature-features=\"::oetCtrl.sketchFeatures\"\\n    ngeo-createfeature-geom-type=\"::oetCtrl.geomTypePolygon\"\\n    ngeo-createfeature-map=\"::oetCtrl.map\"\\n    class=\"btn btn-sm btn-default\"\\n    ng-class=\"{active: oetCtrl.eraseActive}\"\\n    ng-model=\"oetCtrl.eraseActive\"\\n    title=\"{{\\'Erase geometry\\' | translate}}\">\\n    <span\\n      class=\"fa fa-minus-square-o gmf-icon-oe-erase\">\\n    </span>\\n  </a>\\n\\n  <a\\n    href\\n    ng-if=\"::oetCtrl.geomType === \\'MultiPolygon\\'\"\\n    ngeo-btn\\n    ngeo-createregularpolygonfromclick\\n    ngeo-createregularpolygonfromclick-active=\"oetCtrl.drawTriangleActive\"\\n    ngeo-createregularpolygonfromclick-angle=\"oetCtrl.triangleAngle\"\\n    ngeo-createregularpolygonfromclick-features=\"::oetCtrl.sketchFeatures\"\\n    ngeo-createregularpolygonfromclick-map=\"::oetCtrl.map\"\\n    ngeo-createregularpolygonfromclick-radius=\"::oetCtrl.triangleRadius\"\\n    class=\"btn btn-sm btn-default ngeo-createregularpolygonfromclick\"\\n    ng-class=\"{active: oetCtrl.drawTriangleActive}\"\\n    ng-model=\"oetCtrl.drawTriangleActive\"\\n    title=\"{{\\'Draw a triangle\\' | translate}}\">\\n    <span\\n      class=\"fa fa-play fa-rotate-270 gmf-icon-oe-triangle\">\\n    </span>\\n  </a>\\n\\n  <a\\n    href\\n    ngeo-btn\\n    gmf-objecteditinggetwmsfeature\\n    gmf-objecteditinggetwmsfeature-active=\"oetCtrl.copyFromActive\"\\n    gmf-objecteditinggetwmsfeature-features=\"::oetCtrl.sketchFeatures\"\\n    gmf-objecteditinggetwmsfeature-layerinfo=\"oetCtrl.queryableLayerInfo\"\\n    gmf-objecteditinggetwmsfeature-map=\"::oetCtrl.map\"\\n    class=\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-add\"\\n    ng-class=\"{active: oetCtrl.copyFromActive}\"\\n    ng-model=\"oetCtrl.copyFromActive\"\\n    title=\"{{\\'Copy from external WMS feature\\' | translate}}\">\\n    <span\\n      class=\"fa fa-clone gmf-icon-oe-copyfrom\">\\n    </span>\\n  </a>\\n\\n  <a\\n    href\\n    ngeo-btn\\n    gmf-objecteditinggetwmsfeature\\n    gmf-objecteditinggetwmsfeature-active=\"oetCtrl.deleteFromActive\"\\n    gmf-objecteditinggetwmsfeature-features=\"::oetCtrl.sketchFeatures\"\\n    gmf-objecteditinggetwmsfeature-layerinfo=\"oetCtrl.queryableLayerInfo\"\\n    gmf-objecteditinggetwmsfeature-map=\"::oetCtrl.map\"\\n    class=\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-delete\"\\n    ng-class=\"{active: oetCtrl.deleteFromActive}\"\\n    ng-model=\"oetCtrl.deleteFromActive\"\\n    title=\"{{\\'Cut from external WMS feature\\' | translate}}\">\\n    <span\\n      class=\"fa fa-scissors gmf-icon-oe-deletefrom\">\\n    </span>\\n  </a>\\n\\n</div>\\n';\n\n}\nreturn __p\n}","module.exports = function (obj) {\nobj || (obj = {});\nvar __t, __p = '';\nwith (obj) {\n__p += '<gmf-objecteditingtools\\n  gmf-objecteditingtools-active=\"oeCtrl.toolsActive\"\\n  gmf-objecteditingtools-copyfromactive=\"oeCtrl.copyFromActive\"\\n  gmf-objecteditingtools-deletefromactive=\"oeCtrl.deleteFromActive\"\\n  gmf-objecteditingtools-feature=\"oeCtrl.feature\"\\n  gmf-objecteditingtools-geomtype=\"::oeCtrl.geomType\"\\n  gmf-objecteditingtools-map=\"::oeCtrl.map\"\\n  gmf-objecteditingtools-process=\"oeCtrl.process\"\\n  gmf-objecteditingtools-queryablelayerinfo=\"oeCtrl.selectedQueryableLayerInfo\"\\n  gmf-objecteditingtools-requireslayer=\"oeCtrl.queryableLayerListShown\"\\n  gmf-objecteditingtools-sketchfeatures=\"::oeCtrl.sketchFeatures\">\\n</gmf-objecteditingtools>\\n\\n<div\\n  class=\"form-group\"\\n  ng-show=\"oeCtrl.queryableLayerListShown\">\\n  <label\\n    ng-show=\"oeCtrl.copyFromActive === true\"\\n    class=\"col-form-label\">{{\\'Copy from:\\' | translate}}</label>\\n  <label\\n    ng-show=\"oeCtrl.deleteFromActive === true\"\\n    class=\"col-form-label\">{{\\'Cut from:\\' | translate}}</label>\\n  <select\\n    class=\"form-control\"\\n    ng-model=\"oeCtrl.selectedQueryableLayerInfo\"\\n    ng-options=\"layerInfo.layerNode.name | translate for layerInfo in oeCtrl.queryableLayersInfo\">\\n  </select>\\n</div>\\n\\n<form\\n  novalidate\\n  name=\"form\"\\n  class=\"form gmf-objectediting-form\">\\n  <input\\n    type=\"submit\"\\n    value=\"{{\\'Save\\' | translate}}\"\\n    class=\"btn btn-sm btn-default gmf-objectediting-btn-save\"\\n    ng-click=\"form.$valid && oeCtrl.save()\"\\n    ng-disabled=\"!oeCtrl.dirty || oeCtrl.pending || !oeCtrl.featureHasGeom\"\\n    title=\"{{\\'Save modifications\\' | translate}}\"></input>\\n  <a\\n    class=\"btn btn-sm btn-link gmf-objectediting-btn-undo\"\\n    ng-click=\"oeCtrl.undo()\"\\n    ng-disabled=\"!oeCtrl.dirty || oeCtrl.pending\"\\n    title=\"{{\\'Undo latest modifications\\' | translate}}\"\\n    href>{{\\'Undo\\' | translate}}</a>\\n  <a\\n    class=\"btn btn-sm btn-link gmf-objectediting-btn-delete\"\\n    ng-click=\"oeCtrl.delete()\"\\n    ng-disabled=\"oeCtrl.isStateInsert() || oeCtrl.pending\"\\n    title=\"{{\\'Delete the feature\\' | translate}}\"\\n    href>{{\\'Delete\\' | translate}}</a>\\n</form>\\n';\n\n}\nreturn __p\n}","module.exports = function (obj) {\nobj || (obj = {});\nvar __t, __p = '';\nwith (obj) {\n__p += '<table>\\n  <tr>\\n    <td translate>\\n      Swiss grid (LV03)\\n    </td>\\n    <td>\\n      {{coord_21781|ngeoNumberCoordinates:0:\\'{x} / {y}\\'}}\\n    </td>\\n  </tr>\\n  <tr>\\n    <td translate>\\n      Wgs Coord.\\n    </td>\\n    <td>\\n      {{coord_4326|ngeoNumberCoordinates:2:\\'{y} / {x}\\'}}\\n    </td>\\n  </tr>\\n  <tr>\\n    <td translate>\\n      Wgs Coord. DMS\\n    </td>\\n    <td>\\n      {{coord_4326|ngeoDMSCoordinates:0:\\'{y} {x}\\'}}\\n    </td>\\n  </tr>\\n  <tr>\\n    <td translate>\\n      Elevation (SRTM)\\n    </td>\\n    <td>\\n      {{srtm | number}} [m]\\n    </td>\\n  </tr>\\n  <tr>\\n    <td translate>\\n      Elevation (Aster)\\n    </td>\\n    <td>\\n      {{aster | number}} [m]\\n    </td>\\n  </tr>\\n</table>\\n<a ng-href=\"https://maps.google.ch/?ie=UTF8&ll={{coord_4326_northern}},{{coord_4326_eastern}}&layer=c&cbll={{coord_4326_northern}},{{coord_4326_eastern}}&cbp=12,57.78,,0,8.1\" target=\"_blank\">Google StreetView</a>\\n';\n\n}\nreturn __p\n}","/**\n * @module gmf.objectediting.coordinate\n */\nconst exports = {};\n\n\n/**\n * Convert a given coordinate or list of coordinates of any 'nesting' level\n * to XY, i.e. remove any extra dimensions to the coordinates and keep only 2.\n *\n * @param {Array.<ol.Coordinate>|ol.Coordinate} coordinates Coordinates\n * @param {number} nesting Nesting level.\n * @return {Array.<ol.Coordinate>|ol.Coordinate} Converted coordinates.\n */\nexports.toXY = function(coordinates, nesting) {\n  if (nesting === 0) {\n    if (coordinates.length > 2) {\n      coordinates = [coordinates[0], coordinates[1]];\n    }\n  } else {\n    for (let i = 0, ii = coordinates.length; i < ii; i++) {\n      coordinates[i] = exports.toXY(coordinates[i], nesting - 1);\n    }\n  }\n  return coordinates;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.geom\n */\nconst exports = {};\nimport gmfObjecteditingCoordinate from 'gmf/objectediting/coordinate.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\n\n\n/**\n * Determines whether a given geometry is empty or not. A null or undefined\n * value can be given for convenience, i.e. when using methods than can\n * return a geometry or not, for example:\n * `gmf.objectediting.geom.isEmpty(feature.getGeometry())`.\n *\n * @param {?ol.geom.Geometry|undefined} geom Geometry.\n * @return {boolean} Whether the given geometry is empty or not. A null or\n *     undefined geometry is considered empty.\n */\nexports.isEmpty = function(geom) {\n  let isEmpty = true;\n  if (geom && geom instanceof olGeomSimpleGeometry) {\n    isEmpty = geom.getFlatCoordinates().length === 0;\n  }\n  return isEmpty;\n};\n\n\n/**\n * Convert all coordinates within a geometry object to XY, i.e. remove any\n * extra dimension other than X and Y to the coordinates of a geometry.\n *\n * @param {ol.geom.Geometry} geom Geometry\n */\nexports.toXY = function(geom) {\n  if (geom instanceof olGeomPoint) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 0)\n    );\n  } else if (geom instanceof olGeomMultiPoint ||\n             geom instanceof olGeomLineString\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 1)\n    );\n  } else if (geom instanceof olGeomMultiLineString ||\n             geom instanceof olGeomPolygon\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 2)\n    );\n  } else if (geom instanceof olGeomMultiPolygon) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 3)\n    );\n  } else {\n    throw 'gmf.objectediting.geom.toXY - unsupported geometry type';\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Query\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n/**\n * A service that collects all queryable layer nodes from all themes, stores\n * them and use them to make WMS GetFeatureInfo queries. Queries can be made\n * regardless of the associated layer visibility. The layer nodes are also\n * loaded only once.\n *\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($http, $q, gmfThemes) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {?angular.$q.Deferred}\n   * @private\n   */\n  this.getQueryableLayerNodesDefered_ = null;\n\n};\n\n\n/**\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getQueryableLayersInfo = function() {\n\n  if (!this.getQueryableLayerNodesDefered_) {\n    this.getQueryableLayerNodesDefered_ = this.q_.defer();\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      this.gmfThemes_.getThemesObject().then((themes) => {\n        if (!themes) {\n          return;\n        }\n\n        // Get all queryable nodes\n        const allQueryableLayersInfo =\n            exports.getQueryableLayersInfoFromThemes(\n              themes,\n              ogcServers\n            );\n\n        // Narrow down to only those that have the 'copyable' metadata set\n        const queryableLayersInfo = [];\n        for (let i = 0, ii = allQueryableLayersInfo.length; i < ii; i++) {\n          if (allQueryableLayersInfo[i].layerNode.metadata.copyable) {\n            queryableLayersInfo.push(allQueryableLayersInfo[i]);\n          }\n        }\n\n        this.getQueryableLayerNodesDefered_.resolve(queryableLayersInfo);\n      });\n    });\n  }\n\n  return this.getQueryableLayerNodesDefered_.promise;\n\n};\n\n\n/**\n * From a list of theme nodes, collect all WMS layer nodes that are queryable.\n * A list of OGC servers is given in order to bind each queryable layer node\n * to its associated server and be able to build requests.\n *\n * @param {Array.<gmfThemes.GmfTheme>} themes List of theme nodes.\n * @param {gmfThemes.GmfOgcServers} ogcServers List of ogc servers\n * @return {Array.<gmfx.ObjectEditingQueryableLayerInfo>} List of\n *     queryable layers information.\n * @export\n */\nexports.getQueryableLayersInfoFromThemes = function(\n  themes, ogcServers\n) {\n  const queryableLayersInfo = [];\n  let theme;\n  let group;\n  let nodes;\n  let node;\n\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    theme = /** @type {gmfThemes.GmfTheme} */ (themes[i]);\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      group = /** @type {gmfThemes.GmfGroup} */ (theme.children[j]);\n\n      // Skip groups that don't have an ogcServer set\n      if (!group.ogcServer) {\n        continue;\n      }\n\n      nodes = [];\n      gmfThemeThemes.getFlatNodes(group, nodes);\n\n      for (let k = 0, kk = nodes.length; k < kk; k++) {\n        node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayerWMS} */ (\n          nodes[k]);\n\n        // Skip groups within groups\n        if (node.children && node.children.length) {\n          continue;\n        }\n\n        if (node.childLayers &&\n          node.childLayers[0] &&\n          node.childLayers[0].queryable\n        ) {\n          queryableLayersInfo.push({\n            layerNode: node,\n            ogcServer: ogcServers[group.ogcServer]\n          });\n        }\n      }\n    }\n  }\n\n  return queryableLayersInfo;\n};\n\n\n/**\n * From a queryable layer (WMS layer node), use its associated OGC server\n * to issue a single WMS GetFeatureInfo request at a specific location on a\n * specific map to fetch a single feature. If no feature is found, a `null`\n * value is returned.\n *\n * @param {gmfx.ObjectEditingQueryableLayerInfo} layerInfo Queryable layer\n *     information.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Map} map Map.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeatureInfo = function(layerInfo, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n  const infoFormat = ngeoDatasourceOGC.WMSInfoFormat.GML;\n  const layerNode = layerInfo.layerNode;\n  const layersParam = layerNode.layers.split(',');\n  const ogcServer = layerInfo.ogcServer;\n\n  const format = new olFormatWMSGetFeatureInfo({\n    layers: layersParam\n  });\n\n  const wmsSource = new olSourceImageWMS({\n    url: ogcServer.url,\n    params: {\n      layers: layersParam\n    }\n  });\n\n  const url = /** @type {string} */ (\n    wmsSource.getGetFeatureInfoUrl(coordinate, resolution, projCode, {\n      'INFO_FORMAT': infoFormat,\n      'FEATURE_COUNT': 1,\n      'QUERY_LAYERS': layersParam\n    })\n  );\n\n  return this.http_.get(url).then(\n    (response) => {\n      const features = format.readFeatures(response.data);\n      return (features && features[0]) ? features[0] : null;\n    }\n  );\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingQuery', [\n  gmfThemeThemes.module.name,\n]);\nexports.module.service('gmfObjectEditingQuery', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.getWMSFeatureComponent\n */\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingGetWMSFeatureComponent', [\n  gmfObjecteditingQuery.module.name,\n]);\n\n\n/**\n * When activated, this directive registers clicks on an OL3 map and use the\n * clicked coordinate to fetch a feature using the ObjectEditing query service.\n * A feature returned is pushed to a collection.\n *\n * Example:\n *\n *     <gmf-objecteditinggetwmsfeature\n *         gmf-objecteditinggetwmsfeature-active=\"ctrl.active\"\n *         gmf-objecteditinggetwmsfeature-features=\"ctrl.features\"\n *         gmf-objecteditinggetwmsfeature-layerinfo=\"ctrl.layerInfo\"\n *         gmf-objecteditinggetwmsfeature-map=\"::ctrl.map\">\n *     </gmf-objecteditinggetwmsfeature>\n *\n * @htmlAttribute {boolean} gmf-objecteditinggetwmsfeature-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Collection} gmf-objecteditinggetwmsfeature-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objecteditinggetwmsfeature-layerinfo Queryable layer info.\n * @htmlAttribute {ol.Map} gmf-objecteditinggetwmsfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditinggetwmsfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'gmfObjecteditinggetwmsfeatureController',\n    scope: {\n      'active': '=gmfObjecteditinggetwmsfeatureActive',\n      'features': '<gmfObjecteditinggetwmsfeatureFeatures',\n      'layerInfo': '=gmfObjecteditinggetwmsfeatureLayerinfo',\n      'map': '<gmfObjecteditinggetwmsfeatureMap'\n    },\n    bindToController: true\n  };\n};\n\nexports.directive('gmfObjecteditinggetwmsfeature',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.objectediting.Query} gmfObjectEditingQuery GMF ObjectEditing\n *     query service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditinggetwmsfeatureController\n */\nexports.Controller_ = function($scope,\n  gmfObjectEditingQuery) {\n\n  // Scope properties\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.layerInfo;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n\n  // Injected properties\n\n  /**\n   * @type {gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n};\n\n\n/**\n * @param {boolean} active Active.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (active) {\n    olEvents.listen(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  } else {\n    olEvents.unlisten(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  this.gmfObjectEditingQuery_.getFeatureInfo(\n    this.layerInfo,\n    evt.coordinate,\n    this.map\n  ).then((feature) => {\n    if (feature) {\n      this.features.push(feature);\n    }\n  });\n};\n\nexports.controller('gmfObjecteditinggetwmsfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawRegularPolygonFromClick\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\n\n/**\n * @classdesc\n * This interactions allows drawing regular polygons of a pre-determined number\n * of sides and size a a clicked location on the map.\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.DrawRegularPolygonFromClickOptions} options Options\n */\nconst exports = function(options) {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.radius_ = options.radius;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sides_ = options.sides !== undefined ? options.sides : 3;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(\n  exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n\n  if (this.getMap()) {\n    if (active) {\n      this.enable_();\n    } else {\n      this.disable_();\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const active = this.getActive();\n\n  const currentMap = this.getMap();\n  if (currentMap && active) {\n    this.disable_();\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map && active) {\n    this.enable_();\n  }\n\n};\n\n\n/**\n * Enable the interaction. Called when added to a map AND active.\n * @private\n */\nexports.prototype.enable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.push(\n    olEvents.listen(map, 'click', this.handleMapClick_, this)\n  );\n};\n\n\n/**\n * Disable the interaction. Called when removed from a map or deactivated.\n * @private\n */\nexports.prototype.disable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\n/**\n * Called the the map is clicked. Create a regular polygon at the clicked\n * location using the configuration\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @private\n */\nexports.prototype.handleMapClick_ = function(evt) {\n  const center = evt.coordinate;\n  const geometry = olGeomPolygon.fromCircle(\n    new olGeomCircle(center), this.sides_\n  );\n\n  olGeomPolygon.makeRegular(geometry, center, this.radius_, this.angle_);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: new olFeature(geometry)});\n  this.dispatchEvent(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createregularpolygonfromclickComponent\n */\nimport ngeoInteractionDrawRegularPolygonFromClick from 'ngeo/interaction/DrawRegularPolygonFromClick.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\n\nconst exports = angular.module('ngeoCreateregularpolygonfromclick', [\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createregularpolygonfromclick\n *       ngeo-createregularpolygonfromclick-active=\"ctrl.active\"\n *       ngeo-createregularpolygonfromclick-angle=\"::ctrl.angle\"\n *       ngeo-createregularpolygonfromclick-features=\"ctrl.features\"\n *       ngeo-createregularpolygonfromclick-map=\"::ctrl.map\"\n *       ngeo-createregularpolygonfromclick-radius=\"::ctrl.radius\"\n *       ngeo-createregularpolygonfromclick-sides=\"::ctrl.sides\"\n *       class=\"btn btn-default ngeo-createregularpolygonfromclick\"\n *       ng-class=\"{active: ctrl.active}\"\n *       ng-model=\"ctrl.active\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createregularpolygonfromclick-active Whether\n *     the directive is active or not.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-angle\n *     Angle in radians. A value of 0 will have one of the shape's point\n *     facing up. Default value is 0.\n * @htmlAttribute {ol.Collection} ngeo-createregularpolygonfromclick-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {ol.Map} ngeo-createregularpolygonfromclick-map The map.\n * @htmlAttribute {number} ngeo-createregularpolygonfromclick-radius Radius\n *     size in map units.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-sides\n *     The number of sides for the regular polygon. Default value is 3.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreateregularpolygonfromclick\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreateregularpolygonfromclickController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreateregularpolygonfromclickActive',\n      'angle': '<?ngeoCreateregularpolygonfromclickAngle',\n      'features': '=ngeoCreateregularpolygonfromclickFeatures',\n      'map': '=ngeoCreateregularpolygonfromclickMap',\n      'radius': '<ngeoCreateregularpolygonfromclickRadius',\n      'sides': '<?ngeoCreateregularpolygonfromclickSides'\n    }\n  };\n};\n\nexports.directive(\n  'ngeoCreateregularpolygonfromclick',\n  exports.directive_\n);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreateregularpolygonfromclickController\n */\nexports.Controller_ = function($scope) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.angle;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.sides;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {ngeo.interaction.DrawRegularPolygonFromClick}\n   * @private\n   */\n  this.interaction_;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.interactionListenerKey_;\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n\n  this.interaction_ = new ngeoInteractionDrawRegularPolygonFromClick({\n    angle: this.angle,\n    radius: this.radius,\n    sides: this.sides\n  });\n  this.interaction_.setActive(this.active);\n\n  this.interactionListenerKey_ = olEvents.listen(\n    this.interaction_,\n    'drawend',\n    this.handleDrawEnd_,\n    this\n  );\n\n  this.map.addInteraction(this.interaction_);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(evt) {\n  const feature = new olFeature(evt.feature.getGeometry());\n  this.features.push(feature);\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  olEvents.unlistenByKey(this.interactionListenerKey_);\n  this.interaction_.setActive(false);\n  this.map.removeInteraction(this.interaction_);\n};\n\n\nexports.controller(\n  'ngeoCreateregularpolygonfromclickController',\n  exports.Controller_\n);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.toolsComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreateregularpolygonfromclickComponent from 'ngeo/editing/createregularpolygonfromclickComponent.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingToolsComponent', [\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoEditingCreateregularpolygonfromclickComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting/toolsComponent', require('./toolsComponent.html'));\n});\n\n\n/**\n * A list of additional options for this directive that are not defined as\n * html attributes. All keys of this hash are optional. For the complete list\n * of keys and their possible values, see in gmfx.js, under:\n * `gmfx.ObjectEditingToolsOptions`.\n */\nexports.value('gmfObjectEditingToolsOptions', {});\n\n\n/**\n * Directive used to edit the geometry of a single feature using advanced\n * tools.\n *\n * Example:\n *\n *     <gmf-objecteditingtools\n *         gmf-objecteditingtools-active=\"ctrl.objectEditingActive\"\n *         gmf-objecteditingtools-copyfromactive=\"ctrl.objectEditingCopyFromActive\"\n *         gmf-objecteditingtools-deletefromactive=\"ctrl.objectEditingDeleteFromActive\"\n *         gmf-objecteditingtools-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objecteditingtools-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objecteditingtools-map=\"::ctrl.map\"\n *         gmf-objecteditingtools-process=\"::ctrl.process\"\n *         gmf-objecteditingtools-queryablelayerinfo=\"::ctrl.queryableLayerInfo\"\n *         gmf-objecteditingtools-requireslayer=\"ctrl.requiresLayer\"\n *         gmf-objecteditingtools-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objecteditingtools>\n *\n * @htmlAttribute {boolean} gmf-objecteditingtools-active Whether the\n *     directive is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-copyfromactive Whether the\n *     'Copy from' tool is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-deletefromactive Whether the\n *     'Delete from' tool is active or not.\n * @htmlAttribute {ol.Feature} gmf-objecteditingtools-feature The feature to\n *     edit.\n * @htmlAttribute {string} gmf-objecteditingtools-geomtype The geometry type.\n * @htmlAttribute {ol.Map} gmf-objecteditingtools-map The map.\n * @htmlAttribute {string} gmf-objectediting-process Determines the\n *     behavior to adopt when sketch features are added.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objectediting-queryablelayerinfo\n *     Queryable layer information.\n * @htmlAttribute {boolean} gmf-objectediting-requireslayer Flag that determines\n *     if the currently active tool requires a queryable layer or not.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditingtools\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfObjecteditingtoolsController as oetCtrl',\n    scope: {\n      'active': '=gmfObjecteditingtoolsActive',\n      'copyFromActive': '=gmfObjecteditingtoolsCopyfromactive',\n      'deleteFromActive': '=gmfObjecteditingtoolsDeletefromactive',\n      'feature': '<gmfObjecteditingtoolsFeature',\n      'geomType': '<gmfObjecteditingtoolsGeomtype',\n      'map': '<gmfObjecteditingtoolsMap',\n      'process': '=gmfObjecteditingtoolsProcess',\n      'queryableLayerInfo': '=gmfObjecteditingtoolsQueryablelayerinfo',\n      'requiresLayer': '=gmfObjecteditingtoolsRequireslayer',\n      'sketchFeatures': '<gmfObjecteditingtoolsSketchfeatures'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/objectediting/toolsComponent'\n  };\n};\n\nexports.directive('gmfObjecteditingtools',\n  exports.directive_);\n\n\n/**\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingtoolsController\n */\nexports.Controller_ = function($injector, $scope, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.queryableLayerInfo;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.requiresLayer;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  // == Other properties ==\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomTypePolygon = ngeoGeometryType.POLYGON;\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.toolActiveNames_ = [];\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  this.registerTool_('drawActive',\n    exports.ProcessType.ADD);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.eraseActive = false;\n\n  this.registerTool_('eraseActive',\n    exports.ProcessType.DELETE);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawTriangleActive = false;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleAngle = Math.PI / 180 * 90; // 90 degrees\n\n  const oeToolsOptions = /** @type {gmfx.ObjectEditingToolsOptions} */ (\n    $injector.get('gmfObjectEditingToolsOptions'));\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleRadius = oeToolsOptions.regularPolygonRadius !== undefined ?\n    oeToolsOptions.regularPolygonRadius : 100;\n\n  this.registerTool_('drawTriangleActive',\n    exports.ProcessType.ADD);\n\n  this.registerTool_('copyFromActive',\n    exports.ProcessType.ADD, true);\n\n  this.registerTool_('deleteFromActive',\n    exports.ProcessType.DELETE, true);\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Register a tool using its `active` property name and what behavior it should\n * have when it is active and a sketch feature is added\n *\n * This method:\n *  - registers a watcher on the tool active property to manage this directive\n *    main active property, i.e the directive is considered active when one\n *    of the tools is active,  otherwise it's not active.\n *\n *  - creates a `ngeo.misc.ToolActivate` object and registers it in a group so\n *    that only one tool can be active at a time\n *\n * @param {string} toolActiveName The name of the active property for the tool.\n * @param {string} process The behavior the tool should use when active\n *     and when sketch features are added.\n * @param {boolean=} opt_requiresLayer Whether the tool requires the queryable\n *     layer or not. Defaults to `false`.\n * @private\n */\nexports.Controller_.prototype.registerTool_ = function(\n  toolActiveName, process, opt_requiresLayer\n) {\n\n  const requiresLayer = opt_requiresLayer === true;\n\n  this.scope_.$watch(\n    () => this[toolActiveName],\n    this.handleToolActiveChange_.bind(this, process, requiresLayer)\n  );\n\n  const group = `${exports.Controller_.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolActivate = new ngeoMiscToolActivate(this, toolActiveName);\n  this.ngeoToolActivateMgr_.registerTool(group, toolActivate, false);\n\n  this.toolActiveNames_.push(toolActiveName);\n\n};\n\n\n/**\n * Called when any of the tool 'active' property changes.\n * @param {string} process The behavior the tool should use when active.\n * @param {boolean} requiresLayer Whether the tool requires the queryable\n *     layer or not.\n * @param {boolean|undefined} newVal New value.\n * @private\n */\nexports.Controller_.prototype.handleToolActiveChange_ = function(\n  process, requiresLayer, newVal\n) {\n\n  // Update process if a tool was activated.\n  if (newVal) {\n    this.process = process;\n    this.requiresLayer = requiresLayer;\n  }\n\n  // Update active property\n  let active = false;\n  for (let i = 0, ii = this.toolActiveNames_.length; i < ii; i++) {\n    active = active || this[this.toolActiveNames_[i]];\n    if (active) {\n      break;\n    }\n  }\n  this.active = active;\n\n  if (!this.active) {\n    this.requiresLayer = false;\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {};\n\n\nexports.controller('GmfObjecteditingtoolsController',\n  exports.Controller_);\n\n\n/**\n * @const\n * @private\n */\nexports.Controller_.NAMESPACE_ = 'oet';\n\n\n/**\n * @enum {string}\n */\nexports.ProcessType = {\n  ADD: 'add',\n  DELETE: 'delete'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.component\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfObjecteditingGeom from 'gmf/objectediting/geom.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\n\n\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport {OL3Parser} from 'jsts/io';\nconst jsts = {\n  io: {\n    OL3Parser,\n  },\n};\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjectEditingComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting', require('./component.html'));\n});\n\n\nexports.value('gmfObjecteditingTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfObjecteditingTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/objectediting';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfObjecteditingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfObjecteditingTemplateUrl($element, $attrs, gmfObjecteditingTemplateUrl) {\n  return gmfObjecteditingTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Component used to edit the geometry of a single feature using advanced\n * tools. The geometry must be Multi.\n *\n * Example:\n *\n *     <gmf-objectediting\n *         gmf-objectediting-active=\"ctrl.objectEditingActive\"\n *         gmf-objectediting-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objectediting-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objectediting-layernodeid=\"ctrl.objectEditingLayerNodeId\"\n *         gmf-objectediting-map=\"::ctrl.map\"\n *         gmf-objectediting-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objectediting>\n *\n * @htmlAttribute {boolean} gmf-objectediting-active Whether the component is\n *     active or not.\n * @htmlAttribute {ol.Feature} gmf-objectediting-feature The feature to edit.\n * @htmlAttribute {string} gmf-objectediting-geomtype The geometry type.\n * @htmlAttribute {number} gmf-objectediting-layernodeid The GMF layer node id.\n * @htmlAttribute {ol.Map} gmf-objectediting-map The map.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @ngdoc component\n * @ngname gmfObjectediting\n */\nexports.component_ = {\n  controller: 'GmfObjecteditingController as oeCtrl',\n  bindings: {\n    'active': '=gmfObjecteditingActive',\n    'feature': '<gmfObjecteditingFeature',\n    'geomType': '<gmfObjecteditingGeomtype',\n    'layerNodeId': '<gmfObjecteditingLayernodeid',\n    'map': '<gmfObjecteditingMap',\n    'sketchFeatures': '<gmfObjecteditingSketchfeatures'\n  },\n  templateUrl: gmfObjecteditingTemplateUrl\n};\n\nexports.component('gmfObjectediting', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {!gmf.objectediting.Query} gmfObjectEditingQuery Gmf ObjectEditing\n *     query service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\ngoog.require('ngeo.map.LayerHelper');\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingController\n */\nexports.Controller = function($scope, $timeout, gettextCatalog,\n  gmfEditFeature, gmfObjectEditingQuery, gmfTreeManager,\n  ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.layerNodeId;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {!gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n  /**\n   * @type {Array.<!gmfx.ObjectEditingQueryableLayerInfo>}\n   * @export\n   */\n  this.queryableLayersInfo;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.selectedQueryableLayerInfo;\n\n  /**\n   * Whether to show or hide the queryable list of layers. It is shown only\n   * when a tool requires it, which is managed in the `gmf-objecteditingtools`\n   * component.\n   * @type {boolean}\n   * @export\n   */\n  this.queryableLayerListShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.featureHasGeom;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.skipGeometryChange_ = false;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process = gmfObjecteditingToolsComponent.ProcessType.ADD;\n\n  /**\n   * @type {?ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_ = null;\n\n  /**\n   * @type {!jsts.io.OL3Parser}\n   * @private\n   */\n  this.jstsOL3Parser_ = new jsts.io.OL3Parser();\n\n  /**\n   * The state of the feature determines whether the next 'save' request\n   * should be an 'insert' or 'update' one.\n   * @type {string|undefined}\n   * @private\n   */\n  this.state_;\n\n  /**\n   * @type {!Array.<?ol.geom.Geometry>}\n   * @private\n   */\n  this.geometryChanges_ = [];\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStylesWoVertice_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStylesWoVertice_ = {};\n\n  /**\n   * Flag that is toggled while a request is pending.\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ol.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features_,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.modifyToolActivate_ = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.toolsToolActivate_ = new ngeoMiscToolActivate(this, 'toolsActive');\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.gmfObjectEditingQuery_.getQueryableLayersInfo().then(\n    this.handleGetQueryableLayersInfo_.bind(this)\n  );\n\n  this.scope_.$watchCollection(\n    () => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    },\n    (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(\n            this.registerTreeCtrl_.bind(this)\n          );\n        }\n      });\n    }\n  );\n\n  const geometry = this.feature.getGeometry();\n  this.state_ = geometry ? exports.Controller.State.UPDATE :\n    exports.Controller.State.INSERT;\n\n  this.scope_.$watchCollection(\n    () => this.geometryChanges_,\n    (newVal, oldVal) => {\n      if (newVal.length) {\n        if (newVal.length === 1) {\n          this.dirty = false;\n        } else {\n          this.dirty = true;\n        }\n      }\n    }\n  );\n\n  const defaultColor = [39, 155, 145];\n  const dirtyColor = [153, 51, 51];\n  this.initializeStyles_(this.defaultStyles_, defaultColor);\n  this.initializeStyles_(this.defaultStylesWoVertice_, defaultColor, false);\n  this.initializeStyles_(this.dirtyStyles_, dirtyColor);\n  this.initializeStyles_(this.dirtyStylesWoVertice_, dirtyColor, false);\n\n  this.scope_.$watch(\n    () => this.dirty,\n    this.setFeatureStyle_.bind(this)\n  );\n\n  this.features_.push(this.feature);\n\n  this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geometry);\n\n  // Toggle on\n  this.initializeInteractions_();\n  this.registerInteractions_();\n  this.toggle_(true);\n  this.resetGeometryChanges_();\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n// == API methods ==\n\n\n/**\n * Delete the feature after asking for a confirmation.\n * @export\n */\nexports.Controller.prototype.delete = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.dirty = false;\n    this.pending = true;\n\n    this.gmfEditFeature_.deleteFeature(\n      this.layerNodeId,\n      this.feature\n    ).then(\n      this.handleDeleteFeature_.bind(this)\n    );\n  }\n\n};\n\n\n/**\n * Save the current modifications.\n * @export\n */\nexports.Controller.prototype.save = function() {\n\n  this.pending = true;\n\n  // The geometry of the feature may contain Z in its coordinates, which\n  // GMF doesn't support.  This section ensures that the geometry gets purged\n  // of all Z from the coordinates before saving.\n  //\n  // Also, this is only done before saving on a clone of the feature. Doing\n  // it directly on the feature makes JSTS complain.\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    gmfObjecteditingGeom.toXY(geometry);\n  }\n\n  if (this.state_ === exports.Controller.State.INSERT) {\n    this.gmfEditFeature_.insertFeatures(\n      this.layerNodeId,\n      [feature]\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  } else if (this.state_ === exports.Controller.State.UPDATE) {\n    this.gmfEditFeature_.updateFeature(\n      this.layerNodeId,\n      feature\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  }\n};\n\n\n/**\n * Undo the latest modifications.\n * @export\n */\nexports.Controller.prototype.undo = function() {\n\n  if (this.geometryChanges_.length <= 1) {\n    return;\n  }\n\n  this.skipGeometryChange_ = true;\n\n  this.geometryChanges_.pop();\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[this.geometryChanges_.length - 1]);\n\n  this.feature.setGeometry(clone);\n\n  this.skipGeometryChange_ = false;\n};\n\n\n/**\n * Undo the latest modifications.\n * @return {boolean} Whether the state is INSERT or not.\n * @export\n */\nexports.Controller.prototype.isStateInsert = function() {\n  return this.state_ === exports.Controller.State.INSERT;\n};\n\n\n// == Private methods ==\n\n\n/**\n * Called after a delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleDeleteFeature_ = function(resp) {\n  this.feature.setGeometry(null);\n  this.resetGeometryChanges_();\n  this.state_ = exports.Controller.State.INSERT;\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Called after an 'insert' or 'update' request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleEditFeature_ = function(resp) {\n  // (1) Update the id\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n  }\n  // (2) Reset geometry changes\n  this.resetGeometryChanges_();\n  // (3) Update state\n  if (this.feature.getGeometry()) {\n    this.state_ = exports.Controller.State.UPDATE;\n  } else {\n    this.state_ = exports.Controller.State.INSERT;\n  }\n  // (4) No longer pending\n  this.pending = false;\n  // (5) Refresh WMS layer\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. remove them from the map\n * @private\n */\nexports.Controller.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Activate or deactivate this component.\n * @param {boolean} active Whether to activate this component or not.\n * @private\n */\nexports.Controller.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const uid = `${exports.Controller.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    keys.push(\n      olEvents.listen(\n        this.feature,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'change:active',\n        this.setFeatureStyle_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'modifyend',\n        this.handleModifyInteractionModifyEnd_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        window,\n        'beforeunload',\n        this.handleWindowBeforeUnload_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.sketchFeatures,\n        'add',\n        this.handleSketchFeaturesAdd_,\n        this\n      )\n    );\n\n    toolMgr.registerTool(uid, this.modifyToolActivate_, true);\n    toolMgr.registerTool(uid, this.toolsToolActivate_, false);\n\n  } else {\n\n    this.undoAllChanges_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(uid, this.modifyToolActivate_);\n    toolMgr.unregisterTool(uid, this.toolsToolActivate_);\n\n  }\n\n  this.modify_.setActive(active);\n};\n\n\n/**\n * Undo all current changes.\n * @private\n */\nexports.Controller.prototype.undoAllChanges_ = function() {\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[0]);\n  this.feature.setGeometry(clone);\n\n  this.resetGeometryChanges_();\n  this.dirty = false;\n  this.setFeatureStyle_();\n};\n\n\n/**\n * Reset the array of geometry changes.  If there are more than one changes,\n * reset them entirely. Then, if there's no changes, clone the current geometry\n * as the first entry. One entry means that there's no changes.\n * @private\n */\nexports.Controller.prototype.resetGeometryChanges_ = function() {\n  if (this.geometryChanges_.length > 1) {\n    this.geometryChanges_.length = 0;\n  }\n  if (this.geometryChanges_.length === 0) {\n    const geometry = this.feature.getGeometry();\n    const clone = exports.Controller.cloneGeometry_(geometry);\n    this.geometryChanges_.push(clone);\n  }\n};\n\n\n/**\n * Called after the modification interaction has completed modifying the\n * existing geometry. The new geometry is pushed in the changes array.\n * If the geometry type is `MultiPolygon`, we check if any of the inner\n * geometries intersects with one an other first. Those that does are merged\n * before being pushed to the changes.\n *\n * @param {ol.interaction.Modify.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleModifyInteractionModifyEnd_ = function(\n  evt\n) {\n  let geometry = this.feature.getGeometry();\n\n  if (geometry instanceof olGeomMultiPolygon) {\n    const jstsGeom = this.jstsOL3Parser_.read(geometry);\n    const jstsBuffered = jstsGeom.buffer(0);\n    geometry = ngeoUtils.toMulti(this.jstsOL3Parser_.write(jstsBuffered));\n    this.skipGeometryChange_ = true;\n    this.feature.setGeometry(geometry.clone());\n    this.skipGeometryChange_ = false;\n  }\n\n  const clone = exports.Controller.cloneGeometry_(geometry);\n  googAsserts.assert(clone);\n  this.geometryChanges_.push(clone);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {gmfx.StylesObject} styles Hash of style.\n * @param {ol.Color} color Color.\n * @param {boolean=} opt_incVertice Whether to include vertice or not. Defaults\n *     to `true`.\n * @private\n */\nexports.Controller.prototype.initializeStyles_ = function(\n  styles, color, opt_incVertice\n) {\n\n  const incVertice = opt_incVertice !== false;\n  const rgbaColor = color.slice();\n  rgbaColor.push(0.3);\n\n  const image = new olStyleCircle({\n    radius: 8,\n    stroke: new olStyleStroke({\n      color: color,\n      width: 1\n    }),\n    fill: new olStyleFill({color: rgbaColor})\n  });\n\n  styles['Point'] = new olStyleStyle({\n    image\n  });\n  styles['MultiPoint'] = new olStyleStyle({\n    image\n  });\n\n  styles['LineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['LineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiLineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiLineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n  styles['Polygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['Polygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiPolygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiPolygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n};\n\n\n/**\n * Set the style of the feature depending on:\n *  - the geometry type\n *  - the dirty state of the component\n *  - whether the modify control is active or not\n *\n * @private\n */\nexports.Controller.prototype.setFeatureStyle_ = function() {\n  const geometry = this.feature.getGeometry();\n  if (geometry) {\n    const geomType = geometry.getType();\n    const modifyActive = this.modify_.getActive();\n    let style;\n    if (this.dirty) {\n      if (modifyActive) {\n        style = this.dirtyStyles_[geomType];\n      } else {\n        style = this.dirtyStylesWoVertice_[geomType];\n      }\n    } else {\n      if (modifyActive) {\n        style = this.defaultStyles_[geomType];\n      } else {\n        style = this.defaultStylesWoVertice_[geomType];\n      }\n    }\n    this.feature.setStyle(style);\n  }\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf', i.e. groups are\n * excluded.\n *\n * If the Layertree controller node id is equal to the `layerNodeId` configured\n * with this component, then find the WMS layer associated with it for\n * for refresh purpose.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.Controller.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (\n    treeCtrl.node);\n  if (node.children && node.children.length) {\n    return;\n  }\n\n  // Set editable WMS layer for refresh purpose\n  if (node.id === this.layerNodeId) {\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage || layer instanceof olLayerTile);\n    this.editableWMSLayer_ = layer;\n  }\n\n};\n\n\n/**\n * Unregisters all currently registered Layertree controllers.\n *\n * Unset the WMS layer associated with the `layerNodeId` configured with\n * this component.\n *\n * @private\n */\nexports.Controller.prototype.unregisterAllTreeCtrl_ = function() {\n  this.editableWMSLayer_ = null;\n};\n\n\n/**\n * Refresh the WMS layer, if set.\n * @private\n */\nexports.Controller.prototype.refreshWMSLayer_ = function() {\n  if (this.editableWMSLayer_) {\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n};\n\n\n/**\n * Called before the window unloads. Show a confirmation message if there are\n * unsaved modifications.\n * @param {Event} e Event.\n * @return {string} Message\n * @private\n */\nexports.Controller.prototype.handleWindowBeforeUnload_ = function(e) {\n  const gettextCatalog = this.gettextCatalog_;\n  if (this.dirty) {\n    const msg = gettextCatalog.getString('There are unsaved changes.');\n    (e || window.event).returnValue = msg;\n    return msg;\n  }\n  return '';\n};\n\n\n/**\n * Called when a feature is added to the collection of sketch features.\n * Depending on the current behaviour, use the added sketch feature to process\n * the existing geometry.\n *\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleSketchFeaturesAdd_ = function(evt) {\n  const sketchFeature = /** @type {ol.Feature} */ (evt.element);\n  const sketchGeom = /** @type {ol.geom.Geometry} */ (\n    sketchFeature.getGeometry());\n\n  const geom = this.feature.getGeometry();\n\n  if (geom) {\n    const jstsGeom = this.jstsOL3Parser_.read(geom);\n    const jstsSketchGeom = this.jstsOL3Parser_.read(sketchGeom);\n    let jstsProcessedGeom;\n\n    if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n      jstsProcessedGeom = jstsGeom.union(jstsSketchGeom);\n    } else {\n      if (jstsGeom.intersects(jstsSketchGeom)) {\n        jstsProcessedGeom = jstsGeom.difference(jstsSketchGeom);\n      }\n    }\n\n    if (jstsProcessedGeom) {\n      const processedGeom = this.jstsOL3Parser_.write(jstsProcessedGeom);\n      const multiGeom = ngeoUtils.toMulti(processedGeom);\n      this.feature.setGeometry(multiGeom.clone());\n    }\n\n  } else if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n    this.feature.setGeometry(ngeoUtils.toMulti(sketchGeom.clone()));\n  }\n\n  this.sketchFeatures.clear();\n};\n\n\n/**\n * Called when the geometry property of the feature changes, i.e. not when the\n * geometry itself changes but when a new geometry is set to the feature.\n *\n * This happens either when resetting the geometry to null, in which case\n * there's nothing to do here. Otherwise, it happens after the combinaison\n * of a sketch geometry with the existing feature geometry. This new geom\n * is pushed in the `geometryChanges_` array.\n *\n * @private\n */\nexports.Controller.prototype.handleFeatureGeometryChange_ = function() {\n  const geom = this.feature.getGeometry();\n  this.timeout_(() => {\n    this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geom);\n  });\n\n  if (this.skipGeometryChange_) {\n    return;\n  }\n\n  if (geom) {\n    // Use a timeout here, because there can be a scope digest already in\n    // progress. For example, with tools that requires the user to draw\n    // features on the map, we would need to manually call:\n    // this.scope_.$apply();\n    // For tools that use promises instead, such as the \"copy/delete\" from,\n    // a scope is already in progress so we must not invoke it again.\n    this.timeout_(() => {\n      this.geometryChanges_.push(geom.clone());\n    });\n  }\n};\n\n\n/**\n * @param {Array.<gmfx.ObjectEditingQueryableLayerInfo>} layersInfo List\n *     of queryable layers information, which contains the node and ogcServer.\n * @private\n */\nexports.Controller.prototype.handleGetQueryableLayersInfo_ = function(layersInfo) {\n  this.queryableLayersInfo = layersInfo;\n  if (this.queryableLayersInfo.length) {\n    this.selectedQueryableLayerInfo = this.queryableLayersInfo[0];\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller.prototype.handleDestroy_ = function() {\n  this.features_.clear();\n  this.toggle_(false);\n  this.unregisterInteractions_();\n};\n\n\n// == Static methods and type definitions ==\n\n\n/**\n * Utility method that gets the clone of a geometry, which can be null or\n * undefined. In the latter case, a null value is returned instead of a\n * geometry.\n * @param {?ol.geom.Geometry|undefined} geometry A geometry, undefined or\n *     null value.\n * @return {?ol.geom.Geometry} A geometry clone or null value.\n * @private\n */\nexports.Controller.cloneGeometry_ = function(geometry) {\n  let clone = null;\n  if (geometry) {\n    clone = geometry.clone();\n  }\n  return clone;\n};\n\n\n/**\n * @const\n * @private\n */\nexports.Controller.NAMESPACE_ = 'oe';\n\n\n/**\n * @enum {string}\n */\nexports.Controller.State = {\n  INSERT: 'insert',\n  UPDATE: 'update'\n};\n\n\nexports.controller('GmfObjecteditingController',\n  exports.Controller);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Manager\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * A service that looks for certain parameters in the url and use them to fetch\n * a feature using the GMF protocol.\n *\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($q, gmfEditFeature, ngeoLocation) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.getFeatureDefered_ = null;\n\n};\n\n\n/**\n * Use the EditFeature service to fetch a single feature using parameters in\n * the url. The method returns a promise that has the feature as argument in\n * the callback method. If any parameter in the url is missing, `null` is\n * returned, otherwise the query is made. If the query returns a feature, it\n * is returned, otherwise one is created with empty geometry and with the\n * property set.\n *\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeature = function() {\n\n  if (!this.getFeatureDefered_) {\n    this.getFeatureDefered_ = this.q_.defer();\n\n    const geomType = this.ngeoLocation_.getParam(\n      exports.Param.GEOM_TYPE);\n    const id = this.ngeoLocation_.getParam(\n      exports.Param.ID);\n    const layer = this.ngeoLocation_.getParam(\n      exports.Param.LAYER);\n    const property = this.ngeoLocation_.getParam(\n      exports.Param.PROPERTY);\n    const theme = this.ngeoLocation_.getParam(\n      exports.Param.THEME);\n\n    if (geomType && id && layer && property && theme) {\n      this.gmfEditFeature_.getFeaturesWithComparisonFilters(\n        [layer],\n        [{\n          operator: 'eq',\n          property: property,\n          value: id\n        }]\n      ).then(this.handleGetFeatures_.bind(this, property, id));\n    } else {\n      this.getFeatureDefered_.resolve(null);\n    }\n  }\n\n  return this.getFeatureDefered_.promise;\n\n};\n\n\n/**\n * @return {string|undefined} The geometry type.\n * @export\n */\nexports.prototype.getGeomType = function() {\n  return this.ngeoLocation_.getParam(\n    exports.Param.GEOM_TYPE);\n};\n\n\n/**\n * @return {number|undefined} The gmf layer node id.\n * @export\n */\nexports.prototype.getLayerNodeId = function() {\n  return this.ngeoLocation_.getParamAsInt(\n    exports.Param.LAYER);\n};\n\n\n/**\n * Called after getting features with comparison filters. Resolve the deferred\n * promise with the first returned feature (if any), otherwise resolve it\n * with a feature created with an empty geometry and the property key + value\n * that was used in the attempt to fetch it.\n *\n * @param {string} key Property key.\n * @param {string} value Property value.\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(key, value, features) {\n  let feature;\n\n  if (features.length) {\n    feature = features[0];\n  } else {\n    const featureProperties = {};\n    featureProperties[key] = value;\n    featureProperties['geometry'] = null;\n    feature = new olFeature(featureProperties);\n  }\n\n  this.getFeatureDefered_.resolve(feature);\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Param = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GEOM_TYPE: 'objectediting_geomtype',\n  /**\n   * @type {string}\n   * @export\n   */\n  ID: 'objectediting_id',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAYER: 'objectediting_layer',\n  /**\n   * @type {string}\n   * @export\n   */\n  PROPERTY: 'objectediting_property',\n  /**\n   * @type {string}\n   * @export\n   */\n  THEME: 'objectediting_theme'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingManager', [\n  gmfEditingEditFeature.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\nexports.module.service('gmfObjectEditingManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.module\n */\nimport gmfObjecteditingComponent from 'gmf/objectediting/component.js';\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\nimport gmfObjecteditingManager from 'gmf/objectediting/Manager.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingModule', [\n  gmfObjecteditingComponent.name,\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  gmfObjecteditingManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module app.oeedit.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './sass/oeedit.scss';\nimport appBase from '../appmodule.js';\nimport gmfObjecteditingModule from 'gmf/objectediting/module.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, $timeout) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.oeEditActive = false;\n\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  ngeoToolActivateMgr.unregisterGroup('mapTools');\n\n  const oeEditToolActivate = new ngeoMiscToolActivate(this, 'oeEditActive');\n  ngeoToolActivateMgr.registerTool('mapTools', oeEditToolActivate, true);\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool('mapTools', queryToolActivate, false);\n\n  // Set edit tool as default active one\n  $timeout(() => {\n    this.oeEditActive = true;\n  });\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    wrapX: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures = new olCollection();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      features: this.sketchFeatures,\n      wrapX: false\n    })\n  });\n\n  /**\n   * @type {gmf.theme.Themes} gmfObjectEditingManager The gmf theme service\n   */\n  const gmfThemes = $injector.get('gmfThemes');\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      // Add layer vector after\n      this.map.addLayer(this.vectorLayer_);\n      this.map.addLayer(this.sketchLayer_);\n    }\n  });\n\n  /**\n   * @type {gmf.objectediting.Manager} gmfObjectEditingManager The gmf\n   *     ObjectEditing manager service.\n   */\n  const gmfObjectEditingManager = $injector.get('gmfObjectEditingManager');\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.oeGeomType = gmfObjectEditingManager.getGeomType();\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.oeLayerNodeId = gmfObjectEditingManager.getLayerNodeId();\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.oeFeature = null;\n\n  gmfObjectEditingManager.getFeature().then((feature) => {\n    this.oeFeature = feature;\n    if (feature) {\n      this.vectorSource_.addFeature(feature);\n    }\n  });\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {color: '#0000A0'},\n    'srtm': {color: '#00A000'}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: ngeoProjEPSG2056,\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: ngeoProjEPSG21781,\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\nexports.module = angular.module('Appoeedit', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfObjecteditingModule.name,\n]);\n\nexports.module.value('gmfContextualdatacontentTemplateUrl', 'gmf/contextualdata');\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/contextualdata', require('./contextualdata.html'));\n});\n\nexports.module.controller('OEEditController', exports);\n\nexport default exports;\n"],"sourceRoot":""}
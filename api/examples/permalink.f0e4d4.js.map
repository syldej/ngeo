{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./examples/permalink.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","32","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","LINE_STRING","POINT","POLYGON","opt_options","olFormatTextFeature","this","options","undefined","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","defaultValues_","defaultValues","olBase","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","CHAR64_","feature","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","assert","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","olColor","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","split","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","olGeomLineString","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","ii","olGeomMultiLineString","readPointGeometry_","olGeomPoint","readMultiPointGeometry_","olGeomMultiPoint","readPolygonGeometry_","rings","end","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","jj","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","geometry","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","olArray","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","join","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","_this","features","forEach","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","replace","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","angular","ngeoMapModule","ngeoMiscDebounce","ngeoStatemanagerModule","mapComponent","controller","bindings","map","template","component","MapComponentController","ngeoLocation","ngeoDebounce","ngeoLocation_","ngeoDebounce_","$onInit","view","getView","zoom","getParam","center","setCenter","setZoom","updateParams","z","on","e","getCenter","params","getZoom","drawComponent","layer","DrawComponentController","$scope","scope_","featureSeq_","interaction","_this2","vectorSource","getSource","olInteractionDraw","type","source","setActive","addInteraction","ngeoMiscDecorate","fhFormat","ngeoFormatFeatureHash","getFeatures","encodedFeatures","writeFeatures","$applyAsync","readFeatures","addFeatures","clearLayer","clear","deleteParam","MainController","olMap","layers","olLayerTile","olSourceOSM","olSourceVector","vectorLayer","olLayerVector","setMap"],"mappings":"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","file":"permalink.f0e4d4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t32: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([498,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) && options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  return new olGeomLineString(flatCoordinates, olGeomGeometryLayout.XY);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  return new olGeomMultiLineString(flatCoordinates, olGeomGeometryLayout.XY, ends);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  return new olGeomPoint(flatCoordinates, olGeomGeometryLayout.XY);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  return new olGeomMultiPoint(flatCoordinates, olGeomGeometryLayout.XY);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  return new olGeomPolygon(flatCoordinates, olGeomGeometryLayout.XY, ends);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  return new olGeomMultiPolygon(flatCoordinates, olGeomGeometryLayout.XY, endss);\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module app.permalink\n */\nconst exports = {};\n\nimport './permalink.css';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\n\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport olMap from 'ol/Map.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name,\n  ngeoMiscDebounce.name,\n  ngeoStatemanagerModule.name,\n]);\n\n/**\n * An application-specific map component that updates the URL in the browser\n * address bar when the map view changes. It also sets the initial view based\n * on the URL query params at init time.\n *\n * This component gets a reference to the map instance through the \"app-map\"\n * attribute.\n *\n * @type {!angular.Component}\n */\nexports.mapComponent = {\n  controller: 'AppMapController as ctrl',\n  bindings: {\n    'map': '=appMap'\n  },\n  template: '<div ngeo-map=ctrl.map></div>'\n};\n\n\nexports.module.component('appMap', exports.mapComponent);\n\n\n/**\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @ngInject\n */\nexports.MapComponentController = function(ngeoLocation, ngeoDebounce) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n};\n\nexports.module.controller('AppMapController', exports.MapComponentController);\n\nexports.MapComponentController.prototype.$onInit = function() {\n  const view = this.map.getView();\n\n  let zoom = this.ngeoLocation_.getParam('z');\n  zoom = zoom !== undefined ? +zoom : 4;\n\n  const x = this.ngeoLocation_.getParam('x');\n  const y = this.ngeoLocation_.getParam('y');\n  const center = (x !== undefined) && (y !== undefined) ?\n    [+x, +y] : [0, 0];\n\n  view.setCenter(center);\n  view.setZoom(zoom);\n\n  this.ngeoLocation_.updateParams({\n    'z': zoom,\n    'x': Math.round(center[0]),\n    'y': Math.round(center[1])\n  });\n\n  view.on('propertychange',\n    this.ngeoDebounce_(\n      /**\n       * @param {ol.Object.Event} e Object event.\n       */\n      (e) => {\n        const center = view.getCenter();\n        const params = {\n          'z': view.getZoom(),\n          'x': Math.round(center[0]),\n          'y': Math.round(center[1])\n        };\n        this.ngeoLocation_.updateParams(params);\n      }, 300, /* invokeApply */ true));\n};\n\n/**\n * A draw component that adds a simple draw tool.\n *\n * @type {!angular.Component}\n */\nexports.drawComponent = {\n  controller: 'AppDrawController as ctrl',\n  bindings: {\n    'map': '=appDrawMap',\n    'layer': '=appDrawLayer'\n  },\n  template:\n      '<label>Enable drawing:' +\n      '<input type=\"checkbox\" ng-model=\"ctrl.interaction.active\" />' +\n      '</label><br>' +\n      '<button ng-click=\"ctrl.clearLayer()\">Clear layer</button>'\n};\n\n\nexports.module.component('appDraw', exports.drawComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @constructor\n * @export\n * @ngInject\n */\nexports.DrawComponentController = function($scope, ngeoLocation) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   */\n  this.layer;\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.featureSeq_ = 0;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.interaction;\n};\n\nexports.DrawComponentController.prototype.$onInit = function() {\n  const vectorSource = this.layer.getSource();\n\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: vectorSource\n  });\n\n  this.interaction.setActive(false);\n  this.map.addInteraction(this.interaction);\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  this.interaction.on('drawend', function(e) {\n    e.feature.set('id', ++this.featureSeq_);\n  }, this);\n\n  // Deal with the encoding and decoding of features in the URL.\n\n  const fhFormat = new ngeoFormatFeatureHash();\n\n  vectorSource.on('addfeature', (e) => {\n    const feature = e.feature;\n    feature.setStyle(new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: [255, 0, 0, 1],\n        width: 2\n      })\n    }));\n    const features = vectorSource.getFeatures();\n    const encodedFeatures = fhFormat.writeFeatures(features);\n    this.scope_.$applyAsync(() => {\n      this.ngeoLocation_.updateParams({'features': encodedFeatures});\n    });\n  });\n\n  const encodedFeatures = this.ngeoLocation_.getParam('features');\n  if (encodedFeatures !== undefined) {\n    const features = fhFormat.readFeatures(encodedFeatures);\n    this.featureSeq_ = features.length;\n    vectorSource.addFeatures(features);\n  }\n};\n\n\n/**\n * Clear the vector layer.\n * @export\n */\nexports.DrawComponentController.prototype.clearLayer = function() {\n  this.layer.getSource().clear(true);\n  this.featureSeq_ = 0;\n  this.ngeoLocation_.deleteParam('features');\n};\n\nexports.module.controller('AppDrawController', exports.DrawComponentController);\n\n\n/**\n * @constructor\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ]\n  });\n\n\n  const vectorSource = new olSourceVector();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  this.vectorLayer.setMap(this.map);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n"],"sourceRoot":""}
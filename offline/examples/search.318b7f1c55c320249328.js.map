{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./examples/search.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["Object","defineProperty","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__index_js__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","opt_options","options","attributions","undefined","ATTRIBUTION","crossOrigin","url","call","this","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","olProj","exports","module","angular","ngeoBase","name","ngeoMapModule","ngeoSearchModule","searchComponent","bndings","map","controller","controllerAs","template","component","SearchController","$element","$rootScope","$compile","ngeoSearchCreateGeoJSONBloodhound","vectorLayer_","createVectorLayer_","bloodhoundEngine","createAndInitBloodhound_","highlight","hint","minLength","datasets","source","ttAdapter","display","suggestion","get","templates","header","feature","scope","$new","event","window","alert","stopPropagation","html","listeners","select","select_","bind","prototype","$onInit","input","find","on","val","vectorLayer","olLayerVector","olSourceVector","setMap","bloodhound","initialize","dataset","featureGeometry","getGeometry","size","getSize","googAsserts","assert","getSource","clear","addFeature","getView","fit","MainController","olMap","layers","olLayerTile","olSourceOSM","view","olView","center","zoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","projection","tileGrid","createXYZ","extent","extentFromProjection","minZoom","tileSize","tilePixelRatio","tileUrlFunction","urls","transition"],"mappings":"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","file":"search.318b7f1c55c320249328.js","sourcesContent":["/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 5\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 15 17 18 19 20 22 23 24 25 26 27 28","/**\n * @module app.search\n */\nconst exports = {};\n\nimport './search.css';\nimport './common_dependencies.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olProj from 'ol/proj.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoBase.module.name,\n  ngeoMapModule.name,\n  ngeoSearchModule.name\n]);\n\n\n/**\n * @type {!angular.Component}\n */\nexports.searchComponent = {\n  bndings: {\n    'map': '=appSearchMap'\n  },\n  controller: 'AppSearchController',\n  controllerAs: 'ctrl',\n  template:\n      '<input type=\"text\" placeholder=\"search…\" ' +\n      'ngeo-search=\"ctrl.options\" ' +\n      'ngeo-search-datasets=\"ctrl.datasets\" ' +\n      'ngeo-search-listeners=\"ctrl.listeners\">'\n};\n\n\nexports.module.component('appSearch', exports.searchComponent);\n\n\n/**\n * @constructor\n * @param {angular.JQLite} $element Element.\n * @param {angular.Scope} $rootScope Angular root scope.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n *     create GeoJSON Bloodhound service.\n * @ngInject\n */\nexports.SearchController = function($element, $rootScope, $compile, ngeoSearchCreateGeoJSONBloodhound) {\n  /**\n   * @private\n   * @type {angular.JQLite}\n   */\n  this.$element = $element;\n\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = this.createVectorLayer_();\n\n  /** @type {Bloodhound} */\n  const bloodhoundEngine = this.createAndInitBloodhound_(\n    ngeoSearchCreateGeoJSONBloodhound);\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.options = /** @type {TypeaheadOptions} */ ({\n    highlight: true,\n    hint: undefined,\n    minLength: undefined\n  });\n\n  /**\n   * @type {Array.<TypeaheadDataset>}\n   * @export\n   */\n  this.datasets = [{\n    source: bloodhoundEngine.ttAdapter(),\n    display: (suggestion) => {\n      const feature = /** @type {ol.Feature} */ (suggestion);\n      return feature.get('label');\n    },\n    templates: {\n      header: () => '<div class=\"ngeo-header\">Addresses</div>',\n      suggestion: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n\n        // A scope for the ng-click on the suggestion's « i » button.\n        const scope = $rootScope.$new(true);\n        scope['feature'] = feature;\n        scope['click'] = function(event) {\n          window.alert(feature.get('label'));\n          event.stopPropagation();\n        };\n\n        const html = `<p>${feature.get('label')\n        }<button ng-click=\"click($event)\">i</button></p>`;\n        return $compile(html)(scope);\n      }\n    }\n  }];\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.listeners = /** @type {ngeox.SearchDirectiveListeners} */ ({\n    select: exports.SearchController.select_.bind(this)\n  });\n};\n\n\n/**\n * @export\n */\nexports.SearchController.prototype.$onInit = function() {\n  // Empty the search field on focus and blur.\n  const input = this.$element.find('input');\n  input.on('focus blur', () => {\n    input.val('');\n  });\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer.\n * @private\n */\nexports.SearchController.prototype.createVectorLayer_ = function() {\n  const vectorLayer = new olLayerVector({\n    source: new olSourceVector()\n  });\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(this.map);\n  return vectorLayer;\n};\n\n\n/**\n * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n *     create GeoJSON Bloodhound service.\n * @return {Bloodhound} The bloodhound engine.\n * @private\n */\nexports.SearchController.prototype.createAndInitBloodhound_ = function(ngeoSearchCreateGeoJSONBloodhound) {\n  const url = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/fulltextsearch?query=%QUERY';\n  const bloodhound = ngeoSearchCreateGeoJSONBloodhound(\n    url, undefined, olProj.get('EPSG:3857'), olProj.get('EPSG:21781'));\n  bloodhound.initialize();\n  return bloodhound;\n};\n\n\n/**\n * @param {jQuery.Event} event Event.\n * @param {Object} suggestion Suggestion.\n * @param {TypeaheadDataset} dataset Dataset.\n * @this {app.search.SearchController}\n * @private\n */\nexports.SearchController.select_ = function(event, suggestion, dataset) {\n  const feature = /** @type {ol.Feature} */ (suggestion);\n  const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n  const size = this.map.getSize();\n  googAsserts.assert(size !== undefined);\n  const source = this.vectorLayer_.getSource();\n  source.clear(true);\n  source.addFeature(feature);\n  this.map.getView().fit(featureGeometry, {\n    size: size,\n    maxZoom: 16\n  });\n};\n\n\nexports.module.controller('AppSearchController', exports.SearchController);\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/search.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 6\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 14 15 17 18 19 20 22 23 24 25 26 27 28"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./contribs/gmf/examples/simple.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","defineProperty","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","layers_","layers","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_7__functions_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","__WEBPACK_IMPORTED_MODULE_11__obj_js__","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","handleEvent","handleEvent_","handleDownEvent","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","Event","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","ADD","REMOVE","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","__WEBPACK_IMPORTED_MODULE_0__xml_js__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_2__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","getRevision","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","lineStringsCoordinateAtM","coordinatess","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","intersectsExtent","setLayout","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","getPoint","n","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","opt_right","orientLinearRingss","coordinatesss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","MULTI_POLYGON","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","fid","getAttributeNS","nextElementSibling","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","__WEBPACK_IMPORTED_MODULE_7__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","makeChildAppender","writeGeometryElement","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","gmfMapComponent","constant","MainController","olSourceOSM","olView","center","zoom","olExtent","multiGeom","navigator","userAgent","hex","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","typeName","setAttributeNS","writeUpdate_","getKeys","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__extent_js__","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_8__size_js__","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_12__string_js__","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","tileClass","gutter_","gutter","tmpExtent_","setKey","getKeyForParams_","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","hash","getTilePixelRatio","fixedTileUrlFunction","scale","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_13__proj_js__","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"simple.d56f1a808cd992d258e2.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.simple\n */\nconst exports = {};\n\nimport './simple.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/simple.js","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}
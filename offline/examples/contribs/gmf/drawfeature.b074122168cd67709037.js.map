{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/draw/Controller.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/Menu.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./node_modules/openlayers/src/ol/interaction/TranslateEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Translate.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/draw/component.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./contribs/gmf/examples/drawfeature.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./src/editing/exportfeaturesComponent.js"],"names":["__WEBPACK_IMPORTED_MODULE_0__xml_js__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","s","getAllTextContent","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_2__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","coordinates","opt_layout","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","prototype","appendLineString","lineString","flatCoordinates","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","getRevision","Math","sqrt","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","lineStringsCoordinateAtM","getCoordinates","coordinatess","getEnds","getLineString","index","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","MULTI_LINE_STRING","intersectsExtent","extent","setLayout","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","getPoint","n","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","opt_right","orientLinearRingss","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","endss","polygons","jj","MULTI_POLYGON","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","ngeoMapLayerHelper","service","requires","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeoBase","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","key","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","fid","getAttributeNS","nextElementSibling","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoStatemanagerService","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","__WEBPACK_IMPORTED_MODULE_7__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","makeChildAppender","writeGeometryElement","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","olExtent","multiGeom","olGeomPoint","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","navigator","userAgent","hex","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","olEventsCondition","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","typeName","setAttributeNS","writeUpdate_","getKeys","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__extent_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_8__size_js__","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_12__string_js__","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","setKey","getKeyForParams_","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","hash","getTilePixelRatio","fixedTileUrlFunction","scale","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_13__proj_js__","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","olStyleStyle","defaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","createFunction","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","unlisten","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","olInteractionInteraction","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","olStyleStroke","width","radius","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","olFeature","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","ngeoPopover","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","detail","olEventsEvent","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","olOverlay","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","ngeoFormatFeatureHashStyleType","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","olGeomGeometryLayout","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","shift","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_7__functions_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","__WEBPACK_IMPORTED_MODULE_11__obj_js__","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","handleEvent","handleEvent_","handleDownEvent","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","Event","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","ADD","REMOVE","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","min","closestOnCircle","closestOnSegment","distance","segmentData","insert","k","kk","featuresToUpdate","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","atan","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","transform","abs","getFormattedCircleArea","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","delta","getRadiusSquared_","circleExtent","intersectsCoordinate","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","olString","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","assertNumber","getNumber","getOpacityProperty","azimut","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","handleReadExtensions_","extensionsNode","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","__WEBPACK_IMPORTED_MODULE_4__color_js__","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_17__math_js__","__WEBPACK_IMPORTED_MODULE_18__proj_js__","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","anchorOrigin","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","DEFAULT_STYLE_","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","multiGeometry","homogeneous","setCommonGeometryProperties_","readPoint_","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","rad","acos","__WEBPACK_AMD_DEFINE_RESULT__","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","__webpack_amd_options__","olObservable","mapUids_","mapUid","previous","setAt","removeAt","insertAt","current","baseBgLayer","hasUpdates","updatedDimensions","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","toolContext","activePropertyName","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","ModifyEventType","Modify","handleDragEvent","handleDragEvent_","primaryAction","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","RBush","snappedToVertex_","changingFeature_","dragSegments_","Collection","VectorEventType","handleSourceAdd_","handleSourceRemove_","addFeature_","CollectionEventType","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData_","equals","insertVertex_","dragSegment","setGeometryCoordinates_","update","handled","getInteracting","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared_","vertexSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getClosestPoint","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","mapBrowserPointerEvent","registerTool","tool","opt_defaultActivate","entries","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ngeoMapBackgroundLayerMgr","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","$element","recenter","attr","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","ngeoFeatureHelper","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","ngeoMiscFeatureHelper","br","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","menuOptions","opt_overlayOptions","olOverlayPositioning","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","actions","action","data-name","prepend","cls","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","close","closest","Element","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","olInteractionModify","centerFeatures_","handleDown_","handleDrag_","handleUp_","handleKeyUp_","olGeomGeometry","getCenterCoordinate_","centerFeature","forEachFeatureAtPixel","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","olInteractionTranslate","setState_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","handleGeometryChange_","getGeometryCenterPoint_","TranslateEventType","Translate","handleMoveEvent","handleMoveEvent_","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","elem","getViewport","getHitTolerance","setHitTolerance","oldMap","ngeoMiscColorpickerComponent","handleColorSet_","handleFeatureSet_","newFeature","previousFeature","propName","olObject","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","ngeoDrawController","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","drawFeatureCtrl","$compile","contMsg","ngeoInteractionMeasureArea","fromCircle","ngeoInteractionMeasureLength","otherFeatures_","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","TRUE","interactions","getFeatureCollection_","isRectangle","olStructsRBush","boundingExtent","olCoordinate","olMapBrowserPointerEvent","vectorPoints_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","nextFeature","initializeParams_","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","gmfDrawingModule","gmfMapComponent","ngeoMapModule","ngeoMiscToolActivateMgr","constant","MainController","ngeoToolActivateMgr","olView","olSourceOSM","drawFeatureActive","drawFeatureToolActivate","ngeoMiscToolActivate","pointerMoveActive","pointerMoveToolActivate","un","tooltip","trigger","gmfDrawingDrawFeatureComponent","gmfDrawingFeatureStyleComponent","ngeoEditingExportfeaturesComponent","ngeoMiscBtnComponent","ngeoDrawComponent","drawActive","drawToolActivate","mapSelectActive","longPressTimeout_","mapSelectToolActivate","ngeoToolActivateMgr_","selectedFeature","selectedFeatures","modify_","ngeoInteractionModify","menu_","modifyToolActivate","translate_","ngeoInteractionTranslate","rotate_","ngeoInteractionRotate","initializeInteractions_","rotateToolActivate","translateToolActivate","listSelectionInProgress_","handleActiveChange_","unregisterInteractions_","registerInteractions_","handleMapSelectActiveChange_","nameProperty","drawUid","otherUid","toolMgr","handleTranslateEnd_","handleRotateEnd_","selectFeatureFromList","getFeaturesArray","clearFeatures","confirm","mapDiv","assertElement","handleMapClick_","handleMapContextMenu_","handleMapTouchStart_","handleMapTouchEnd_","ret","getEventPixel","ngeoMenu","handleMenuActionClick_","element_","items_","$menu","aria-labelledby","$item","handleMenuItemClick_","formats_","handleElementClick_","handleDestroy_","removeClass","parentElement","off"],"mappings":"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","file":"drawfeature.b074122168cd67709037.js","sourcesContent":["/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivate\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @module ngeo.misc.btnComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.map.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        }, this);\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/Controller.js","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.misc.colorpickerComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Menu.js","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olBase.extent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Translate.js","/**\n * @module ol/interaction/TranslateEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature translation start.\n   * @event ol.interaction.Translate.Event#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event ol.interaction.Translate.Event#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event ol.interaction.Translate.Event#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/TranslateEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport BaseObject from '../Object.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport TranslateEventType from '../interaction/TranslateEventType.js';\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Translate.Event\n * @param {olx.interaction.TranslateOptions=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: Translate.handleDownEvent_,\n    handleDragEvent: Translate.handleDragEvent_,\n    handleMoveEvent: Translate.handleMoveEvent_,\n    handleUpEvent: Translate.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(ol.layer.Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(ol.layer.Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDownEvent_ = function(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleUpEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDragEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleMoveEvent_ = function(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n};\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {ol.Pixel} pixel Pixel coordinate to test for intersection.\n * @param {ol.PluggableMap} map Map to test the intersection on.\n * @return {ol.Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {ol.PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Translate} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.interaction.TranslateEvent}\n * @param {ol.interaction.TranslateEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features translated.\n * @param {ol.Coordinate} coordinate The event coordinate.\n */\nTranslate.Event = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\ninherits(Translate.Event, Event);\nexport default Translate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/component.js","/**\n * @module ngeo.draw.point\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/point.js","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/rectangle.js","/**\n * @module ngeo.draw.text\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/text.js","/**\n * @module ngeo.measure.area\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/area.js","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = olGeomPolygon.fromCircle(circle, 64);\n          event.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/azimut.js","/**\n * @module ngeo.measure.length\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/length.js","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    }, this);\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    }, this);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  }, this);\n\n  if (active && map) {\n    this.features_.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Modify.js","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olCoordinate from 'ol/coordinate.js';\nimport olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  // Get the style for the box and the points\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach(this.addFeature_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyRectangle.js","/**\n * @module gmfapp.drawfeature\n */\nconst exports = {};\n\nimport './drawfeature.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me when gmf.Theme and other dependencies are in a module\n  gmfDrawingModule.name,\n  gmfMapComponent.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper, ngeoFeatures,\n  ngeoToolActivateMgr, ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const view = new olView({\n    center: [0, 0],\n    zoom: 3\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  const featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  featureOverlay.setFeatures(ngeoFeatures);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = true;\n\n  const drawFeatureToolActivate = new ngeoMiscToolActivate(\n    this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', drawFeatureToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pointerMoveActive = false;\n\n  const pointerMoveToolActivate = new ngeoMiscToolActivate(\n    this, 'pointerMoveActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', pointerMoveToolActivate, false);\n\n  $scope.$watch(\n    () => this.pointerMoveActive,\n    (newVal) => {\n      if (newVal) {\n        this.map.on('pointermove', this.handleMapPointerMove_, this);\n      } else {\n        this.map.un('pointermove', this.handleMapPointerMove_, this);\n        $('#pointermove-feature').html('');\n      }\n    }\n  );\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapPointerMove_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  $('#pointermove-feature').html(\n    (feature) ? feature.get(ngeoFormatFeatureProperties.NAME) : 'None'\n  );\n\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/drawfeature.js","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/module.js","/**\n * @module gmf.drawing.drawFeatureComponent\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/drawFeatureComponent.html`\n  };\n};\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.addInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.removeInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/drawFeatureComponent.js","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nngeoBase.module.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    }, this);\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/exportfeaturesComponent.js"],"sourceRoot":""}
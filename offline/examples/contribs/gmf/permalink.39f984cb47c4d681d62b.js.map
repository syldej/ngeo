{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./contribs/gmf/examples/permalink.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","defineProperty","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","layers_","layers","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_7__functions_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","__WEBPACK_IMPORTED_MODULE_11__obj_js__","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","handleEvent","handleEvent_","handleDownEvent","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","Event","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","ADD","REMOVE","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_0__xml_js__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_2__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","getRevision","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","lineStringsCoordinateAtM","coordinatess","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","intersectsExtent","setLayout","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","getPoint","n","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","opt_right","orientLinearRingss","coordinatesss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","MULTI_POLYGON","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","fid","getAttributeNS","nextElementSibling","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","gmfMapComponent","constant","crosshairStyle","olStyleRegularShape","radius2","angle","MainController","olSourceOSM","olView","resolutions","center","zoom","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","__WEBPACK_IMPORTED_MODULE_7__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","makeChildAppender","writeGeometryElement","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","olExtent","multiGeom","navigator","userAgent","hex","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","typeName","setAttributeNS","writeUpdate_","getKeys","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__extent_js__","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_8__size_js__","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_12__string_js__","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","tileClass","gutter_","gutter","tmpExtent_","setKey","getKeyForParams_","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","hash","getTilePixelRatio","fixedTileUrlFunction","scale","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_13__proj_js__","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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A,EAAAT,IAAA6f,GAEAtrE,KAAAurD,IAAAQ,IAA8BtJ,EAAK,CACnCiK,EAAAjB,EACA,MAKAwb,EAAAjnE,KAAA8K,KAAA,EAAAzsB,KAAAiuE,GAAAtsD,KAAA2rD,IAAA3rD,KAAAksD,IAAAQ,GAAA,IAAA1sD,KAAA4rD,IAAAc,GACAD,EAAYnB,EAAUjtE,KAAAgnE,MAAArlD,KAAAo9D,KAAA95D,EAAA2jE,EAAA5oF,KAAAukB,GAAA5C,KAAAksD,IAAAQ,IAMtB,OAFA/pD,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,GAQAo1B,OALgB,qBC2FT,IACQyzC,IACfx1E,KA3MO,WACP3X,KAAAokB,KACApkB,KAAAokB,EAAA,eACApkB,KAAAokB,EAAA,gBACApkB,KAAAokB,EAAA,cACApkB,KAAAokB,EAAA,cACApkB,KAAAokB,EAAA,YACApkB,KAAAokB,EAAA,aACApkB,KAAAokB,EAAA,YACApkB,KAAAokB,EAAA,YACApkB,KAAAokB,EAAA,SACApkB,KAAAokB,EAAA,WAEApkB,KAAAotF,QACAptF,KAAAqtF,QACArtF,KAAAotF,KAAA,eACAptF,KAAAqtF,KAAA,KACArtF,KAAAotF,KAAA,cACAptF,KAAAqtF,KAAA,cACArtF,KAAAotF,KAAA,eACAptF,KAAAqtF,KAAA,aACArtF,KAAAotF,KAAA,cACAptF,KAAAqtF,KAAA,aACArtF,KAAAotF,KAAA,cACAptF,KAAAqtF,KAAA,cACArtF,KAAAotF,KAAA,aACAptF,KAAAqtF,KAAA,cAEArtF,KAAAstF,QACAttF,KAAAutF,QACAvtF,KAAAstF,KAAA,gBACAttF,KAAAutF,KAAA,KACAvtF,KAAAstF,KAAA,eACAttF,KAAAutF,KAAA,eACAvtF,KAAAstF,KAAA,cACAttF,KAAAutF,KAAA,eACAvtF,KAAAstF,KAAA,cACAttF,KAAAutF,KAAA,aACAvtF,KAAAstF,KAAA,cACAttF,KAAAutF,KAAA,cACAvtF,KAAAstF,KAAA,aACAttF,KAAAutF,KAAA,aAEAvtF,KAAAs7E,KACAt7E,KAAAs7E,EAAA,gBACAt7E,KAAAs7E,EAAA,eACAt7E,KAAAs7E,EAAA,cACAt7E,KAAAs7E,EAAA,aACAt7E,KAAAs7E,EAAA,aACAt7E,KAAAs7E,EAAA,WACAt7E,KAAAs7E,EAAA,SACAt7E,KAAAs7E,EAAA,UACAt7E,KAAAs7E,EAAA,WAwJA7X,QAjJO,SAAgBn/C,GACvB,IAAAoV,EACA00C,EAAA9pD,EAAAW,EAGAuoE,EAFAlpE,EAAAY,EAEAllB,KAAAymE,KACAsX,EAAA3P,EAAApuE,KAAAgnE,MAIAymB,EAAAD,EAA0BzpB,EAAU,KACpC2pB,EAAA3P,EACA4P,EAAA,EAEAC,EAAA,EACA,IAAAl0D,EAAA,EAAaA,GAAA,GAASA,IACtBi0D,GAAAF,EACAG,GAAA5tF,KAAAokB,EAAAsV,GAAAi0D,EAIA,IAOAE,EAPAC,EAAAF,EACAG,EAAAL,EAGAM,EAAA,EACAC,EAAA,EAIAC,EAAA,EACAC,EAAA,EACA,IAAAz0D,EAAA,EAAaA,GAAA,EAAQA,IAErBm0D,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAK,IAAAluF,KAAAotF,KAAA1zD,GAAAs0D,EAAAhuF,KAAAqtF,KAAA3zD,GAAAu0D,EACAE,IAAAnuF,KAAAqtF,KAAA3zD,GAAAs0D,EAAAhuF,KAAAotF,KAAA1zD,GAAAu0D,EAOA,OAHA3pE,EAAAW,EAAAkpE,EAAAnuF,KAAAukB,EAAAvkB,KAAAynE,GACAnjD,EAAAY,EAAAgpE,EAAAluF,KAAAukB,EAAAvkB,KAAA2nE,GAEArjD,GAqGAo/C,QA/FO,SAAgBp/C,GACvB,IAAAoV,EAeA00D,EAdAnpE,EAAAX,EAAAW,EACAC,EAAAZ,EAAAY,EAEAmpE,EAAAppE,EAAAjlB,KAAAynE,GAIAymB,GAHAhpE,EAAAllB,KAAA2nE,IAGA3nE,KAAAukB,EACA4pE,EAAAE,EAAAruF,KAAAukB,EAGA+pE,EAAA,EACAC,EAAA,EAIAT,EAAA,EACAC,EAAA,EACA,IAAAr0D,EAAA,EAAaA,GAAA,EAAQA,IAErB00D,EAAAG,EAAAL,EAAAI,EAAAH,EACAG,EAFAA,EAAAJ,EAAAK,EAAAJ,EAGAI,EAAAH,EACAN,IAAA9tF,KAAAstF,KAAA5zD,GAAA40D,EAAAtuF,KAAAutF,KAAA7zD,GAAA60D,EACAR,IAAA/tF,KAAAutF,KAAA7zD,GAAA40D,EAAAtuF,KAAAstF,KAAA5zD,GAAA60D,EAOA,QAAA5/E,EAAA,EAAiBA,EAAA3O,KAAAwuF,WAAqB7/E,IAAA,CACtC,IAGAk/E,EAHAG,EAAAF,EACAG,EAAAF,EAIAU,EAAAP,EACAQ,EAAAP,EACA,IAAAz0D,EAAA,EAAeA,GAAA,EAAQA,IAEvBm0D,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAY,IAAA/0D,EAAA,IAAA15B,KAAAotF,KAAA1zD,GAAAs0D,EAAAhuF,KAAAqtF,KAAA3zD,GAAAu0D,GACAS,IAAAh1D,EAAA,IAAA15B,KAAAqtF,KAAA3zD,GAAAs0D,EAAAhuF,KAAAotF,KAAA1zD,GAAAu0D,GAGAD,EAAA,EACAC,EAAA,EACA,IAAAU,EAAA3uF,KAAAotF,KAAA,GACAwB,EAAA5uF,KAAAqtF,KAAA,GACA,IAAA3zD,EAAA,EAAeA,GAAA,EAAQA,IAEvBm0D,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAc,GAAAj1D,GAAA15B,KAAAotF,KAAA1zD,GAAAs0D,EAAAhuF,KAAAqtF,KAAA3zD,GAAAu0D,GACAW,GAAAl1D,GAAA15B,KAAAqtF,KAAA3zD,GAAAs0D,EAAAhuF,KAAAotF,KAAA1zD,GAAAu0D,GAIA,IAAAY,EAAAF,IAAAC,IACAd,GAAAW,EAAAE,EAAAD,EAAAE,GAAAC,EACAd,GAAAW,EAAAC,EAAAF,EAAAG,GAAAC,EAIA,IAAAjB,EAAAE,EACAJ,EAAAK,EACAe,EAAA,EAEArB,EAAA,EACA,IAAA/zD,EAAA,EAAaA,GAAA,EAAQA,IACrBo1D,GAAAlB,EACAH,GAAAztF,KAAAs7E,EAAA5hD,GAAAo1D,EAKA,IAAAzgB,EAAAruE,KAAAymE,KAAAgnB,EAAiC1pB,EAAU,IAC3CqK,EAAApuE,KAAAgnE,MAAA0mB,EAKA,OAHAppE,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EAEA/pD,GAQAo1B,OALgB,gCC9KT,IACQq1C,IACfp3E,KApCO,aAqCP8rD,QA/BO,SAAgBn/C,GACvB,IAAA8pD,EAAA9pD,EAAAW,EACAopD,EAAA/pD,EAAAY,EAGAs+D,EAAavW,EAAUmB,EAAApuE,KAAAgnE,OACvB/hD,EAAAjlB,KAAAynE,GAAAznE,KAAAukB,EAAAi/D,EACAt+D,EAAAllB,KAAA2nE,GAAA3nE,KAAAukB,EAAA5C,KAAAoqD,IAAApqD,KAAA4rD,IAAA5rD,KAAA65C,GAAA,EAAA6S,EAAA,WAIA,OAFA/pD,EAAAW,IACAX,EAAAY,IACAZ,GAqBAo/C,QAhBO,SAAgBp/C,GACvBA,EAAAW,GAAAjlB,KAAAynE,GACAnjD,EAAAY,GAAAllB,KAAA2nE,GAEA,IAAAyG,EAAYnB,EAAUjtE,KAAAgnE,MAAA1iD,EAAAW,EAAAjlB,KAAAukB,GACtB8pD,EAAA,KAAA1sD,KAAAisD,KAAAjsD,KAAA2sD,IAAA,GAAAhqD,EAAAY,EAAAllB,KAAAukB,IAAA5C,KAAA65C,GAAA,GAIA,OAFAl3C,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,GAQAo1B,OALgB,8BC1CZs1C,GAAQ,GAyGL,IACQC,IACft3E,KAnGO,WAKP3X,KAAAorE,QAIAprE,KAAA05B,EAAA,EACA15B,KAAA8zB,EAAA,EACA9zB,KAAAiuE,GAAA,EACAjuE,KAAAkvF,IAAAvtE,KAAA8K,MAAAzsB,KAAA8zB,EAAA,GAAA9zB,KAAA05B,GACA15B,KAAAmvF,IAAAnvF,KAAAkvF,KAAAlvF,KAAA8zB,EAAA,IAPA9zB,KAAAu9E,GAAcD,GAAOt9E,KAAAiuE,KA8FrBxK,QAhFO,SAAgBn/C,GACvB,IAAAW,EAAAC,EACAkpD,EAAA9pD,EAAAW,EACAopD,EAAA/pD,EAAAY,EAKA,GAFAkpD,EAAQnB,EAAUmB,EAAApuE,KAAAgnE,OAElBhnE,KAAAorE,OAAA,CACA,GAAAprE,KAAA8zB,EAKA,IADA,IAAAxG,EAAAttB,KAAA05B,EAAA/X,KAAAksD,IAAAQ,GACA1/D,EAAmBqgF,GAASrgF,IAAGA,EAAA,CAC/B,IAAAygF,GAAApvF,KAAA8zB,EAAAu6C,EAAA1sD,KAAAksD,IAAAQ,GAAA/gD,IAAAttB,KAAA8zB,EAAAnS,KAAAwsD,IAAAE,IAEA,GADAA,GAAA+gB,EACAztE,KAAAurD,IAAAkiB,GAA0BhrB,EAC1B,WARAiK,EAAA,IAAAruE,KAAA05B,EAAA/X,KAAAo9D,KAAA/+E,KAAA05B,EAAA/X,KAAAksD,IAAAQ,MAYAppD,EAAAjlB,KAAAukB,EAAAvkB,KAAAmvF,IAAA/gB,GAAApuE,KAAA8zB,EAAAnS,KAAAwsD,IAAAE,IACAnpD,EAAAllB,KAAAukB,EAAAvkB,KAAAkvF,IAAA7gB,MAGA,CAEA,IAAA36C,EAAA/R,KAAAksD,IAAAQ,GACA+P,EAAAz8D,KAAAwsD,IAAAE,GACAnpD,EAAAllB,KAAAukB,EAAiBi5D,GAAOnP,EAAA36C,EAAA0qD,EAAAp+E,KAAAu9E,IACxBt4D,EAAAjlB,KAAAukB,EAAA6pD,EAAAgQ,EAAAz8D,KAAA8K,KAAA,EAAAzsB,KAAAiuE,GAAAv6C,KAKA,OAFApP,EAAAW,IACAX,EAAAY,IACAZ,GA6CAo/C,QA1CO,SAAgBp/C,GACvB,IAAA+pD,EAAAwQ,EAAAzQ,EAAA16C,EAkCA,OAhCApP,EAAAW,GAAAjlB,KAAAynE,GACA2G,EAAA9pD,EAAAW,EAAAjlB,KAAAukB,EACAD,EAAAY,GAAAllB,KAAA2nE,GACA0G,EAAA/pD,EAAAY,EAAAllB,KAAAukB,EAEAvkB,KAAAorE,QACAiD,GAAAruE,KAAAkvF,IACA9gB,GAAApuE,KAAAmvF,KAAAnvF,KAAA8zB,EAAAnS,KAAAwsD,IAAAE,IACAruE,KAAA8zB,EACAu6C,EAAYmd,IAAKxrF,KAAA8zB,EAAAu6C,EAAA1sD,KAAAksD,IAAAQ,IAAAruE,KAAA05B,GAEjB,IAAA15B,KAAA05B,IACA20C,EAAYmd,GAAK7pE,KAAAksD,IAAAQ,GAAAruE,KAAA05B,IAEjB00C,EAAUnB,EAAUmB,EAAApuE,KAAAgnE,OACpBqH,EAAUia,GAAUja,KAGpBA,EAAUsP,GAAWr5D,EAAAY,EAAAllB,KAAAukB,EAAAvkB,KAAAiuE,GAAAjuE,KAAAu9E,KACrB7pD,EAAA/R,KAAAurD,IAAAmB,IACYrK,GACZtwC,EAAA/R,KAAAksD,IAAAQ,GACAwQ,EAAA7+E,KAAAgnE,MAAA1iD,EAAAW,EAAAtD,KAAA8K,KAAA,EAAAzsB,KAAAiuE,GAAAv6C,MAAA1zB,KAAAukB,EAAA5C,KAAAwsD,IAAAE,IAEAD,EAAYnB,EAAU4R,IAEtBnrD,EAAkB0wC,EAASJ,IAC3BoK,EAAApuE,KAAAgnE,QAGA1iD,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,GAQAo1B,OALgB,sBChCT,IACQ21C,IACf13E,KA7EO,aA8EP8rD,QA1EO,SAAgBn/C,GAavB,IATA,IAAA8pD,EAAA9pD,EAAAW,EACAopD,EAAA/pD,EAAAY,EAEA64D,EAAkB9Q,EAAUmB,EAAApuE,KAAAgnE,OAC5Bwf,EAAAnY,EACAtB,EAAAprD,KAAA65C,GAAA75C,KAAAksD,IAAAQ,KAIA,CACA,IAAAihB,IAAA9I,EAAA7kE,KAAAksD,IAAA2Y,GAAAzZ,IAAA,EAAAprD,KAAAwsD,IAAAqY,IAEA,GADAA,GAAA8I,EACA3tE,KAAAurD,IAAAoiB,GAAgClrB,EAChC,MAGAoiB,GAAA,EAKA7kE,KAAA65C,GAAA,EAAA75C,KAAAurD,IAAAmB,GAAoCjK,IACpC2Z,EAAA,GAEA,IAAA94D,EAAA,cAAAjlB,KAAAukB,EAAAw5D,EAAAp8D,KAAAwsD,IAAAqY,GAAAxmF,KAAAynE,GACAviD,EAAA,gBAAAllB,KAAAukB,EAAA5C,KAAAksD,IAAA2Y,GAAAxmF,KAAA2nE,GAIA,OAFArjD,EAAAW,IACAX,EAAAY,IACAZ,GA0CAo/C,QAvCO,SAAgBp/C,GACvB,IAAAkiE,EACA5I,EAIAt5D,EAAAW,GAAAjlB,KAAAynE,GACAnjD,EAAAY,GAAAllB,KAAA2nE,GACAiW,EAAAt5D,EAAAY,GAAA,gBAAAllB,KAAAukB,GAKA5C,KAAAurD,IAAA0Q,GAAA,gBACAA,EAAA,eAEA4I,EAAA7kE,KAAAo9D,KAAAnB,GACA,IAAAxP,EAAYnB,EAAUjtE,KAAAgnE,MAAA1iD,EAAAW,GAAA,cAAAjlB,KAAAukB,EAAA5C,KAAAwsD,IAAAqY,KACtBpY,GAAAzsD,KAAA65C,KACA4S,GAAAzsD,KAAA65C,IAEA4S,EAAAzsD,KAAA65C,KACA4S,EAAAzsD,KAAA65C,IAEAoiB,GAAA,EAAA4I,EAAA7kE,KAAAksD,IAAA,EAAA2Y,IAAA7kE,KAAA65C,GACA75C,KAAAurD,IAAA0Q,GAAA,IACAA,EAAA,GAEA,IAAAvP,EAAA1sD,KAAAo9D,KAAAnB,GAIA,OAFAt5D,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,GAQAo1B,OALgB,qBCkCT,IACQ61C,IACf53E,KArGO,WAKPgK,KAAAurD,IAAAltE,KAAA2mE,KAAA3mE,KAAA6mE,MAAwCzC,IAGxCpkE,KAAA6mE,KAAA7mE,KAAA6mE,MAAA7mE,KAAA2mE,KACA3mE,KAAA6+E,KAAA7+E,KAAA2kB,EAAA3kB,KAAAukB,EACAvkB,KAAAiuE,GAAA,EAAAtsD,KAAA2rD,IAAAttE,KAAA6+E,KAAA,GACA7+E,KAAAkuE,EAAAvsD,KAAA8K,KAAAzsB,KAAAiuE,IACAjuE,KAAA+nF,GAAYE,GAAIjoF,KAAAiuE,IAChBjuE,KAAA07E,GAAYwM,GAAIloF,KAAAiuE,IAChBjuE,KAAA6mF,GAAYsB,GAAInoF,KAAAiuE,IAChBjuE,KAAAgoF,GAAYI,GAAIpoF,KAAAiuE,IAEhBjuE,KAAA6sE,OAAAlrD,KAAAksD,IAAA7tE,KAAA2mE,MACA3mE,KAAA8sE,OAAAnrD,KAAAwsD,IAAAnuE,KAAA2mE,MAEA3mE,KAAA8iF,IAAanW,EAAK3sE,KAAAkuE,EAAAluE,KAAA6sE,OAAA7sE,KAAA8sE,QAClB9sE,KAAA8oF,IAAahB,GAAI9nF,KAAA+nF,GAAA/nF,KAAA07E,GAAA17E,KAAA6mF,GAAA7mF,KAAAgoF,GAAAhoF,KAAA2mE,MAEjBhlD,KAAAurD,IAAAltE,KAAA2mE,KAAA3mE,KAAA6mE,MAAwCzC,EACxCpkE,KAAAwyC,GAAAxyC,KAAA6sE,QAGA7sE,KAAA6sE,OAAAlrD,KAAAksD,IAAA7tE,KAAA6mE,MACA7mE,KAAA8sE,OAAAnrD,KAAAwsD,IAAAnuE,KAAA6mE,MACA7mE,KAAAmmF,IAAexZ,EAAK3sE,KAAAkuE,EAAAluE,KAAA6sE,OAAA7sE,KAAA8sE,QACpB9sE,KAAAwvF,IAAe1H,GAAI9nF,KAAA+nF,GAAA/nF,KAAA07E,GAAA17E,KAAA6mF,GAAA7mF,KAAAgoF,GAAAhoF,KAAA6mE,MACnB7mE,KAAAwyC,IAAAxyC,KAAA8iF,IAAA9iF,KAAAmmF,MAAAnmF,KAAAwvF,IAAAxvF,KAAA8oF,MAEA9oF,KAAA8lD,EAAA9lD,KAAA8oF,IAAA9oF,KAAA8iF,IAAA9iF,KAAAwyC,GACAxyC,KAAA89E,IAAagK,GAAI9nF,KAAA+nF,GAAA/nF,KAAA07E,GAAA17E,KAAA6mF,GAAA7mF,KAAAgoF,GAAAhoF,KAAAymE,MACjBzmE,KAAAqjF,GAAArjF,KAAAukB,GAAAvkB,KAAA8lD,EAAA9lD,KAAA89E,OAmEAra,QA9DO,SAAgBn/C,GACvB,IAEAiiE,EAFAnY,EAAA9pD,EAAAW,EACAopD,EAAA/pD,EAAAY,EAKA,GAAAllB,KAAAorE,OACAmb,EAAAvmF,KAAAukB,GAAAvkB,KAAA8lD,EAAAuoB,OAEA,CACA,IAAAkQ,EAAauJ,GAAI9nF,KAAA+nF,GAAA/nF,KAAA07E,GAAA17E,KAAA6mF,GAAA7mF,KAAAgoF,GAAA3Z,GACjBkY,EAAAvmF,KAAAukB,GAAAvkB,KAAA8lD,EAAAy4B,GAEA,IAAAiI,EAAAxmF,KAAAwyC,GAAwBy6B,EAAUmB,EAAApuE,KAAAgnE,OAClC/hD,EAAAjlB,KAAAynE,GAAA8e,EAAA5kE,KAAAksD,IAAA2Y,GACAthE,EAAAllB,KAAA2nE,GAAA3nE,KAAAqjF,GAAAkD,EAAA5kE,KAAAwsD,IAAAqY,GAGA,OAFAliE,EAAAW,IACAX,EAAAY,IACAZ,GA4CAo/C,QAvCO,SAAgBp/C,GAGvB,IAAAyoD,EAAAwZ,EAAAlY,EAAAD,EAFA9pD,EAAAW,GAAAjlB,KAAAynE,GACAnjD,EAAAY,EAAAllB,KAAAqjF,GAAA/+D,EAAAY,EAAAllB,KAAA2nE,GAEA3nE,KAAAwyC,IAAA,GACA+zC,EAAA5kE,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,GACA6nD,EAAA,IAGAwZ,GAAA5kE,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,GACA6nD,GAAA,GAEA,IAAAyZ,EAAA,EAKA,GAJA,IAAAD,IACAC,EAAA7kE,KAAAk0D,MAAA9I,EAAAzoD,EAAAW,EAAA8nD,EAAAzoD,EAAAY,IAGAllB,KAAAorE,OAKA,OAJAgD,EAAUnB,EAAUjtE,KAAAgnE,MAAAwf,EAAAxmF,KAAAwyC,IACpB67B,EAAUia,GAAUtoF,KAAA8lD,EAAAygC,EAAAvmF,KAAAukB,GACpBD,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,EAGA,IAAAi6D,EAAAv+E,KAAA8lD,EAAAygC,EAAAvmF,KAAAukB,EAKA,OAJA8pD,EAAUka,GAAKhK,EAAAv+E,KAAA+nF,GAAA/nF,KAAA07E,GAAA17E,KAAA6mF,GAAA7mF,KAAAgoF,IACf5Z,EAAUnB,EAAUjtE,KAAAgnE,MAAAwf,EAAAxmF,KAAAwyC,IACpBluB,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,GAUAo1B,OALgB,6BCYT,IACQ+1C,IACf93E,KApHO,WAEP3X,KAAA0vF,EAAA1vF,KAAAukB,GAmHAk/C,QAhHO,SAAgBn/C,GAEvB,IAMAW,EAAAC,EANAkpD,EAAA9pD,EAAAW,EACAopD,EAAA/pD,EAAAY,EAIAs+D,EAAavW,EAAUmB,EAAApuE,KAAAgnE,OAGvBrlD,KAAAurD,IAAAmB,IAAuBjK,IACvBn/C,EAAAjlB,KAAAynE,GAAAznE,KAAA0vF,EAAAlM,EACAt+D,EAAAllB,KAAA2nE,IAEA,IAAA6e,EAAcgF,GAAK,EAAA7pE,KAAAurD,IAAAmB,EAAA1sD,KAAA65C,MACnB75C,KAAAurD,IAAAsW,IAAyBpf,GAAKziD,KAAAurD,IAAAvrD,KAAAurD,IAAAmB,GAA+BrK,IAAYI,KACzEn/C,EAAAjlB,KAAAynE,GAEAviD,EADAmpD,GAAA,EACAruE,KAAA2nE,GAAAhmD,KAAA65C,GAAAx7D,KAAA0vF,EAAA/tE,KAAA4rD,IAAA,GAAAiZ,GAGAxmF,KAAA2nE,GAAAhmD,KAAA65C,GAAAx7D,KAAA0vF,GAAA/tE,KAAA4rD,IAAA,GAAAiZ,IAIA,IAAAtI,EAAA,GAAAv8D,KAAAurD,IAAAvrD,KAAA65C,GAAAgoB,IAAA7hE,KAAA65C,IACAmtB,EAAAzK,IACAyR,EAAAhuE,KAAAksD,IAAA2Y,GACAoJ,EAAAjuE,KAAAwsD,IAAAqY,GAEA1gC,EAAA8pC,GAAAD,EAAAC,EAAA,GACAC,EAAA/pC,IACAhyB,EAAAgyB,GAAA,EAAA6pC,EAAA,GACAG,EAAAh8D,IACAi5C,EAAAprD,KAAA65C,GAAAx7D,KAAA0vF,GAAAxR,GAAAp4B,EAAAgqC,GAAAnuE,KAAA8K,KAAAk8D,GAAA7iC,EAAAgqC,IAAAhqC,EAAAgqC,MAAAnH,IAAAkH,EAAAC,QAAAnH,GACAnF,EAAA,IACAzW,MAEA9nD,EAAAjlB,KAAAynE,GAAAsF,EAEA,IAAA+d,EAAAnC,EAAA7iC,EAYA,OAXAinB,EAAAprD,KAAA65C,GAAAx7D,KAAA0vF,GAAA57D,EAAAg3D,EAAA5M,EAAAv8D,KAAA8K,MAAAqjE,EAAAnH,MAAA,GAAAmC,OAAAgF,EAAAnH,GAGAzjE,EAFAmpD,GAAA,EAEAruE,KAAA2nE,GAAAoF,EAIA/sE,KAAA2nE,GAAAoF,EAEAzoD,EAAAW,IACAX,EAAAY,IACAZ,GA6DAo/C,QAxDO,SAAgBp/C,GACvB,IAAA8pD,EAAAC,EACA0hB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EACAC,EACAvjB,EACAwjB,EA2CA,OAtCAjsE,EAAAW,GAAAjlB,KAAAynE,GACAnjD,EAAAY,GAAAllB,KAAA2nE,GACAoF,EAAAprD,KAAA65C,GAAAx7D,KAAA0vF,EAGAO,GAFAF,EAAAzrE,EAAAW,EAAA8nD,GAEAgjB,GADAC,EAAA1rE,EAAAY,EAAA6nD,GACAijB,EAOAjjB,EAAA,GAHAijB,KADAI,GAAA,GAFAF,GAAAvuE,KAAAurD,IAAA8iB,IAAA,EAAAC,IAEA,IAAAD,IAAAC,MACA,GAFAE,EAAAD,EAAA,EAAAF,IAAAD,KAEAI,IAAAC,MAAA,EAAAF,EAAAC,EAAAC,KAAA,KACAC,GAAAH,EAAAC,IAAA,EAAAC,OACAE,EAAA,EAAA3uE,KAAA8K,MAAA4jE,EAAA,IAEA1uE,KAAAurD,IAAAH,GAAA,IAEAA,EADAA,GAAA,EACA,GAGA,GAGAwjB,EAAA5uE,KAAA68D,KAAAzR,GAAA,EAEAsB,EADA/pD,EAAAY,GAAA,IACAorE,EAAA3uE,KAAAwsD,IAAAoiB,EAAA5uE,KAAA65C,GAAA,GAAA20B,EAAA,EAAAC,GAAAzuE,KAAA65C,MAGA80B,EAAA3uE,KAAAwsD,IAAAoiB,EAAA5uE,KAAA65C,GAAA,GAAA20B,EAAA,EAAAC,GAAAzuE,KAAA65C,GAIA4S,EADAzsD,KAAAurD,IAAA6iB,GAAqB3rB,EACrBpkE,KAAAgnE,MAGUiG,EAAUjtE,KAAAgnE,MAAArlD,KAAA65C,IAAAy0B,EAAA,EAAAtuE,KAAA8K,KAAA,KAAAsjE,IAAAC,KAAAC,MAAA,EAAAF,GAGpBzrE,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,GAQAo1B,OALgB,8CC8ET,IACQ82C,IACf74E,KA5LO,WACP3X,KAAAywF,QAAA9uE,KAAAksD,IAAA7tE,KAAAymE,MACAzmE,KAAA0wF,QAAA/uE,KAAAwsD,IAAAnuE,KAAAymE,OA2LAhD,QAxLO,SAAgBn/C,GACvB,IAKAyjE,EAAArM,EAAAmL,EAAAmB,EAAA2I,EAAAC,EAAA7D,EAAA8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhT,EAAAiT,EAAAC,EAAA59D,EAAA69D,EAAAC,EAAAC,EALArjB,EAAA9pD,EAAAW,EACAopD,EAAA/pD,EAAAY,EACA2nD,EAAAlrD,KAAAksD,IAAAvpD,EAAAY,GACA4nD,EAAAnrD,KAAAwsD,IAAA7pD,EAAAY,GACAs+D,EAAavW,EAAUmB,EAAApuE,KAAAgnE,OAEvB,OAAAhnE,KAAAorE,OACAzpD,KAAAurD,IAAAltE,KAAAywF,QAAA,IAAsCrsB,GAEtC9/C,EAAAW,EAAAjlB,KAAAynE,GAAAznE,KAAAukB,GAAgCy/C,EAAOqK,GAAA1sD,KAAAksD,IAAA2V,GACvCl/D,EAAAY,EAAAllB,KAAA2nE,GAAA3nE,KAAAukB,GAAgCy/C,EAAOqK,GAAA1sD,KAAAwsD,IAAAqV,GACvCl/D,GAEA3C,KAAAurD,IAAAltE,KAAAywF,QAAA,IAA2CrsB,GAE3C9/C,EAAAW,EAAAjlB,KAAAynE,GAAAznE,KAAAukB,GAAgCy/C,EAAOqK,GAAA1sD,KAAAksD,IAAA2V,GACvCl/D,EAAAY,EAAAllB,KAAA2nE,GAAA3nE,KAAAukB,GAAgCy/C,EAAOqK,GAAA1sD,KAAAwsD,IAAAqV,GACvCl/D,IAIAgtE,EAAAtxF,KAAAywF,QAAA5jB,EAAA7sE,KAAA0wF,QAAA5jB,EAAAnrD,KAAAwsD,IAAAqV,GAEA6N,GADAjT,EAAAz8D,KAAA68D,KAAA8S,IACA3vE,KAAAksD,IAAAuQ,GACA95D,EAAAW,EAAAjlB,KAAAynE,GAAAznE,KAAAukB,EAAA8sE,EAAAvkB,EAAAnrD,KAAAksD,IAAA2V,GACAl/D,EAAAY,EAAAllB,KAAA2nE,GAAA3nE,KAAAukB,EAAA8sE,GAAArxF,KAAA0wF,QAAA7jB,EAAA7sE,KAAAywF,QAAA3jB,EAAAnrD,KAAAwsD,IAAAqV,IACAl/D,IAIAyjE,EAASE,GAAIjoF,KAAAiuE,IACbyN,EAASwM,GAAIloF,KAAAiuE,IACb4Y,EAASsB,GAAInoF,KAAAiuE,IACb+Z,EAASI,GAAIpoF,KAAAiuE,IACbtsD,KAAAurD,IAAAltE,KAAAywF,QAAA,IAAsCrsB,GAEtCusB,EAAA3wF,KAAAukB,EAAqBujE,GAAIC,EAAArM,EAAAmL,EAAAmB,EAAiBhkB,GAC1C4sB,EAAA5wF,KAAAukB,EAAoBujE,GAAIC,EAAArM,EAAAmL,EAAAmB,EAAA3Z,GACxB/pD,EAAAW,EAAAjlB,KAAAynE,IAAAkpB,EAAAC,GAAAjvE,KAAAksD,IAAA2V,GACAl/D,EAAAY,EAAAllB,KAAA2nE,IAAAgpB,EAAAC,GAAAjvE,KAAAwsD,IAAAqV,GACAl/D,GAEA3C,KAAAurD,IAAAltE,KAAAywF,QAAA,IAA2CrsB,GAE3CusB,EAAA3wF,KAAAukB,EAAqBujE,GAAIC,EAAArM,EAAAmL,EAAAmB,EAAiBhkB,GAC1C4sB,EAAA5wF,KAAAukB,EAAoBujE,GAAIC,EAAArM,EAAAmL,EAAAmB,EAAA3Z,GACxB/pD,EAAAW,EAAAjlB,KAAAynE,IAAAkpB,EAAAC,GAAAjvE,KAAAksD,IAAA2V,GACAl/D,EAAAY,EAAAllB,KAAA2nE,IAAAgpB,EAAAC,GAAAjvE,KAAAwsD,IAAAqV,GACAl/D,IAIAyoE,EAAAlgB,EAAAC,EACA+jB,EAAYxI,GAAEroF,KAAAukB,EAAAvkB,KAAAkuE,EAAAluE,KAAAywF,SACdK,EAAWzI,GAAEroF,KAAAukB,EAAAvkB,KAAAkuE,EAAArB,GACbkkB,EAAApvE,KAAAisD,MAAA,EAAA5tE,KAAAiuE,IAAA8e,EAAA/sF,KAAAiuE,GAAA4iB,EAAA7wF,KAAAywF,SAAAK,EAAAhkB,IAGAp5C,EADA,KADAs9D,EAAArvE,KAAAk0D,MAAAl0D,KAAAksD,IAAA2V,GAAAxjF,KAAA0wF,QAAA/uE,KAAA4rD,IAAAwjB,GAAA/wF,KAAAywF,QAAA9uE,KAAAwsD,IAAAqV,KAEA7hE,KAAAo9D,KAAA/+E,KAAA0wF,QAAA/uE,KAAAksD,IAAAkjB,GAAA/wF,KAAAywF,QAAA9uE,KAAAwsD,IAAA4iB,IAEApvE,KAAAurD,IAAAvrD,KAAAurD,IAAA8jB,GAAArvE,KAAA65C,KAAmD4I,GACnDziD,KAAAo9D,KAAA/+E,KAAA0wF,QAAA/uE,KAAAksD,IAAAkjB,GAAA/wF,KAAAywF,QAAA9uE,KAAAwsD,IAAA4iB,IAGApvE,KAAAo9D,KAAAp9D,KAAAksD,IAAA2V,GAAA7hE,KAAAwsD,IAAA4iB,GAAApvE,KAAAksD,IAAAmjB,IAEAC,EAAAjxF,KAAAkuE,EAAAluE,KAAAywF,QAAA9uE,KAAA8K,KAAA,EAAAzsB,KAAAiuE,IAQAmQ,EAAAyS,EAAAn9D,GAAA,GAJA69D,EAAA79D,MADA09D,GAFAF,EAAAlxF,KAAAkuE,EAAAluE,KAAA0wF,QAAA/uE,KAAAwsD,IAAA6iB,GAAArvE,KAAA8K,KAAA,EAAAzsB,KAAAiuE,KAEAijB,IAKA,EAAAE,GAAA,GAHAI,EAAAD,EAAA79D,GAGA,GANAy9D,EAAAF,EAAAC,IAMA,IAAAE,IAFAK,EAAAD,EAAA99D,GAEA,KAAA09D,GAAA,IAAAA,GAAA,EAAAH,KAAA,IAAAG,IADAK,EAAA/9D,EACA,GAAAy9D,GACA7sE,EAAAW,EAAAjlB,KAAAynE,GAAA2W,EAAAz8D,KAAAksD,IAAAmjB,GACA1sE,EAAAY,EAAAllB,KAAA2nE,GAAAyW,EAAAz8D,KAAAwsD,IAAA6iB,GACA1sE,KA2GAo/C,QApGO,SAAgBp/C,GAGvB,IAAA++D,EAAA1iC,EAAA4qC,EAAAD,EAAAld,EAAAC,EAAAtB,EAAAgb,EAAArM,EAAAmL,EAAAmB,EAAA2I,EAAAzV,EAAA6V,EAAAC,EAAAU,EAAAp7B,EAAAlyC,EAAAm7D,EAAAjE,EAAAqW,EAAAC,EACA,GAHAttE,EAAAW,GAAAjlB,KAAAynE,GACAnjD,EAAAY,GAAAllB,KAAA2nE,GAEA3nE,KAAAorE,OAAA,CAEA,IADAiY,EAAA1hE,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,IACA,EAAkB8+C,EAAOhkE,KAAAukB,EACzB,OAoCA,OAlCAo8B,EAAA0iC,EAAArjF,KAAAukB,EAEAgnE,EAAA5pE,KAAAksD,IAAAltB,GACA2qC,EAAA3pE,KAAAwsD,IAAAxtB,GAEAytB,EAAApuE,KAAAgnE,MACArlD,KAAAurD,IAAAmW,IAAwBjf,EACxBiK,EAAAruE,KAAAymE,MAGA4H,EAAYmd,GAAKF,EAAAtrF,KAAAywF,QAAAnsE,EAAAY,EAAAqmE,EAAAvrF,KAAA0wF,QAAArN,GACjBtW,EAAAprD,KAAAurD,IAAAltE,KAAAymE,MAAkCzC,EAGlCoK,EAFAzsD,KAAAurD,IAAAH,IAA2B3I,EAC3BpkE,KAAAymE,MAAA,EACgBwG,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,MAAAvxD,EAAAW,GAAAX,EAAAY,IAGV+nD,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,OAAAvxD,EAAAW,EAAAX,EAAAY,IAWZ+nD,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,MAAAvxD,EAAAW,EAAAsmE,EAAAlI,EAAArjF,KAAA0wF,QAAApF,EAAAhnE,EAAAY,EAAAllB,KAAAywF,QAAAlF,KAIxBjnE,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,EAOA,OAJAyjE,EAASE,GAAIjoF,KAAAiuE,IACbyN,EAASwM,GAAIloF,KAAAiuE,IACb4Y,EAASsB,GAAInoF,KAAAiuE,IACb+Z,EAASI,GAAIpoF,KAAAiuE,IACbtsD,KAAAurD,IAAAltE,KAAAywF,QAAA,IAAsCrsB,GAEtCusB,EAAA3wF,KAAAukB,EAAqBujE,GAAIC,EAAArM,EAAAmL,EAAAmB,EAAiBhkB,GAC1Cqf,EAAA1hE,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,GAEAmpD,EAAYka,IADZoI,EAAAtN,GACiBrjF,KAAAukB,EAAAwjE,EAAArM,EAAAmL,EAAAmB,GACjB5Z,EAAYnB,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,MAAAvxD,EAAAW,GAAA,EAAAX,EAAAY,IACtBZ,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,GAEA3C,KAAAurD,IAAAltE,KAAAywF,QAAA,IAA2CrsB,GAE3CusB,EAAA3wF,KAAAukB,EAAqBujE,GAAIC,EAAArM,EAAAmL,EAAAmB,EAAiBhkB,GAC1Cqf,EAAA1hE,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,GAGAmpD,EAAYka,IAFZlF,EAAAsN,GAEiB3wF,KAAAukB,EAAAwjE,EAAArM,EAAAmL,EAAAmB,GACjB5Z,EAAYnB,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,MAAAvxD,EAAAW,EAAAX,EAAAY,IACtBZ,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,IAIA++D,EAAA1hE,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,GACA8rE,EAAArvE,KAAAk0D,MAAAvxD,EAAAW,EAAAX,EAAAY,GACAg2D,EAAWmN,GAAEroF,KAAAukB,EAAAvkB,KAAAkuE,EAAAluE,KAAAywF,SACbiB,EAAA/vE,KAAAwsD,IAAA6iB,GAEA5sE,IADAkyC,EAAAt2D,KAAAkuE,EAAAluE,KAAA0wF,QAAAgB,GACAp7B,GAAA,EAAAt2D,KAAAiuE,IACAsR,EAAA,EAAAv/E,KAAAiuE,IAAA,EAAA7pD,GAAApkB,KAAAywF,QAAAzwF,KAAA0wF,QAAAgB,GAAA,EAAA1xF,KAAAiuE,IAGA2jB,EAAA,EAAAxtE,GADAutE,GADArW,EAAA+H,EAAAnI,GACA92D,GAAA,EAAAA,GAAAzC,KAAA2rD,IAAAgO,EAAA,KAAAiE,GAAA,IAAAn7D,GAAAzC,KAAA2rD,IAAAgO,EAAA,OACAqW,EAAA,EAAArW,EAAAqW,MAAA,EACAZ,EAAApvE,KAAAo9D,KAAA/+E,KAAAywF,QAAA9uE,KAAAwsD,IAAAwjB,GAAA3xF,KAAA0wF,QAAA/uE,KAAAksD,IAAA8jB,GAAAD,GACAtjB,EAAYnB,EAAUjtE,KAAAgnE,MAAArlD,KAAAo9D,KAAAp9D,KAAAksD,IAAAmjB,GAAArvE,KAAAksD,IAAA8jB,GAAAhwE,KAAAwsD,IAAA4iB,KACtB1iB,EAAA1sD,KAAAisD,MAAA,EAAA5tE,KAAAiuE,GAAA2jB,EAAA5xF,KAAAywF,QAAA9uE,KAAAksD,IAAAkjB,IAAApvE,KAAA4rD,IAAAwjB,IAAA,EAAA/wF,KAAAiuE,KACA3pD,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,IAWAo1B,OALgB,iCCpHT,IACQm4C,IACfl6E,KAlFO,WAKP3X,KAAAqsF,QAAA1qE,KAAAksD,IAAA7tE,KAAAymE,MACAzmE,KAAAssF,QAAA3qE,KAAAwsD,IAAAnuE,KAAAymE,OA6EAhD,QAxEO,SAAgBn/C,GACvB,IAAAuoD,EAAAC,EACA0W,EACAgJ,EAEA1mC,EAAA7gC,EAAAC,EACAkpD,EAAA9pD,EAAAW,EACAopD,EAAA/pD,EAAAY,EAiBA,OAdAs+D,EAASvW,EAAUmB,EAAApuE,KAAAgnE,OAEnB6F,EAAAlrD,KAAAksD,IAAAQ,GACAvB,EAAAnrD,KAAAwsD,IAAAE,GAEAme,EAAA7qE,KAAAwsD,IAAAqV,KACA19B,EAAA9lD,KAAAqsF,QAAAxf,EAAA7sE,KAAAssF,QAAAxf,EAAA0f,GAEA,GAAA7qE,KAAAurD,IAAApnB,IAAiCse,KACjCn/C,EAFA,EAEAjlB,KAAAukB,EAAAuoD,EAAAnrD,KAAAksD,IAAA2V,GACAt+D,EAAAllB,KAAA2nE,GAHA,EAGA3nE,KAAAukB,GAAAvkB,KAAAssF,QAAAzf,EAAA7sE,KAAAqsF,QAAAvf,EAAA0f,IAEAloE,EAAAW,IACAX,EAAAY,IACAZ,GAiDAo/C,QA9CO,SAAgBp/C,GACvB,IAAA++D,EACA1iC,EACA4qC,EAAAD,EACAve,EACAqB,EAAAC,EAYA,OATA/pD,EAAAW,GAAAjlB,KAAAynE,GACAnjD,EAAAY,GAAAllB,KAAA2nE,GACA0b,EAAA1hE,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,GACAy7B,EAAM6qC,GAAKnI,EAAArjF,KAAAukB,GAEXgnE,EAAA5pE,KAAAksD,IAAAltB,GACA2qC,EAAA3pE,KAAAwsD,IAAAxtB,GAEAytB,EAAApuE,KAAAgnE,MACArlD,KAAAurD,IAAAmW,IAAsBjf,GACtBiK,EAAAruE,KAAAymE,KACAniD,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,IAEA+pD,EAAQmd,GAAKF,EAAAtrF,KAAAqsF,QAAA/nE,EAAAY,EAAAqmE,EAAAvrF,KAAAssF,QAAAjJ,GACbtW,EAAAprD,KAAAurD,IAAAltE,KAAAymE,MAA8BzC,EAC9BriD,KAAAurD,IAAAH,IAAuB3I,GAEvBgK,EADApuE,KAAAymE,MAAA,EACYwG,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,MAAAvxD,EAAAW,GAAAX,EAAAY,IAGV+nD,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,OAAAvxD,EAAAW,EAAAX,EAAAY,IAEtBZ,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,IAEA8pD,EAAQnB,EAAUjtE,KAAAgnE,MAAArlD,KAAAk0D,MAAAvxD,EAAAW,EAAAsmE,EAAAlI,EAAArjF,KAAAssF,QAAAhB,EAAAhnE,EAAAY,EAAAllB,KAAAqsF,QAAAd,IAClBjnE,EAAAW,EAAAmpD,EACA9pD,EAAAY,EAAAmpD,EACA/pD,KAQAo1B,OALgB,UC9EhBo4C,IACAC,MAAA,EACAC,MAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,OAAA,GAGAC,IACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,GAmTA,SAAAC,GAAAtlB,EAAAloD,EAAAD,EAAA0tE,GACA,IAAAnM,EAmBA,OAlBApZ,EAAYhJ,GACZuuB,EAAAznF,MAAAmnF,GAAAC,OACA9L,EAAA,IAEAA,EAAA7kE,KAAAk0D,MAAA3wD,EAAAD,GACAtD,KAAAurD,IAAAsZ,IAA2BjiB,EAC3BouB,EAAAznF,MAAAmnF,GAAAC,OACK9L,EAAkBjiB,GAAMiiB,GAAaxiB,EAAUO,GACpDouB,EAAAznF,MAAAmnF,GAAAE,OACA/L,GAAexiB,GACVwiB,EAAkBxiB,EAAUO,GAAMiiB,KAAexiB,EAAUO,IAChEouB,EAAAznF,MAAAmnF,GAAAG,OACAhM,KAAA,EAAAA,EAAsC/hB,EAAG+hB,EAAW/hB,IAEpDkuB,EAAAznF,MAAAmnF,GAAAI,OACAjM,GAAexiB,IAGfwiB,EAIA,SAAAoM,GAAAxkB,EAAA7qD,GACA,IAAAsvE,EAAAzkB,EAAA7qD,EAMA,OALAsvE,GAAcpuB,EACdouB,GAAYruB,EACTquB,GAAkBpuB,IACrBouB,GAAYruB,GAEZquB,EAGO,IC/UQvjE,GDgVAwjE,IACfn7E,KApVO,WAEP3X,KAAAynE,GAAAznE,KAAAynE,IAAA,EACAznE,KAAA2nE,GAAA3nE,KAAA2nE,IAAA,EACA3nE,KAAAymE,KAAAzmE,KAAAymE,MAAA,EACAzmE,KAAAgnE,MAAAhnE,KAAAgnE,OAAA,EACAhnE,KAAA8mE,OAAA9mE,KAAA8mE,QAAA,EACA9mE,KAAA4zD,MAAA5zD,KAAA4zD,OAAA,mCAGA5zD,KAAAymE,MAAmBzC,EAAUO,EAAM,EACnCvkE,KAAA+yF,KAAAjB,GAAAK,IACGnyF,KAAAymE,QAAyBzC,EAAUO,EAAM,GAC5CvkE,KAAA+yF,KAAAjB,GAAAM,OACGzwE,KAAAurD,IAAAltE,KAAAgnE,QAAkCzC,EACrCvkE,KAAA+yF,KAAAjB,GAAAC,MACGpwE,KAAAurD,IAAAltE,KAAAgnE,QAAkChD,EAAUO,EAC/CvkE,KAAA+yF,KAAA/yF,KAAAgnE,MAAA,EAAA8qB,GAAAE,MAAAF,GAAAI,KAEAlyF,KAAA+yF,KAAAjB,GAAAG,KAKA,IAAAjyF,KAAAiuE,KACAjuE,KAAAgzF,YAAA,GAAAhzF,KAAAukB,EAAAvkB,KAAA2kB,GAAA3kB,KAAAukB,EACAvkB,KAAAizF,oBAAAjzF,KAAAgzF,YAAAhzF,KAAAgzF,cA2TAvvB,QArTO,SAAgBn/C,GACvB,IACA+pD,EAAAD,EACAoY,EAAApZ,EACA8I,EAAAsF,EAHA0X,GAAYjuE,EAAA,EAAAC,EAAA,GAKZytE,GAAcznF,MAAA,GAoBd,GAjBAoZ,EAAAW,GAAAjlB,KAAAgnE,MAMAqH,EADA,IAAAruE,KAAAiuE,GACAtsD,KAAAisD,KAAA5tE,KAAAizF,oBAAAtxE,KAAA4rD,IAAAjpD,EAAAY,IAEAZ,EAAAY,EAQAkpD,EAAA9pD,EAAAW,EACAjlB,KAAA+yF,OAAAjB,GAAAK,IACA/kB,EAAUpJ,EAAOqK,EACjBD,GAAe7J,GAAM6J,GAAWpK,EAAUO,GAC1CouB,EAAAznF,MAAAmnF,GAAAC,OACA9L,EAAApY,EAAoBpK,GACfoK,EAAgBpK,EAAUO,GAAM6J,KAAapK,EAAUO,IAC5DouB,EAAAznF,MAAAmnF,GAAAE,OACA/L,EAAApY,EAAA,EAAAA,EAAiC3J,EAAG2J,EAAS3J,GACxC2J,IAAkBpK,EAAUO,IAAM6J,IAAa7J,GACpDouB,EAAAznF,MAAAmnF,GAAAG,OACAhM,EAAApY,EAAoBpK,IAEpB2uB,EAAAznF,MAAAmnF,GAAAI,OACAjM,EAAApY,QAEG,GAAApuE,KAAA+yF,OAAAjB,GAAAM,OACHhlB,EAAUpJ,EAAOqK,EACjBD,GAAe7J,GAAM6J,GAAWpK,EAAUO,GAC1CouB,EAAAznF,MAAAmnF,GAAAC,OACA9L,GAAApY,EAAqBpK,GAChBoK,EAAgB7J,GAAM6J,IAAY7J,GACvCouB,EAAAznF,MAAAmnF,GAAAE,OACA/L,GAAApY,GACKA,GAAiB7J,GAAM6J,KAAapK,EAAUO,IACnDouB,EAAAznF,MAAAmnF,GAAAG,OACAhM,GAAApY,EAAqBpK,IAErB2uB,EAAAznF,MAAAmnF,GAAAI,OACAjM,EAAApY,EAAA,GAAAA,EAAkC3J,GAAG2J,EAAU3J,OAE5C,CACH,IAAAqmB,EAAAjlC,EAAAnyB,EACA4vD,EAAAC,EACA4P,EAEAnzF,KAAA+yF,OAAAjB,GAAAE,MACA5jB,EAAAwkB,GAAAxkB,GAAuCpK,GAClChkE,KAAA+yF,OAAAjB,GAAAG,KACL7jB,EAAAwkB,GAAAxkB,GAAuC3J,GAClCzkE,KAAA+yF,OAAAjB,GAAAI,OACL9jB,EAAAwkB,GAAAxkB,GAAuCpK,IAEvCsf,EAAA3hE,KAAAksD,IAAAQ,GACAkV,EAAA5hE,KAAAwsD,IAAAE,GACA8kB,EAAAxxE,KAAAksD,IAAAO,GAEA0c,EAAAvH,EADA5hE,KAAAwsD,IAAAC,GAEAvoB,EAAA09B,EAAA4P,EACAz/D,EAAA4vD,EAEAtjF,KAAA+yF,OAAAjB,GAAAC,MAEAvL,EAAAkM,GADAtlB,EAAAzrD,KAAA68D,KAAAsM,GACAp3D,EAAAmyB,EAAA8sC,GACK3yF,KAAA+yF,OAAAjB,GAAAE,MAELxL,EAAAkM,GADAtlB,EAAAzrD,KAAA68D,KAAA34B,GACAnyB,GAAAo3D,EAAA6H,GACK3yF,KAAA+yF,OAAAjB,GAAAG,KAELzL,EAAAkM,GADAtlB,EAAAzrD,KAAA68D,MAAAsM,GACAp3D,GAAAmyB,EAAA8sC,GACK3yF,KAAA+yF,OAAAjB,GAAAI,KAEL1L,EAAAkM,GADAtlB,EAAAzrD,KAAA68D,MAAA34B,GACAnyB,EAAAo3D,EAAA6H,IAGAvlB,EAAAoZ,EAAA,EACAmM,EAAAznF,MAAAmnF,GAAAC,QA2BA,OApBA9W,EAAA75D,KAAAisD,KAAA,GAAuBnJ,GAAG+hB,EAAA7kE,KAAA68D,KAAA78D,KAAAksD,IAAA2Y,GAAA7kE,KAAAwsD,IAAkD5J,IAAWP,IACvFkS,EAAAv0D,KAAA8K,MAAA,EAAA9K,KAAAwsD,IAAAf,KAAAzrD,KAAAwsD,IAAAqN,GAAA75D,KAAAwsD,IAAAqN,KAAA,EAAA75D,KAAAwsD,IAAAxsD,KAAAisD,KAAA,EAAAjsD,KAAAwsD,IAAAqY,OAGAmM,EAAAznF,QAAAmnF,GAAAE,OACA/W,GAAUxX,EACP2uB,EAAAznF,QAAAmnF,GAAAG,OACHhX,GAAU/W,EACPkuB,EAAAznF,QAAAmnF,GAAAI,SACHjX,GAAA,IAAgB/W,GAIhByuB,EAAAjuE,EAAAixD,EAAAv0D,KAAAwsD,IAAAqN,GACA0X,EAAAhuE,EAAAgxD,EAAAv0D,KAAAksD,IAAA2N,GACA0X,EAAAjuE,EAAAiuE,EAAAjuE,EAAAjlB,KAAAukB,EAAAvkB,KAAAynE,GACAyrB,EAAAhuE,EAAAguE,EAAAhuE,EAAAllB,KAAAukB,EAAAvkB,KAAA2nE,GAEArjD,EAAAW,EAAAiuE,EAAAjuE,EACAX,EAAAY,EAAAguE,EAAAhuE,EACAZ,GAgMAo/C,QA3LO,SAAgBp/C,GACvB,IACAk3D,EAAA4X,EAAAC,EAAAC,EACAC,EAAA/M,EAAA1Z,EAAAM,EACA8I,EA8HAsd,EACAzG,EAAA0G,EAlIAC,GAAYjL,IAAA,EAAArb,IAAA,GAIZulB,GAAcznF,MAAA,GA4Cd,GAzCAoZ,EAAAW,GAAAX,EAAAW,EAAAjlB,KAAAynE,IAAAznE,KAAAukB,EACAD,EAAAY,GAAAZ,EAAAY,EAAAllB,KAAA2nE,IAAA3nE,KAAAukB,EAIA6uE,EAAAzxE,KAAAisD,KAAAjsD,KAAA8K,KAAAnI,EAAAW,EAAAX,EAAAW,EAAAX,EAAAY,EAAAZ,EAAAY,IACAs2D,EAAA75D,KAAAk0D,MAAAvxD,EAAAY,EAAAZ,EAAAW,GACAX,EAAAW,GAAA,GAAAX,EAAAW,GAAAtD,KAAAurD,IAAA5oD,EAAAY,GACAytE,EAAAznF,MAAAmnF,GAAAC,OACGhuE,EAAAY,GAAA,GAAAZ,EAAAY,GAAAvD,KAAAurD,IAAA5oD,EAAAW,IACH0tE,EAAAznF,MAAAmnF,GAAAE,OACA/W,GAAUxX,GACP1/C,EAAAW,EAAA,IAAAX,EAAAW,GAAAtD,KAAAurD,IAAA5oD,EAAAY,IACHytE,EAAAznF,MAAAmnF,GAAAG,OACAhX,IAAA,EAAAA,EAA0B/W,EAAG+W,EAAQ/W,IAErCkuB,EAAAznF,MAAAmnF,GAAAI,OACAjX,GAAUxX,GAQVkS,EAAOzR,EAAG,GAAA9iD,KAAA4rD,IAAAiO,GACV+X,EAAA5xE,KAAAksD,IAAAqI,IAAAv0D,KAAAwsD,IAAA+H,GAAA,EAAAv0D,KAAA8K,KAAA,IACA+5D,EAAA7kE,KAAAisD,KAAA2lB,IAGAzmB,EAAA,GAFAumB,EAAA1xE,KAAAwsD,IAAAqN,IAEA6X,GADAC,EAAA3xE,KAAA4rD,IAAA6lB,IACAE,GAAA,EAAA3xE,KAAAwsD,IAAAxsD,KAAAisD,KAAA,EAAAjsD,KAAAwsD,IAAAqY,QACA,EACA1Z,GAAA,EACGA,EAAA,IACHA,EAAA,GAOA9sE,KAAA+yF,OAAAjB,GAAAK,IACA/kB,EAAAzrD,KAAA68D,KAAA1R,GACA4mB,EAAAtmB,IAAapJ,EAAOoJ,EACpBulB,EAAAznF,QAAAmnF,GAAAC,OACAoB,EAAAjL,IAAAjC,EAAuBxiB,EAClB2uB,EAAAznF,QAAAmnF,GAAAE,OACLmB,EAAAjL,IAAAjC,EAAA,EAAAA,EAAsC/hB,EAAG+hB,EAAW/hB,EAC/CkuB,EAAAznF,QAAAmnF,GAAAG,OACLkB,EAAAjL,IAAAjC,EAAuBxiB,EAEvB0vB,EAAAjL,IAAAjC,OAEG,GAAAxmF,KAAA+yF,OAAAjB,GAAAM,OACHhlB,EAAAzrD,KAAA68D,KAAA1R,GACA4mB,EAAAtmB,MAAmBpJ,EACnB2uB,EAAAznF,QAAAmnF,GAAAC,OACAoB,EAAAjL,KAAAjC,EAAwBxiB,EACnB2uB,EAAAznF,QAAAmnF,GAAAE,OACLmB,EAAAjL,KAAAjC,EACKmM,EAAAznF,QAAAmnF,GAAAG,OACLkB,EAAAjL,KAAAjC,EAAwBxiB,EAExB0vB,EAAAjL,IAAAjC,EAAA,GAAAA,EAAuC/hB,GAAG+hB,EAAY/hB,MAEnD,CAEH,IAAAqmB,EAAAjlC,EAAAnyB,EAEAwiD,GADA4U,EAAAhe,GACAge,EAQAjlC,GAFAqwB,IAJAxiD,EADAwiD,GAAA,EACA,EAEAv0D,KAAA8K,KAAA,EAAAypD,GAAAv0D,KAAAksD,IAAA2Y,IAEA9yD,IACA,EACA,EAEA/R,KAAA8K,KAAA,EAAAypD,GAGAyc,EAAAznF,QAAAmnF,GAAAE,QACArc,EAAArwB,EACAA,GAAAnyB,EACAA,EAAAwiD,GACKyc,EAAAznF,QAAAmnF,GAAAG,QACL3sC,KACAnyB,MACKi/D,EAAAznF,QAAAmnF,GAAAI,SACLvc,EAAArwB,EACAA,EAAAnyB,EACAA,GAAAwiD,GAGAl2E,KAAA+yF,OAAAjB,GAAAE,OACA9b,EAAA4U,EACAA,GAAAjlC,EACAA,EAAAqwB,GACKl2E,KAAA+yF,OAAAjB,GAAAG,MACLnH,KACAjlC,MACK7lD,KAAA+yF,OAAAjB,GAAAI,OACLhc,EAAA4U,EACAA,EAAAjlC,EACAA,GAAAqwB,GAGAwd,EAAAtmB,IAAAzrD,KAAA68D,MAAA9qD,GAA6BswC,EAC7B0vB,EAAAjL,IAAA9mE,KAAAk0D,MAAAhwB,EAAAilC,GACA9qF,KAAA+yF,OAAAjB,GAAAE,MACA0B,EAAAjL,IAAAmK,GAAAc,EAAAjL,KAA6CzkB,GACxChkE,KAAA+yF,OAAAjB,GAAAG,KACLyB,EAAAjL,IAAAmK,GAAAc,EAAAjL,KAA6ChkB,GACxCzkE,KAAA+yF,OAAAjB,GAAAI,OACLwB,EAAAjL,IAAAmK,GAAAc,EAAAjL,KAA6CzkB,IAqB7C,OAfA,IAAAhkE,KAAAiuE,KAGAulB,EAAAE,EAAAtmB,IAAA,MACA2f,EAAAprE,KAAA4rD,IAAAmmB,EAAAtmB,KACAqmB,EAAAzzF,KAAA2kB,EAAAhD,KAAA8K,KAAAsgE,IAAA/sF,KAAAizF,qBACAS,EAAAtmB,IAAAzrD,KAAAisD,KAAAjsD,KAAA8K,KAAAzsB,KAAAukB,EAAAvkB,KAAAukB,EAAAkvE,MAAAzzF,KAAAgzF,YAAAS,IACAD,IACAE,EAAAtmB,KAAAsmB,EAAAtmB,MAIAsmB,EAAAjL,KAAAzoF,KAAAgnE,MACA1iD,EAAAW,EAAAyuE,EAAAjL,IACAnkE,EAAAY,EAAAwuE,EAAAtmB,IACA9oD,GA4CAo1B,OALgB,8EE9VhBy9B,GAAKwc,aAAA,QACLxc,GAAKxnD,KAAQA,GACbwnD,GAAKnL,MAAA,IAAamL,GAAKxnD,KAAA,SACvBwnD,GAAKv8D,MAASwiE,GACdjG,GAAKb,QAAWA,GAChBa,GAAK5nD,KAAQ48C,EACbgL,GAAK3T,UAAaA,GAClB2T,GAAK5lD,KAAQA,GACb4lD,GAAK9jD,QAAWugE,GAAA,SDODtkE,GCNK6nD,IDOpBxnD,KAAAC,YAAAC,IAA6BguD,IAC7BvuD,GAAAK,KAAAC,YAAAC,IAA6B6wD,IAC7BpxD,GAAAK,KAAAC,YAAAC,IAA6B4oD,IAC7BnpD,GAAAK,KAAAC,YAAAC,IAA6BqyD,IAC7B5yD,GAAAK,KAAAC,YAAAC,IAA6B6yD,IAC7BpzD,GAAAK,KAAAC,YAAAC,IAA6BC,GAAA,SAC7BR,GAAAK,KAAAC,YAAAC,IAA6Bi0D,IAC7Bx0D,GAAAK,KAAAC,YAAAC,IAA6Bg2D,IAC7Bv2D,GAAAK,KAAAC,YAAAC,IAA6B42D,IAC7Bn3D,GAAAK,KAAAC,YAAAC,IAA6B24D,IAC7Bl5D,GAAAK,KAAAC,YAAAC,IAA6B85D,IAC7Br6D,GAAAK,KAAAC,YAAAC,IAA6B47D,IAC7Bn8D,GAAAK,KAAAC,YAAAC,IAA6Bu8D,IAC7B98D,GAAAK,KAAAC,YAAAC,IAA6B68D,IAC7Bp9D,GAAAK,KAAAC,YAAAC,IAA6B88D,IAC7Br9D,GAAAK,KAAAC,YAAAC,IAA6Bi9D,IAC7Bx9D,GAAAK,KAAAC,YAAAC,IAA6Bs9D,IAC7B79D,GAAAK,KAAAC,YAAAC,IAA6Bk/D,IAC7Bz/D,GAAAK,KAAAC,YAAAC,IAA6Bo/D,IAC7B3/D,GAAAK,KAAAC,YAAAC,IAA6Bw/D,IAC7B//D,GAAAK,KAAAC,YAAAC,IAA6B0/D,IAC7BjgE,GAAAK,KAAAC,YAAAC,IAA6B4/D,IAC7BngE,GAAAK,KAAAC,YAAAC,IAA6B2gE,IAC7BlhE,GAAAK,KAAAC,YAAAC,IAA6BgiE,IAC7BviE,GAAAK,KAAAC,YAAAC,IAA6BijE,IC9BdzsF,EAAA,4CCZR,SAAAsR,IACP,IAAAk8E,EAAA7zF,KAAAymE,KACAzmE,KAAA8zF,QAAA9zF,KAAAgnE,MACA,IAAA+sB,EAAApyE,KAAAksD,IAAAgmB,GACAG,EAAAh0F,KAAAukB,EAEA0vE,EAAA,EADAj0F,KAAAumE,GAEAsgB,EAAA,EAAAoN,EAAAtyE,KAAA2rD,IAAA2mB,EAAA,GACA/lB,EAAAluE,KAAAkuE,EAAAvsD,KAAA8K,KAAAo6D,GACA7mF,KAAA0vF,EAAA1vF,KAAA6nE,GAAAmsB,EAAAryE,KAAA8K,KAAA,EAAAo6D,IAAA,EAAAA,EAAAllE,KAAA2rD,IAAAymB,EAAA,IACA/zF,KAAAqnE,MAAA1lD,KAAA8K,KAAA,EAAAo6D,GAAA,EAAAA,GAAAllE,KAAA2rD,IAAA3rD,KAAAwsD,IAAA0lB,GAAA,IACA7zF,KAAAk0F,GAAAvyE,KAAAo9D,KAAAgV,EAAA/zF,KAAAqnE,OACA,IAAA4f,EAAAtlE,KAAAoqD,IAAApqD,KAAA4rD,IAAA5rD,KAAA65C,GAAA,EAAAx7D,KAAAk0F,GAAA,IACAC,EAAAxyE,KAAAoqD,IAAApqD,KAAA4rD,IAAA5rD,KAAA65C,GAAA,EAAAq4B,EAAA,IACAO,EAAAzyE,KAAAoqD,KAAA,EAAAmC,EAAA6lB,IAAA,EAAA7lB,EAAA6lB,IACA/zF,KAAAiiF,EAAAgF,EAAAjnF,KAAAqnE,MAAA8sB,EAAAn0F,KAAAqnE,MAAA6G,EAAA,EAAAkmB,EAGO,SAAA3wB,EAAAn/C,GACP,IAAA+vE,EAAA1yE,KAAAoqD,IAAApqD,KAAA4rD,IAAA5rD,KAAA65C,GAAA,EAAAl3C,EAAAY,EAAA,IACAovE,EAAAt0F,KAAAkuE,EAAA,EAAAvsD,KAAAoqD,KAAA,EAAA/rE,KAAAkuE,EAAAvsD,KAAAksD,IAAAvpD,EAAAY,KAAA,EAAAllB,KAAAkuE,EAAAvsD,KAAAksD,IAAAvpD,EAAAY,KACAqvE,GAAAv0F,KAAAqnE,OAAAgtB,EAAAC,GAAAt0F,KAAAiiF,EAGAt9D,EAAA,GAAAhD,KAAAisD,KAAAjsD,KAAA2sD,IAAAimB,IAAA5yE,KAAA65C,GAAA,GAGAmc,EAAA33E,KAAAqnE,OAAA/iD,EAAAW,EAAAjlB,KAAA8zF,SAGAU,EAAA7yE,KAAAisD,KAAAjsD,KAAAksD,IAAA8J,IAAAh2D,KAAAksD,IAAA7tE,KAAAk0F,IAAAvyE,KAAA4rD,IAAA5oD,GAAAhD,KAAAwsD,IAAAnuE,KAAAk0F,IAAAvyE,KAAAwsD,IAAAwJ,KAEA8c,EAAA9yE,KAAAo9D,KAAAp9D,KAAAwsD,IAAAnuE,KAAAk0F,IAAAvyE,KAAAksD,IAAAlpD,GAAAhD,KAAAksD,IAAA7tE,KAAAk0F,IAAAvyE,KAAAwsD,IAAAxpD,GAAAhD,KAAAwsD,IAAAwJ,IAIA,OAFArzD,EAAAY,EAAAllB,KAAA0vF,EAAA,EAAA/tE,KAAAoqD,KAAA,EAAApqD,KAAAksD,IAAA4mB,KAAA,EAAA9yE,KAAAksD,IAAA4mB,KAAAz0F,KAAA2nE,GACArjD,EAAAW,EAAAjlB,KAAA0vF,EAAA8E,EAAAx0F,KAAAynE,GACAnjD,EAGO,SAAAo/C,EAAAp/C,GAgBP,IAfA,IAAAqxD,EAAArxD,EAAAW,EAAAjlB,KAAAynE,GACAiO,EAAApxD,EAAAY,EAAAllB,KAAA2nE,GAEA6sB,EAAA7e,EAAA31E,KAAA0vF,EACA+E,EAAA,GAAA9yE,KAAAisD,KAAAjsD,KAAA2sD,IAAAoH,EAAA11E,KAAA0vF,IAAA/tE,KAAA65C,GAAA,GAEA72C,EAAAhD,KAAAo9D,KAAAp9D,KAAAwsD,IAAAnuE,KAAAk0F,IAAAvyE,KAAAksD,IAAA4mB,GAAA9yE,KAAAksD,IAAA7tE,KAAAk0F,IAAAvyE,KAAAwsD,IAAAsmB,GAAA9yE,KAAAwsD,IAAAqmB,IACA7c,EAAAh2D,KAAAisD,KAAAjsD,KAAAksD,IAAA2mB,IAAA7yE,KAAAwsD,IAAAnuE,KAAAk0F,IAAAvyE,KAAAwsD,IAAAqmB,GAAA7yE,KAAAksD,IAAA7tE,KAAAk0F,IAAAvyE,KAAA4rD,IAAAknB,KAEAC,EAAA10F,KAAA8zF,QAAAnc,EAAA33E,KAAAqnE,MAEAktB,EAAA,EACAI,EAAAhwE,EACAiwE,GAAA,IACAC,EAAA,EACAlzE,KAAAurD,IAAAynB,EAAAC,GAAA,OACA,KAAAC,EAAA,GAEA,OAGAN,EAAA,EAAAv0F,KAAAqnE,OAAA1lD,KAAAoqD,IAAApqD,KAAA4rD,IAAA5rD,KAAA65C,GAAA,EAAA72C,EAAA,IAAA3kB,KAAAiiF,GAAAjiF,KAAAkuE,EAAAvsD,KAAAoqD,IAAApqD,KAAA4rD,IAAA5rD,KAAA65C,GAAA,EAAA75C,KAAAo9D,KAAA/+E,KAAAkuE,EAAAvsD,KAAAksD,IAAA8mB,IAAA,IACAC,EAAAD,EACAA,EAAA,EAAAhzE,KAAAisD,KAAAjsD,KAAA2sD,IAAAimB,IAAA5yE,KAAA65C,GAAA,EAKA,OAFAl3C,EAAAW,EAAAyvE,EACApwE,EAAAY,EAAAyvE,EACArwE,EA5EA3jB,OAAAwM,eAAA9G,EAAA,cAAA6E,OAAA,IAAA7E,EAAA,KAAAsR,EAAAtR,EAAA,QAAAo9D,EAAAp9D,EAAA,QAAAq9D,EAAAp9D,EAAAo4E,EAAAr4E,EAAA,0BAAAqzC,IA+EO,IAAAA,GAAA,UACQrzC,EAAA,SACfsR,OACA8rD,UACAC,UACAhqB,4ICvEA,MAAAo7C,EAAA,WACE9uD,EAAA,QAAGzlC,KAAAP,OAGLW,OAAAG,EAAA,SAAAH,CAAQm0F,EAAM9uD,EAAA,SAMd8uD,EAAA50F,UAAAy/C,iBAAA,SAAA9sB,GACA,QAAA6G,EAAA7G,EAAAyT,WAA8B5M,EAAGA,IAAA6M,YACjC,GAAA7M,EAAA5qB,UAAAC,KAAAC,aACA,OAAAhP,KAAA4/C,aAAAlmB,GAGA,aAOAo7D,EAAA50F,UAAA0/C,aAAA,SAAAtxC,GACA,MAAAymF,EAAoBC,EAAA,QAAQrlF,mBAC5BmlF,EAAAG,SAAA3mF,MACA,OAAAymF,GAAA,MAUAD,EAAAI,aAAA,SAAA5mF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBmlF,EAAAK,iBAAA7mF,EAAAC,IAUAumF,EAAAM,mBAAA,SAAA9mF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBmlF,EAAAO,wBAAA/mF,EAAAC,IAUAumF,EAAAQ,gBAAA,SAAAhnF,EAAAC,GACA,MAAAhH,EAAA+G,EAAAqkC,aAAA,QACA,GAAAprC,EAGA,OAASytF,EAAA,QAAQrlF,iBAAkBpI,QACnCutF,EAAAS,oBAAAjnF,EACAC,IAUAumF,EAAAU,iBAAA,SAAAlnF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBmlF,EAAAW,sBAAAnnF,EAAAC,IAUAumF,EAAAY,SAAA,SAAApnF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBmlF,EAAAa,aAAArnF,EAAAC,IAUAumF,EAAAc,SAAA,SAAAtnF,EAAAC,GACA,MAAAsnF,EAAepuC,EAAA,EAAKC,SAAAp5C,GACpB,GAAAunF,EAGA,OAASb,EAAA,QAAQrlF,iBAAkBkmF,QACnCf,EAAAgB,wBAAAxnF,EAAAC,IAUAumF,EAAAiB,UAAA,SAAAznF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBAAmBmlF,EAAAkB,cACpC1nF,EAAAC,IAUAumF,EAAAmB,eAAA,SAAA3nF,EAAAC,GACA,MAAAhH,EAAA+G,EAAAqkC,aAAA,QACAznC,EAAgB8pF,EAAA,QAAQrlF,mBACxBmlF,EAAAoB,mBAAA5nF,EAAAC,GACArD,IAIAqD,IAAA1N,OAAA,GACA0G,GAAA2D,IAUA4pF,EAAAqB,wBAAA,SAAA7nF,EACAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBmlF,EAAAsB,6BAAA9nF,EACAC,IAUAumF,EAAAuB,WAAA,SAAA/nF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBmlF,EAAAwB,eAAAhoF,EAAAC,IAUAumF,EAAAyB,2BAAA,SAAAjoF,EACAC,GACA,OAASymF,EAAA,QAAQrlF,mBACXmlF,EAAA0B,gCAAAloF,EACNC,IAUAumF,EAAA2B,oBAAA,SAAAnoF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACXmlF,EAAA4B,yBAAApoF,EACNC,IAUAumF,EAAA6B,qBAAA,SAAAroF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACXmlF,EAAA8B,0BAAAtoF,EACNC,IAUAumF,EAAA+B,WAAA,SAAAvoF,EAAAC,GACA,OAASilB,EAAA,EAAGiB,WAAAnmB,IASZwmF,EAAAgC,iBACA,KACA,kCASAhC,EAAAG,SAAeD,EAAA,QAAQvlF,gBACvBqlF,EAAAgC,iBACAC,sBAA6B/B,EAAA,QAAQ7mC,yBACrC2mC,EAAAyB,4BACAS,gBAAuBhC,EAAA,QAAQ7mC,yBAC/B2mC,EAAA6B,sBACAM,mBAA0BjC,EAAA,QAAQ7mC,yBAClC2mC,EAAAqB,2BASArB,EAAAK,iBAAuBH,EAAA,QAAQvlF,gBAC/BqlF,EAAAgC,iBACAI,cAAqBlC,EAAA,QAAQ7mC,yBACvB36B,EAAA,EAAGiB,YACT0iE,KAAYnC,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YACjD2iE,mBAA0BpC,EAAA,QAAQ7mC,yBAC5B36B,EAAA,EAAGiB,YACT4iE,WAAkBrC,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YACvD6iE,QAAetC,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YACpD8iE,sBAA6BvC,EAAA,QAAQ7mC,yBAC/B36B,EAAA,EAAGiB,cASTqgE,EAAAO,wBAA8BL,EAAA,QAAQvlF,gBACtCqlF,EAAAgC,iBACAU,MAAaxC,EAAA,QAAQyC,yBAAA3C,EAAA+B,cASrB/B,EAAAS,oBAA0BP,EAAA,QAAQvlF,gBAClCqlF,EAAAgC,iBACAY,cAAqB1C,EAAA,QAAQ7mC,yBAC7B2mC,EAAAM,sBASAN,EAAAW,sBAA4BT,EAAA,QAAQvlF,gBACpCqlF,EAAAgC,iBACAa,MAAa3C,EAAA,QAAQ7mC,yBAAA2mC,EAAAuB,YACrBuB,QAAe5C,EAAA,QAAQ7mC,yBAAA2mC,EAAAI,gBASvBJ,EAAAa,aAAmBX,EAAA,QAAQvlF,gBAC3BqlF,EAAAgC,iBACAe,KAAY7C,EAAA,QAAQ7mC,yBAAA2mC,EAAAiB,aASpBjB,EAAAkB,cAAoBhB,EAAA,QAAQvlF,gBAC5BqlF,EAAAgC,iBACAgB,IAAW9C,EAAA,QAAQyC,yBAAA3C,EAAAc,UACnBmC,UAAAj0F,IASAgxF,EAAAoB,mBAAyBlB,EAAA,QAAQvlF,gBACjCqlF,EAAAgC,iBACAkB,IAAWhD,EAAA,QAAQ7mC,yBAAA2mC,EAAAY,YASnBZ,EAAAsB,6BAAmCpB,EAAA,QAAQvlF,gBAC3CqlF,EAAAgC,iBACAmB,UAAAnD,EAAAmB,iBASAnB,EAAAwB,eAAqBtB,EAAA,QAAQvlF,gBAC7BqlF,EAAAgC,iBACAoB,MAAalD,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YAClD0jE,UAAiBnD,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,cAStDqgE,EAAAgB,wBAA8Bd,EAAA,QAAQvlF,gBACtCqlF,EAAAgC,iBACAsB,WAAkBpD,EAAA,QAAQyC,yBAC1B3C,EAAAQ,mBASAR,EAAA4B,yBACI1B,EAAA,QAAQvlF,gBACZqlF,EAAAgC,iBACAuB,eAA0BrD,EAAA,QAAQ7mC,yBACxB36B,EAAA,EAAGiB,YACb6jE,aAAwBtD,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YAC7D8jE,YAAuBvD,EAAA,QAAQ7mC,yBAC/B2mC,EAAAU,oBASAV,EAAA0B,gCACIxB,EAAA,QAAQvlF,gBACZqlF,EAAAgC,iBACA0B,SAAoBxD,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YACzDgkE,kBAA6BzD,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YAClEikE,KAAgB1D,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YACrDkkE,MAAiB3D,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YACtDmkE,mBAA8B5D,EAAA,QAAQ7mC,yBAC5B36B,EAAA,EAAGiB,YACbokE,YAAuB7D,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,cAS5DqgE,EAAA8B,0BACI5B,EAAA,QAAQvlF,gBACZqlF,EAAAgC,iBACAgC,aAAwB9D,EAAA,QAAQ7mC,yBAA0B36B,EAAA,EAAGiB,YAC7DskE,aAAwB/D,EAAA,QAAQ7mC,yBAA0B1G,EAAA,EAAKC,UAC/DsxC,eAA0BhE,EAAA,QAAQ7mC,yBAClC2mC,EAAA2B,uBAEe,IAAAwC,EAAA,EC1Zf,MAAAC,EAAA,WACElzD,EAAA,QAAGzlC,KAAAP,MAMLA,KAAAm5F,WAAA,IAAwBF,GAGxBt4F,OAAAG,EAAA,SAAAH,CAAQu4F,EAAmBlzD,EAAA,SAW3BkzD,EAAAh5F,UAAA22C,KAMAqiD,EAAAh5F,UAAAy/C,iBAAA,SAAA9sB,GACA,QAAA6G,EAAA7G,EAAAyT,WAA8B5M,EAAGA,IAAA6M,YACjC,GAAA7M,EAAA5qB,UAAAC,KAAAC,aACA,OAAAhP,KAAA4/C,aAAAlmB,GAGA,aAOAw/D,EAAAh5F,UAAA0/C,aAAA,SAAAtxC,GACA,MAAA+kB,EAAA/kB,EAAAqkC,aAAA,WAAAje,OACA,IAAA0kE,EAAAp5F,KAAAm5F,WAAAv5C,aAAAtxC,GACA,OAAA8qF,GAGAA,EAAA,QAAA/lE,GACA+lE,EAAyBpE,EAAA,QAAQrlF,gBAAAypF,EACjCF,EAAAjE,SAAA3mF,QACA,MALA,MAeA4qF,EAAAG,cAAA,SAAA/qF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAAI,kBAAAhrF,EAAAC,IAUA2qF,EAAAK,WAAA,SAAAjrF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAAM,eAAAlrF,EAAAC,IAUA2qF,EAAAO,mBAAA,SAAAnrF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAAQ,aAAAprF,EAAAC,IAUA2qF,EAAAS,WAAA,SAAArrF,EAAAC,GACA,MAAAtB,EAAgB+nF,EAAA,QAAQrlF,mBACxBupF,EAAAU,eAAAtrF,EAAAC,GACA,IAAAtB,EACA,OAEA,MAAA4sF,EAAA,SAAAvrF,EAAAqkC,aAAA,aAEA,OADA1lC,EAAA,UAAA4sF,EACA5sF,GAWAisF,EAAAY,uBAAA,SAAAxrF,EACAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAAa,mBAAAzrF,EAAAC,IAUA2qF,EAAAc,gBAAA,SAAA1rF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAAe,mBAAA3rF,EAAAC,IAUA2qF,EAAAgB,iBAAA,SAAA5rF,EAAAC,GACA,MAAA09B,EAAA39B,EAAAqkC,aAAA,UACA75B,EAAAxK,EAAAqkC,aAAA,YACAwnD,EAAA7rF,EAAAqkC,aAAA,gBACAynD,KAUA,OATAnuD,IACAmuD,EAAA,OAAAnuD,GAEAnzB,IACAshF,EAAA,SAAAthF,GAEAqhF,IACAC,EAAA,aAAAD,GAEAC,GAUAlB,EAAAmB,sBAAA,SAAA/rF,EAAAC,GACA,MAAAue,EAAsBkoE,EAAA,QAAQrlF,mBAC9BupF,EAAAoB,oBAAAhsF,EAAAC,GACA,MAAAue,EAAAjsB,OAGA,OAASF,OAAAY,EAAA,eAAAZ,CAAcmsB,IAUvBosE,EAAAqB,eAAA,SAAAjsF,EAAAC,GACA,MAAAisF,KAGA,OAFAA,EAAA,OAAAlsF,EAAAqkC,aAAA,UACA6nD,EAAA,KAAmB/yC,EAAA,EAAKC,SAAAp5C,GACxBksF,GAUAtB,EAAAuB,iBAAA,SAAAnsF,EAAAC,GACA,MAAAue,EAAsB0G,EAAA,EAAGiB,WAAAnmB,GAAAmH,MAAA,KACzB,IAAAqX,GAAA,GAAAA,EAAAjsB,OACA,OAEA,MAAAokB,GAAA6H,EAAA,GACA5H,GAAA4H,EAAA,GACA,OAAAqH,MAAAlP,IAAAkP,MAAAjP,QAAA,GAGAD,EAAAC,IAUAg0E,EAAAwB,gBAAA,SAAApsF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAAyB,YAAArsF,EAAAC,IAUA2qF,EAAA0B,0BAAA,SAAAtsF,EACAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAA2B,yBAAAvsF,EACAC,IAUA2qF,EAAA4B,sBAAA,SAAAxsF,EAAAC,GACA,OAASymF,EAAA,QAAQrlF,mBACjBupF,EAAA6B,oBAAAzsF,EAAAC,IASA2qF,EAAApC,iBACA,KACA,mCASAoC,EAAA8B,qBACA,KACA,kCASA9B,EAAAjE,SAA4BD,EAAA,QAAQvlF,gBACpCypF,EAAApC,iBACAmE,SAAgBjG,EAAA,QAAQ7mC,yBACxB+qC,EAAAG,iBASAH,EAAAI,kBAAqCtE,EAAA,QAAQvlF,gBAC7CypF,EAAApC,iBACAoE,MAAalG,EAAA,QAAQyC,yBACrByB,EAAAK,YACA4B,cAAqBnG,EAAA,QAAQyC,yBAC7ByB,EAAAO,sBASAP,EAAAM,eAAkCxE,EAAA,QAAQvlF,gBAC1CypF,EAAApC,iBACAsE,MAAapG,EAAA,QAAQyC,yBACrByB,EAAAS,YACA0B,OAAcrG,EAAA,QAAQyC,yBAChBjkE,EAAA,EAAGiB,YACT6mE,kBAAyBtG,EAAA,QAAQyC,yBACjCyB,EAAAY,wBACAyB,UAAiBvG,EAAA,QAAQyC,yBACzByB,EAAAc,iBACAwB,YAAmBxG,EAAA,QAAQyC,yBAC3ByB,EAAAgB,mBACKlF,EAAA,QAAQvlF,gBAAAypF,EAAA8B,qBACbrC,MAAa3D,EAAA,QAAQ7mC,yBACf36B,EAAA,EAAGiB,YACT+jE,SAAgBxD,EAAA,QAAQ7mC,yBAClB36B,EAAA,EAAGiB,YACTgnE,iBAAwBzG,EAAA,QAAQ7mC,yBAChC+qC,EAAAmB,uBACAqB,WAAkB1G,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGiB,eASTykE,EAAAU,eAAkC5E,EAAA,QAAQvlF,gBAC1CypF,EAAApC,iBACA6E,UAAiB3G,EAAA,QAAQyC,yBACzByB,EAAAqB,iBACKvF,EAAA,QAAQvlF,gBAAAypF,EAAA8B,qBACbrC,MAAa3D,EAAA,QAAQ7mC,yBACf36B,EAAA,EAAGiB,YACTinE,WAAkB1G,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGiB,eASTykE,EAAAa,mBAAsC/E,EAAA,QAAQvlF,gBAC9CypF,EAAApC,iBACAqE,cAAqBnG,EAAA,QAAQ7mC,yBACvB36B,EAAA,EAAGiB,YACTmnE,oBAA2B5G,EAAA,QAAQ7mC,yBACnC+qC,EAAA0B,6BAQA1B,EAAA2B,yBAA4C7F,EAAA,QAAQvlF,gBACpDypF,EAAApC,iBACA+E,iBAAwB7G,EAAA,QAAQ1lF,gBAChC4pF,EAAA4B,yBASA5B,EAAA6B,oBAAuC/F,EAAA,QAAQvlF,gBAC/CypF,EAAApC,iBACAgF,WAAkB9G,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGiB,YACTsnE,WAAkB/G,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGc,wBACT0nE,WAAkBhH,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGc,wBACT2nE,WAAkBjH,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGc,wBACT4nE,WAAkBlH,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGc,0BAST4kE,EAAAe,mBAAsCjF,EAAA,QAAQvlF,gBAC9CypF,EAAApC,iBACAqF,QAAenH,EAAA,QAAQ7mC,yBACjB36B,EAAA,EAAGiB,YACT+iE,MAAaxC,EAAA,QAAQyC,yBACfjkE,EAAA,EAAGiB,aACJugE,EAAA,QAAQvlF,gBAAAypF,EAAA8B,qBACbU,WAAkB1G,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGiB,eASTykE,EAAAoB,oBAAuCtF,EAAA,QAAQvlF,gBAC/CypF,EAAA8B,qBACAoB,YAAmBpH,EAAA,QAAQ1lF,gBAC3B4pF,EAAAuB,kBACA4B,YAAmBrH,EAAA,QAAQ1lF,gBAC3B4pF,EAAAuB,oBASAvB,EAAAQ,aAAgC1E,EAAA,QAAQvlF,gBACxCypF,EAAApC,iBACAwF,kBAAyBtH,EAAA,QAAQ7mC,yBAC3B36B,EAAA,EAAGiB,YACTqnE,WAAkB9G,EAAA,QAAQyC,yBAC1ByB,EAAAwB,kBACK1F,EAAA,QAAQvlF,gBAAAypF,EAAA8B,qBACbuB,aAAoBvH,EAAA,QAAQ7mC,yBACtB36B,EAAA,EAAGiB,YACTinE,WAAkB1G,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGiB,eASTykE,EAAAyB,YAA+B3F,EAAA,QAAQvlF,gBACvCypF,EAAApC,iBACA0F,cAAqBxH,EAAA,QAAQ7mC,yBAC7B+qC,EAAAuB,kBACAgC,iBAAwBzH,EAAA,QAAQ7mC,yBAC1B36B,EAAA,EAAGY,aACTsoE,UAAiB1H,EAAA,QAAQ7mC,yBACnB36B,EAAA,EAAGc,wBACTqoE,WAAkB3H,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGc,wBACTsoE,YAAmB5H,EAAA,QAAQ7mC,yBACrB36B,EAAA,EAAGc,wBACTuoE,aAAoB7H,EAAA,QAAQ7mC,yBACtB36B,EAAA,EAAGc,yBACJ0gE,EAAA,QAAQvlF,gBAAAypF,EAAA8B,qBACbU,WAAkB1G,EAAA,QAAQ7mC,yBACpB36B,EAAA,EAAGiB,eAEMpuB,EAAA,4FCxdf,QAAAC,EAAA,SACAA,EAAA,MACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDARA,IAAMC,GAsBNA,YAAsB,SAAS4K,GAC7B9I,UAAYC,iBAAiB6I,EAAa2rF,WAE1Cn8F,OAAOwM,eAAegE,EAAa,UACjCse,IAAK,kBAAMte,EAAY4rF,aACvBp3E,IAAK,SAAC7C,GACJ3R,EAAY6rF,UAAUl6E,OAiB5Bvc,MAAgB,SAASsI,GACvBxG,UAAYC,iBAAiBuG,EAAOouF,WAEpCt8F,OAAOwM,eAAe0B,EAAO,WAC3BquF,cAAc,EAIdztE,IAAK,kBAAM5gB,EAAMkqC,cAIjBpzB,IAAK,SAAC7C,GACJjU,EAAMunC,WAAWtzB,MAIrBniB,OAAOwM,eAAe0B,EAAO,WAC3BquF,cAAc,EAIdztE,IAAK,kBAAM5gB,EAAMsuF,cAIjBx3E,IAAK,SAAC7C,GACJjU,EAAMuuF,WAAWt6E,OAmBvBvc,aAAuB,SAASsI,EAAO8zB,GAErC,IAAIra,SAKA+0E,EAAkB,KAKlBC,EAAkB,KAMhBC,EAoDN,SAASC,EAAW3uF,GAClB,IAAI4uF,EAAoC5uF,EAAM4gB,IAAI,cAClD,IAAM3b,EAAuCjF,EAAM4gB,IAAI,gBACvD5gB,EAAM8W,IAAI,eAAgB83E,GAAY,GAClC3pF,GACF0pF,EAAW1pF,IAnDT4pF,EA4DN,SAASC,EAAW9uF,GAClB,IAAI4uF,EAAoC5uF,EAAM4gB,IAAI,cAClD,IAAM3b,EAAuCjF,EAAM4gB,IAAI,gBACvD5gB,EAAM8W,IAAI,eAAgB83E,GAAY,GAClC3pF,GACF6pF,EAAW7pF,IAtDf,GATAjF,EAAM8W,IAAI,aAAc,GAAG,GAEvB9W,aAAiB80B,WACnB90B,EAAMV,YAAYyvF,GAAG,MAAO,SAACC,GACVA,EAAQ71F,QAChB2d,IAAI,eAAgB9W,KAI7BA,aAAiB60B,UAAc,CAEjC,GAAe,QADfpb,EAASzZ,EAAMwqC,aAEb,OACS/wB,aAAkBw1E,WAC3BT,GAAmB,iBACnBC,GAAmB,cAAe,kBACzBh1E,aAAkBy1E,WAC3BV,GAAmB,kBACnBC,GAAmB,eAAgB,mBAEnCj1F,UAAYy3B,KAAK,2BAGnBxX,EAAOs1E,GAAGP,EAAiB,WACzBE,EAAoB1uF,GACpB8zB,EAAOq7D,gBAGT11E,EAAOs1E,GAAGN,EAAiB,WACzBI,EAAoB7uF,GACpB8zB,EAAOq7D,gBAIXr9F,OAAOwM,eAAe0B,EAAO,WAC3BquF,cAAc,EACdztE,IAAK,kBAA6B5gB,EAAM4gB,IAAI,cAAiB,iBAiClDlpB,iGC1Lf,QAAAD,EAAA,QAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,QACAA,EAAA,UAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,UAGAA,EAAA,OAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,UAGAA,EAAA,QAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,IACY8J,IAAZ9J,EAAA,IACYmT,IAAZnT,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yUA+BA,IAAMC,EAAU,SAAVA,EAAmB+J,EAAIhF,EAAUhC,EAAYozB,EAAWuhE,EAAcC,EAC1Ex0F,EAAkBm0C,GAAc,IAAAtsC,EAAAvR,KAMhCA,KAAKwQ,GAAKF,EAMVtQ,KAAKyQ,WAAanH,EAMlBtJ,KAAK65C,UAAYvuC,EASjBtL,KAAKm+F,+BAAiC,KAQtCn+F,KAAKo+F,cAAgBH,EAMrBj+F,KAAKq+F,iBAAmBH,EAMxBl+F,KAAK+J,kBAAoBL,EAMzB1J,KAAKs+F,cAAgB5hE,EAAUU,IAAI,gBACjCV,EAAUjN,IAAI,gBAAkB,KAMlCzvB,KAAKu+F,wBAA0B7hE,EAAUU,IAAI,0BAC3CV,EAAUjN,IAAI,0BAA4B,KAK5C,IAAMrY,EAAwBslB,EAAUU,IAAI,yBAC1CV,EAAUjN,IAAI,yBAA2B,KAM3CzvB,KAAKw+F,gBAAkBpnF,EACrBA,EAAsBkrD,oBAAsB,KAM9CtiE,KAAKy+F,eAAiB/hE,EAAUU,IAAI,qBAClCV,EAAUjN,IAAI,qBAAuB,KAMvCzvB,KAAK0+F,aAAehiE,EAAUU,IAAI,eAChCV,EAAUjN,IAAI,eAAiB,KAMjC,IAAMkvE,EAAsBjiE,EAAUU,IAAI,uBACxCV,EAAUjN,IAAI,0BA+FhB,IA9F4C,IAAxCkvE,EAAoBC,iBAEtB5+F,KAAK+J,kBAAkBm0C,oBAAmB,GAO5Cl+C,KAAK6+F,6BAA+BF,EAAoBG,0BAMxD9+F,KAAK++F,+BACHriE,EAAUU,IAAI,iCACZV,EAAUjN,IAAI,iCAAmC,KAMrDzvB,KAAK4J,WAAa8yB,EAAUU,IAAI,aAAeV,EAAUjN,IAAI,aAAe,KAM5EzvB,KAAKg/F,yBAA2BtiE,EAAUU,IAAI,2BAC5CV,EAAUjN,IAAI,2BAA6B,KAM7CzvB,KAAKi/F,iBAAmBviE,EAAUU,IAAI,mBACpCV,EAAUjN,IAAI,mBAAqB,KAMrCzvB,KAAKk/F,cAAgBxiE,EAAUU,IAAI,gBACjCV,EAAUjN,IAAI,qBAAkB3rB,EAMlC9D,KAAK8J,gBAAkB4yB,EAAUU,IAAI,kBACnCV,EAAUjN,IAAI,kBAAoB,KAQpCzvB,KAAKs9B,cAAgBugB,EAMrB79C,KAAKm/F,kBAAoBziE,EAAUU,IAAI,oBACrCV,EAAUjN,IAAI,oBAAsB,KAMtCzvB,KAAKo/F,SAAW1iE,EAAUU,IAAI,WAC5BV,EAAUjN,IAAI,WAAa,KAM7BzvB,KAAK4Q,KAAO,KAMZ5Q,KAAKq/F,oBAAsB3iE,EAAUU,IAAI,sBACvCV,EAAUjN,IAAI,sBAAwB,KAOxCzvB,KAAKs/F,mBAAqB,UACkBx7F,IAAxC66F,EAAoBY,iBAAiCv/F,KAAKq/F,oBAAqB,CACjF,IAAMzvE,EAAc5vB,KAAKq/F,oBAAoBG,kBAAkBb,EAAoBY,iBAC/E3vE,EAAY/uB,OAAS,IACvBb,KAAKs/F,mBAAqB1vE,GAQ9B5vB,KAAKy/F,kBAAoB,KAMzBz/F,KAAK0/F,qBAEsC57F,IAAvC66F,EAAoB1/C,eACtBj/C,KAAK0/F,gBAAkBf,EAAoB1/C,eAE3Cj/C,KAAK0/F,iBAAmB,IAAIv+E,WAC1BC,MAAO,IAAI89B,WACTj+B,OAAQ,IAAIH,WACVD,MAAO,2BACPE,MAAO,IAETsM,OAAQ,EACRnQ,OAAQ,EACRiiC,QAAS,EACTC,MAAO,MAEP,IAAIj+B,WACNC,MAAO,IAAI89B,WACTj+B,OAAQ,IAAIH,WACVD,MAAO,qBACPE,MAAO,IAETsM,OAAQ,EACRnQ,OAAQ,EACRiiC,QAAS,EACTC,MAAO,OASbp/C,KAAK2/F,YAAc,KAMnB3/F,KAAK4/F,mBAAqB,IAAIC,WAC5B7yF,UAAU,EACV+M,cAAc,EACdQ,gBACEgD,UAAagE,UAA4BmlC,MACzCo5C,YAAev+E,UAA4BW,QAC3CxB,UAAaa,UAA4BmlC,MACzCjmC,SAAYc,UAA4BY,KACxC49E,MAASx+E,UAA4BgB,aACrC+J,SAAY/K,UAA4Be,UACxC09E,QAAWz+E,UAA4BC,QACvCja,KAAQga,UAA4BolC,KACpChmC,YAAeY,UAA4BY,KAC3C89E,UAAa1+E,UAA4BkB,WACzCy9E,YAAe3+E,UAA4BiB,aAC3CzE,YAAewD,UAA4BmlC,MAC3CxoC,YAAeqD,UAA4Ba,UAM3CpiB,KAAKu+F,yBACPv3F,UAAS4B,OACP5I,KAAKu+F,wBACL,SACAv+F,KAAKmgG,oCACLngG,MAIJA,KAAKyQ,WAAW0yB,IAAI,uBAAwB,SAACmjB,EAAOj0C,EAAUoyB,GAC5D,IAAMC,KACN,GAAID,EAAYn2B,KAAKyF,MAAO,CAC1B,IAAMqwB,EAAQ/xB,EAASS,WACvBzK,UAAY2I,OAAiB,OAAVozB,GAA4B,QAAVA,GACrC,IAAMiS,EAAoB,OAAVjS,EAChB/xB,EAASR,mBAAmB,SAACuuF,GAC3B,QAA2Bt8F,IAAvBs8F,EAAK9xF,KAAK/D,SAAwB,CACpC,IAAM81F,EAAQ95F,EAAQ+5F,YAAYC,YAAcH,EAAK9xF,KAAK/G,KAC1Dm9B,EAAS27D,GAAShqD,SAGjB,CACL,IAAMmqD,KACN/7D,EAAY5yB,mBAAmB,SAACuuF,QACHt8F,IAAvBs8F,EAAK9xF,KAAK/D,UAA8C,OAApB61F,EAAKttF,YAC3C0tF,EAAc35F,KAAKu5F,EAAK9xF,KAAK/G,QAGjCm9B,EAASn+B,EAAQ+5F,YAAYG,kBAAoBh8D,EAAYn2B,KAAK/G,MAAQi5F,EAAcnsF,KAAK,KAE/F9C,EAAKxH,kBAAkBK,YAAYs6B,KAErC1kC,KAAKyQ,WAAW0yB,IAAI,yBAA0B,SAACmjB,EAAOj0C,GACpD,IAAMqyB,KACAg8D,EAAUruF,EAASxD,MAAMsuF,aAI/Bz4D,GAHmBryB,EAASyB,OAAOxF,KAAKyF,MACtCxN,EAAQ+5F,YAAYK,aAAep6F,EAAQ+5F,YAAYM,oBACrDvuF,EAAS/D,KAAK/G,MACIm5F,EACtBnvF,EAAKxH,kBAAkBK,YAAYs6B,KAMrC,IAAM93B,EAAW5M,KAAKiqB,cAClBjqB,KAAKs+F,gBACP1xF,EAAS7F,QAAQ,SAASyF,GACpBxM,KAAKy+F,gBACPz+F,KAAKy+F,eAAezxF,SAASR,GAE/BxM,KAAK6gG,gBAAgBr0F,IACpBxM,MAEHA,KAAKs+F,cAAc7nF,OAAO7J,GAC1B5F,UAAS4B,OAAO5I,KAAKs+F,cAAe,MAAOt+F,KAAK8gG,uBAAwB9gG,MACxEgH,UAAS4B,OAAO5I,KAAKs+F,cAAe,SAAUt+F,KAAK+gG,0BAA2B/gG,OAG5EA,KAAKy+F,gBACPz+F,KAAKyQ,WAAW0yB,IAAI,uBAAwB,WAC1Cv2B,EAAS7F,QAAQ,SAASyF,GACxBxM,KAAKy+F,eAAezxF,SAASR,IAD/B+E,KAMAvR,KAAKi/F,kBACPj/F,KAAKyQ,WAAW0yB,IAAI69D,UAAgBn2F,UAAUC,eAAgB,SAACw7C,EAAO/+C,GACpEgK,EAAK0vF,eAAe15F,KAUxBvH,KAAKkhG,oCAAsC,KAEvClhG,KAAK0+F,cAAgB1+F,KAAK++F,gCAE5B/+F,KAAKmhG,2BAA2BhvF,KAAK,WAGnCnL,UAAS4B,OACP2I,EAAKwtF,+BAA+BqC,oBACpC,MACA7vF,EAAK8vF,oCAHP9vF,GAMAvK,UAAS4B,OACP2I,EAAKwtF,+BAA+BqC,oBACpC,SACA7vF,EAAK+vF,uCAHP/vF,GAMAvK,UAAS4B,OACP2I,EAAKwtF,+BAA+BwC,qBACpC,MACAhwF,EAAK8vF,oCAHP9vF,GAMAvK,UAAS4B,OACP2I,EAAKwtF,+BAA+BwC,qBACpC,SACAhwF,EAAK+vF,uCAHP/vF,GArByC,IAAA65B,GAAA,EAAAC,GAAA,EAAAC,OAAAxnC,EAAA,IA8BzC,QAAAynC,EAAAC,EAAuBj6B,EAAKwtF,+BAA+ByC,UAA3D/1D,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsE,KAA3Dq2D,EAA2Dl2D,EAAArgC,MACpEqG,EAAKmwF,yBAAyBD,IA/BS,MAAA31D,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAAA,IAAAkC,GAAA,EAAAC,GAAA,EAAAC,OAAA5pC,EAAA,IAiCzC,QAAA6pC,EAAAC,EAAwBr8B,EAAKwtF,+BAA+B4C,WAA5Dl2D,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAAwE,KAA7Do0D,EAA6Dj0D,EAAAziC,MACtEqG,EAAKmwF,yBAAyBE,IAlCS,MAAA91D,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,MAuC7C1tC,KAAK6hG,+PAUPt7F,EAAQrG,UAAU4hG,aAAe,WAC/B,IAAM78E,EAAIjlB,KAAK+J,kBAAkB60C,sBAAsBzzC,UAAQqvC,eAAeunD,OACxE78E,EAAIllB,KAAK+J,kBAAkB60C,sBAAsBzzC,UAAQqvC,eAAewnD,OAE9E,IAAK7tE,MAAMlP,KAAOkP,MAAMjP,GAAI,CAC1B,IAAMu6B,GAAUx6B,EAAGC,GACnB,GAAgC,OAA5BllB,KAAKs/F,oBAA+Bt/F,KAAKq/F,oBAAqB,CAChE,IAAM4C,EAAmBjiG,KAAK4Q,KAAKsE,UAAUK,gBACvC2sF,EAAoBliG,KAAKq/F,oBAAoB8C,4BACjD1iD,EAAQwiD,EAAiBt4E,YAAas4E,EACtCjiG,KAAKs/F,oBACP,GAAI4C,EACF,OAAOA,EAGX,OAAOziD,EAET,OAAO,MASTl5C,EAAQrG,UAAUkiG,WAAa,WAC7B,IAAM1iD,EAAO1/C,KAAK+J,kBAAkB60C,sBAAsBzzC,UAAQqvC,eAAe6nD,OACjF,OAAOluE,MAAMurB,QAAQ57C,EAAY47C,GAYnCn5C,EAAQrG,UAAUoiG,gBAAkB,WAClC,IAAMC,EAAYviG,KAAK+J,kBAAkB80C,uBAAuB1zC,UAAQqvC,eAAegoD,eACvF,YAAqB1+F,IAAdy+F,EAA0BviG,KAAK6+F,2BAA6B0D,GASrEh8F,EAAQrG,UAAUuiG,gBAAkB,SAASC,GAC3C,IAAIC,SAEFA,EADED,GAGoB1iG,KAAK4Q,KAAKsE,UAAU0tF,YAE5Cv6F,UAAYw6F,YAAYF,GAGpB3iG,KAAKy/F,mBACPz/F,KAAKw+F,gBAAgB/xF,cAAczM,KAAKy/F,mBAG1Cz/F,KAAKy/F,kBAAoB,IAAIj6E,UAC3B,IAAIhG,UAAYmjF,IAClB3iG,KAAKy/F,kBAAkBzyF,SAAShN,KAAK0/F,iBAGrC1/F,KAAKw+F,gBAAgBjyF,WAAWvM,KAAKy/F,oBAYvCl5F,EAAQrG,UAAU4iG,cAAgB,WAChC,OAAO9iG,KAAK+J,kBAAkB40C,sBAAsBxzC,UAAQqvC,eAAeuoD,cAS7Ex8F,EAAQrG,UAAU8iG,cAAgB,SAASC,EAAaP,GACtD,IAAIQ,SAEFA,EADER,GAGgB1iG,KAAK4Q,KAAKsE,UAAU0tF,YAExCv6F,UAAYw6F,YAAYK,GAExB,IAAMC,EAAMrrF,EAAE,UACZE,MAAS,wBACTwG,KAAQykF,IACP,GAEsB,OAArBjjG,KAAK2/F,aACP3/F,KAAK4Q,KAAKoI,cAAchZ,KAAK2/F,aAG/B3/F,KAAK2/F,YAAc,IAAIyD,WACrBp7F,QAASm7F,EACTE,SAAUH,IAGZljG,KAAK4Q,KAAK0yF,WAAWtjG,KAAK2/F,cAY5Bp5F,EAAQrG,UAAU+pB,YAAc,WAC9B,IAAM20D,EAAI5+E,KAAK+J,kBAAkB40C,sBAAsBxzC,UAAQqvC,eAAe+oD,UAC9E,YAAUz/F,IAAN86E,GAAyB,KAANA,EACdv2E,UAAY2I,OAAOhR,KAAK4/F,mBAAmB9vF,aAAa8uE,QAUnEr4E,EAAQrG,UAAUsjG,cAAgB,SAASzkE,GAGzC,IAHqD,IAAA9sB,EAAAjS,KAE/CwR,EAAOxR,KAAKs9B,cAAco7B,uBAAuBnyD,EAAQ+5F,YAAYmD,YAClE90F,EAAI,EAAGA,EAAI6C,EAAK3Q,OAAQ8N,IAAK,CACpC,IAAMhI,EAAM6K,EAAK7C,GACXzD,EAAQlL,KAAKs9B,cAAcmhB,SAAS93C,GAC1C0B,UAAY2I,OAAO9F,GACnB6zB,EAAWp4B,EAAIlG,MAAM8F,EAAQ+5F,YAAYmD,WAAW5iG,SAAWqK,EAGjElL,KAAKyQ,WAAWkB,iBAAiB,kBAAMotB,GAAY,SAACA,GAClD,IAAM99B,KACN,IAAK,IAAM0F,KAAOo4B,EAChB99B,EAAOsF,EAAQ+5F,YAAYmD,WAAa98F,GAAOo4B,EAAWp4B,GAE5DsL,EAAKqrB,cAAc2Y,aAAah1C,MAepCsF,EAAQrG,UAAUoR,OAAS,SAASnJ,GAAK,IAAA05B,EAAA7hC,KAEnCmI,IAAQnI,KAAK4Q,OAIb5Q,KAAK4Q,OACP5Q,KAAK0jG,iBACL1jG,KAAK4Q,KAAO,MAGVzI,IACFnI,KAAK4Q,KAAOzI,EACRnI,KAAKg/F,yBACPh/F,KAAKg/F,yBAAyB2E,aAAaxxF,KAAK,SAAC3F,GAC/Cq1B,EAAK+hE,aAAaz7F,EAAKqE,KAGzBxM,KAAK4jG,aAAaz7F,EAAK,SAa7B5B,EAAQrG,UAAU0jG,aAAe,SAASz7F,EAAK07F,GAAW,IAAAroD,EAAAx7C,KAElDiV,EAAO9M,EAAI+M,UACbuqC,SAKJ,GAAIokD,GAAaA,EAAUviF,cAAe,CACxC,IAAMnM,EAAOhN,EAAIiN,UACjB/M,UAAY2I,OAAOmE,GACnBF,EAAK6uF,IAAID,EAAUviF,cAAcqI,YAAaxU,OACzC,CAEL,IADkBnV,KAAK+J,kBAAkB80C,uBAAuBklD,UAAkBC,iBAAiB/qF,SACnF,EACdwmC,EAASz/C,KAAK8hG,iBAEZ7sF,EAAKgvF,UAAUxkD,GAEjB,IAAMC,EAAO1/C,KAAKoiG,kBACLt+F,IAAT47C,GACFzqC,EAAKivF,QAAQxkD,IAQnB1/C,KAAKm+F,+BAAiCn3F,UAAS4B,OAC7CqM,EACA,iBACAjV,KAAKo+F,cAAc,WACjB,IAAM3+C,EAASxqC,EAAK2tF,YACdljD,EAAOzqC,EAAKkvF,UACZ7lE,KACNA,EAAOnzB,UAAQqvC,eAAeunD,OAASpgF,KAAKC,MAAM69B,EAAO,IACzDnhB,EAAOnzB,UAAQqvC,eAAewnD,OAASrgF,KAAKC,MAAM69B,EAAO,IACzDnhB,EAAOnzB,UAAQqvC,eAAe6nD,OAAS3iD,EACvClE,EAAKzxC,kBAAkBK,YAAYk0B,IAClC,KAAuB,GAC1Bt+B,MAGEA,KAAKsiG,mBAAqBtiG,KAAKw+F,iBACjCx+F,KAAKyiG,gBAAgBhjD,GAIvB,IAAMwjD,EAAcjjG,KAAK8iG,gBACrBG,GACFjjG,KAAKgjG,cAAcC,EAAaxjD,GAIlC,IAAM2kD,EAAmBpkG,KAAKqkG,uBACL,OAArBD,GAA6BpkG,KAAKm/F,mBACpCn/F,KAAKm/F,kBAAkBmF,MAAMF,EAAkBj8F,IASnD5B,EAAQrG,UAAUwjG,eAAiB,WACjCr7F,UAAY2I,OACVhR,KAAKm+F,+BAAgC,yBACvCn3F,UAASC,cAAcjH,KAAKm+F,gCAC5Bn+F,KAAKm+F,+BAAiC,MAcxC53F,EAAQrG,UAAUqkG,mBAAqB,SAASv2F,GAC9C,IAAMkB,EAAYlP,KAAK+J,kBAAkB40C,sBAAsBxzC,UAAQqvC,eAAegqD,UACtF,QAAkB1gG,IAAdoL,EAAyB,KAAA6+B,GAAA,EAAAC,GAAA,EAAAC,OAAAnqC,EAAA,IAC3B,QAAAoqC,EAAAC,EAAoBngC,EAApBy9B,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAA4B,KAAjBl/B,EAAiBq/B,EAAAhjC,MAC1B,GAAI2D,EAAM4gB,IAAI,WAAavgB,EACzB,OAAOL,GAHgB,MAAAi9B,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,IAO7B,OAAO,MAST1nC,EAAQrG,UAAUigG,oCAAsC,WACtD,GAAKngG,KAAK4Q,MAAS5Q,KAAKu+F,wBAAxB,CAKA,IACMrvF,EADQlP,KAAKu+F,wBAAwB9uE,IAAIzvB,KAAK4Q,MAC5B6e,IAAI,SAC5BpnB,UAAYo7B,aAAav0B,GAGzB,IAAMovB,KACNA,EAAOnzB,UAAQqvC,eAAegqD,UAAYt1F,EAC1ClP,KAAK+J,kBAAkBK,YAAYk0B,KAYrC/3B,EAAQrG,UAAUukG,wBAA0B,WAC1C,GAAKzkG,KAAK8J,gBAAV,CAIA,IACM46F,EADa1kG,KAAK8J,gBAAgB8H,SAAStD,KAAK/D,SACtBpC,IAAI,SAAAmG,GAAA,OAAQA,EAAK/G,OAG3C+2B,KACNA,EAAOnzB,UAAQqvC,eAAeC,aAAeiqD,EAAarwF,KAAK,KAC/DrU,KAAK+J,kBAAkBK,YAAYk0B,KAUrC/3B,EAAQrG,UAAUykG,YAAc,SAASC,GACvC,IAAMC,EAAeD,EAAaljF,QAAQ,SAC1C,OAAwB,GAAjBmjF,GAAsBA,GAAgBD,EAAa/jG,OAAS,GAQrE0F,EAAQrG,UAAU+gG,eAAiB,SAASziE,GAC1C,GAAIA,EAAW,CACb,IAAMomE,EAAe5kG,KAAKs9B,cAAcq6B,UAAUliD,MAAM,KACxDpN,UAAY2I,OAAO4zF,EAAa/jG,OAAS,GACK,KAA1C+jG,EAAaA,EAAa/jG,OAAS,IAErC+jG,EAAaxhE,OAAOwhE,EAAa/jG,OAAS,GAExCb,KAAK2kG,YAAYC,GACnBA,EAAaA,EAAa/jG,OAAS,GAAK29B,EAExComE,EAAa/9F,KAAK,QAAS23B,GAE7Bx+B,KAAKs9B,cAAcy7B,QAAQ6rC,EAAavwF,KAAK,QAWjD9N,EAAQrG,UAAU4kG,iBAAmB,WAGnC,IAAMF,EAAe5kG,KAAKs9B,cAAcq6B,UAAUliD,MAAM,KACxD,GAAIzV,KAAK2kG,YAAYC,GACnB,OAAOA,EAAaA,EAAa/jG,OAAS,GAI5C,IAAMkkG,EAAK/kG,KAAK+J,kBAAkB40C,sBAAsB,SACxD,GAAIomD,EACF,OAAOA,EAGT,IAAMC,EAAehlG,KAAKilG,sCAC1B,OAAqB,OAAjBD,EACKA,EAILhlG,KAAKk/F,cACAl/F,KAAKk/F,cAGP,MAST34F,EAAQrG,UAAU+kG,oCAAsC,WAEtD,IAAKjlG,KAAKo/F,SACR,OAAO,KAET,IAAM8F,EAAkBllG,KAAKo/F,SAAS8F,gBACtC,GAAIA,GAAmB,kBAAmBA,EAAiB,CACzD,IAAMF,EAAeE,EAAgBC,cACrC,GAAIH,EAAankG,OAAS,EACxB,OAAOmkG,EAAa,GAGxB,OAAO,MAOTz+F,EAAQrG,UAAU2hG,YAAc,WAAW,IAAAnmD,EAAA17C,KACpCA,KAAK4J,YAGV5J,KAAK4J,WAAWk3B,kBAAkB3uB,KAAK,SAACyrB,GACtC,IAAMY,EAAYkd,EAAKopD,mBACvBz8F,UAAY2I,OAAqB,OAAdwtB,GAEfkd,EAAKujD,kBACPvjD,EAAKujD,iBAAiB50F,aAAaqxC,EAAKujD,iBAAiBp1F,UAAY20B,EAAY,IAMnF,IAAI8b,KACApwC,SAEEk7F,EAAc1pD,EAAKpe,cAAcmhB,SAAStzC,UAAQqvC,eAAeC,kBACnD32C,IAAhBshG,GACF/8F,UAAYo7B,aAAajF,IACzBt0B,EAAQqI,UAAegsB,gBAAgBX,EAAQY,MAE7C8b,EAAmBpwC,EAAMK,WAG3B66F,EAAY3vF,MAAM,KAAK1O,QAAQ,SAAC2wC,GAC9B,IAAM7Z,EAAQtrB,UAAeyrB,gBAAgBJ,EAAQ8Z,GACjD7Z,GACFyc,EAAiBzzC,KAAKg3B,KAKxB6d,EAAK5xC,iBACP4xC,EAAK5xC,gBAAgBQ,oBAAoBgwC,GAG3CoB,EAAK7B,UAAU,WACR6B,EAAK5xC,iBAAoB4xC,EAAK5xC,gBAAgB8H,WAKnD8pC,EAAK5xC,gBAAgB8H,SAASC,mBAAmB,SAACQ,GAChD,IAAIA,EAASwwB,OAAb,CAIA,IAAM69D,EAAUhlD,EAAK3xC,kBAAkB60C,uBACrCvsC,EAASyB,OAAOxF,KAAKyF,MACnBxN,EAAQ+5F,YAAYK,aACpBp6F,EAAQ+5F,YAAYM,oBACpBvuF,EAAS/D,KAAK/G,MAIlB,QAHgBzD,IAAZ48F,GAAyBruF,EAASxD,OACpCwD,EAASxD,MAAMuuF,WAAWsD,GAExBruF,EAASyB,OAAOxF,MAAQ+D,EAASyB,OAAOxF,KAAKyF,YAAmCjQ,GAA1BuO,EAAS/D,KAAK/D,SAAuB,CAE7F,IAAM86F,EAAS3pD,EAAK3xC,kBAAkB80C,uBACpCt4C,EAAQ+5F,YAAYC,YAAcluF,EAAS/D,KAAK/G,WAEnCzD,IAAXuhG,GACFhzF,EAAS8xB,SAASkhE,EAAS,KAAO,OAAO,QAEtC,IAAKhzF,EAAS/D,KAAKyF,OAA2B,GAAlB1B,EAASgxB,MAAY,CAEtD,IAAMiiE,EAAc5pD,EAAK3xC,kBAAkB40C,sBACzCp4C,EAAQ+5F,YAAYG,kBAAoBpuF,EAAS/D,KAAK/G,MAExD,QAAoBzD,IAAhBwhG,EAA2B,CAC7B,IAAMC,EAAmBD,EAAY7vF,MAAM,KAC3CpD,EAASR,mBAAmB,SAACQ,GAC3B,QAA+BvO,IAA3BuO,EAAS/D,KAAK/D,SAAwB,CACxC,IAAM86F,EAAS5rF,EAAQiJ,SAAS6iF,EAAkBlzF,EAAS/D,KAAK/G,MAChE8K,EAAS8xB,SAASkhE,EAAS,KAAO,OAAO,WAM9B3pD,EAAK5xC,gBAAgB8H,SAASrH,SACtCxD,QAAQ,SAAC09B,GACpBA,EAAY5yB,mBAAmB,SAACQ,GAC9B,GAA4B,kBAAxBA,EAASS,WAEX,OADA4oC,EAAKjrC,WAAWszB,WAAW,uBAAwB1xB,EAAUoyB,GACtDxwB,UAAwBqxB,gBAAgBC,eAgB3Dh/B,EAAQrG,UAAU4gG,uBAAyB,SAASx6C,GAClD,IAAM95C,EAAU85C,EAAMt+C,QACtBK,UAAYC,iBAAiBkE,EAASgZ,WACtCxlB,KAAK6gG,gBAAgBr0F,IAQvBjG,EAAQrG,UAAU6gG,0BAA4B,SAASz6C,GACrD,IAAM95C,EAAU85C,EAAMt+C,QACtBK,UAAYC,iBAAiBkE,EAASgZ,WACtCxlB,KAAKwlG,mBAAmBh5F,IAU1BjG,EAAQrG,UAAU2gG,gBAAkB,SAASr0F,GAC3C,IAAM9F,EAAM0J,EAAOuC,OAAOnG,GAC1BxM,KAAKq+F,iBAAiB53F,eACpBC,EACAM,UAAS4B,OAAO4D,EAAS,SACvBxM,KAAKo+F,cAAcp+F,KAAKylG,0BAA2B,KAAK,GAAOzlG,QAUrEuG,EAAQrG,UAAUslG,mBAAqB,SAASh5F,GAC9C,IAAM9F,EAAM0J,EAAOuC,OAAOnG,GAC1BxM,KAAKq+F,iBAAiBv3F,iBAAiBJ,GACvC1G,KAAKylG,6BAUPl/F,EAAQrG,UAAUulG,0BAA4B,WAC5C,GAAKzlG,KAAKs+F,cAAV,CAGA,IAAM1xF,EAAW5M,KAAKs+F,cAAcv5D,WAC9BvuB,EAAOxW,KAAK4/F,mBAAmBtkF,cAAc1O,GAE7C0xB,KACNA,EAAOnzB,UAAQqvC,eAAe+oD,UAAY/sF,EAC1CxW,KAAK+J,kBAAkBK,YAAYk0B,KASrC/3B,EAAQrG,UAAUmkG,qBAAuB,WACvC,IAAMqB,EAAW1lG,KAAKs9B,cAAcmhB,SAAStzC,UAAQqvC,eAAemrD,WACpE,IAAKD,EACH,OAAO,KAGT,IAAME,EAAY5lG,KAAKs9B,cAAc86B,cAAcjtD,UAAQqvC,eAAeqrD,aACpE1nD,EAAYn+C,KAAKs9B,cAAco7B,uBAAuBnyD,EAAQ+5F,YAAYxzC,KAE1Eg5C,KACFC,SACJ,QAAkBjiG,IAAd8hG,EAGkB,QADpBG,EAAc/lG,KAAKgmG,mBAAmBz/F,EAAQ+5F,YAAYxzC,IAAK3O,KAE7D2nD,EAAaj/F,KAAKk/F,QAKpB,IAAK,IAAIp3F,EAAI,EAAGA,EAAIi3F,EAAWj3F,IAET,QADpBo3F,EAAc/lG,KAAKgmG,mBAAsBz/F,EAAQ+5F,YAAYxzC,IAAMn+C,EAArD,IAA2DwvC,KAEvE2nD,EAAaj/F,KAAKk/F,GAKxB,GAA2B,GAAvBD,EAAajlG,OACf,OAAO,KAGT,IAAMolG,EAAoBjmG,KAAKs9B,cAAcmhB,SAAStzC,UAAQqvC,eAAe0rD,mBAG7E,OACEC,QAAST,EACTU,eAJ2C,MAAtBH,GAAmD,UAAtBA,GAKlDH,aAAcA,IAYlBv/F,EAAQrG,UAAU8lG,mBAAqB,SAASh0D,EAAQmM,GAAW,IAAAtB,EAAA78C,KAI3DqmG,KAwBN,OAtBAloD,EAAUp3C,QAAQ,SAACu/F,GACjB,GAAIA,GAAYn7F,UAAQqvC,eAAemrD,WAAaW,GAAYn7F,UAAQqvC,eAAe0rD,mBACnFI,GAAYn7F,UAAQqvC,eAAeqrD,aAA2C,GAA5BS,EAAS5kF,QAAQswB,GADvE,CAIA,IAAM9mC,EAAQ2xC,EAAKvf,cAAcmhB,SAAS6nD,GAC1C,GAAKp7F,EAAL,CAIA,IAAIzG,EAAYyG,EACZA,EAAMwW,QAAQ,MAAQ,IACxBjd,EAAYyG,EAAMuK,MAAM,MAG1B,IAAMgW,GACJsmC,SAAUu0C,EAASn3F,QAAQ6iC,EAAQ,IACnCvtC,UAAWA,GAEb4hG,EAAQx/F,KAAK4kB,OAGP46E,EAAQxlG,OAAS,GAAMwlG,WAAW,MAY5C9/F,EAAQrG,UAAUihG,yBAA2B,WAAW,IAAA/jD,EAAAp9C,KAEhDumG,EAAcl+F,UAAY2I,OAAOhR,KAAK0+F,cACtC8H,EAAkBn+F,UAAY2I,OAClChR,KAAK++F,gCAED/+D,KAEAymE,EAAmBzmG,KAAK+J,kBAAkB20C,gBAC9CvzC,UAAQqvC,eAAeksD,4BACnBC,EAAa3mG,KAAK+J,kBAAkB20C,gBACxCvzC,UAAQqvC,eAAeosD,2BAEzB,GAAIH,GAAoBE,EAKtB,IAHA,IAAMp5D,EAAak5D,EAAiBhxF,MAAMlP,EAAQsgG,eAAeC,MAC3Dj4E,EAAO83E,EAAWlxF,MAAMlP,EAAQsgG,eAAeC,MAHnBzoD,EAAA,SAKzB1vC,EAAOC,GAGd,IAAMm4F,EAAwBx5D,EAAW5+B,GAEzC,IAAKo4F,EACH,cAGF,IAAMC,EAAkBD,EAAsBtxF,MAC5ClP,EAAQsgG,eAAeI,OACnB3yF,EAAMua,EAAKlgB,GAEXu4F,EAAcC,UAAkBv3D,sBAAsBt7B,GAEtD8yF,EAAuBhqD,EAAK5sC,GAAG4F,QACrC4pB,EAASn5B,KAAKugG,EAAqB9wF,SAE/B4wF,IAAgBC,UAAkBz+D,KAAKl1B,IACzC+yF,EAAYc,mBAAmB/yF,GAAKnC,KAClC,SAACklC,GACC+vD,EAAqBryF,SACnBsiC,eACA2vD,kBACAE,cACA5yF,SAGJ,WAEE8yF,EAAqB9kE,QACnB0kE,kBACAE,cACA5yF,UAIG4yF,IAAgBC,UAAkBz+D,KAAKjG,KAChD8jE,EAAYe,oBAAoBhzF,GAAKnC,KACnC,SAACklC,GACC+vD,EAAqBryF,SACnBsiC,eACA2vD,kBACAE,cACA5yF,SAGJ,WAEE8yF,EAAqB9kE,QACnB0kE,kBACAE,cACA5yF,UAMN8yF,EAAqB9kE,QACnB0kE,kBACAE,cACA5yF,SA7DG3F,EAAI,EAAGC,EAAKigB,EAAKhuB,OAAQ8N,EAAIC,EAAID,IAAK,cAAA0vC,EAAtC1vC,GAML,MA6DN,OAAO3O,KAAKwQ,GAAG4vB,IAAIJ,GAAU7tB,KAC3B,SAACo1F,GAAc,IAAAl5D,GAAA,EAAAC,GAAA,EAAAC,OAAAzqC,EAAA,IACb,QAAA0qC,EAAAC,EAAuB84D,EAAvB97D,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAAkC,KAAvB93B,EAAuBi4B,EAAAtjC,MAIhC,GAAIqL,EAAS2wF,cAAgBC,UAAkBz+D,KAAKl1B,IAAK,KAAA+7B,GAAA,EAAAC,GAAA,EAAAC,OAAA3rC,EAAA,IACvD,QAAA4rC,EAAAC,EAAwBp5B,EAASywF,gBAAjCv7D,OAAAC,cAAA6D,GAAAG,EAAAC,EAAAhE,QAAAC,MAAA2D,GAAA,EAAkD,KAAvCrgC,EAAuCwgC,EAAAxkC,MAC1CosC,EAAWivD,EAAYiB,uBAC3BjxF,EAAS8gC,aAAT,uBACAnoC,GAEEooC,GACFkvD,EAAgBiB,wCACdnwD,EACA/gC,EAAS8gC,aACT9gC,EAASjC,MAVwC,MAAAw3B,GAAA0D,GAAA,EAAAC,EAAA3D,EAAA,aAAAyD,GAAAI,EAAA5D,QAAA4D,EAAA5D,SAAA,WAAAyD,EAAA,MAAAC,SAiBlD,GAAIl5B,EAAS2wF,cAAgBC,UAAkBz+D,KAAKjG,KAAM,KAAAilE,GAAA,EAAAC,GAAA,EAAAC,OAAA9jG,EAAA,IAI/D,QAAA+jG,EAAAC,EAAwBvxF,EAASywF,gBAAjCv7D,OAAAC,cAAAg8D,GAAAG,EAAAC,EAAAn8D,QAAAC,MAAA87D,GAAA,EAAkD,KAAvCx4F,EAAuC24F,EAAA38F,MAC1CosC,EAAWivD,EAAYwB,wBAC3BxxF,EAAS8gC,aAAT,eACAnoC,GAEEooC,GACFkvD,EAAgBwB,yCACd1wD,EACA/gC,EAAS8gC,aACT9gC,EAASjC,MAbgD,MAAAw3B,GAAA67D,GAAA,EAAAC,EAAA97D,EAAA,aAAA47D,GAAAI,EAAA/7D,QAAA+7D,EAAA/7D,SAAA,WAAA47D,EAAA,MAAAC,MAtBtD,MAAA97D,GAAAwC,GAAA,EAAAC,EAAAzC,EAAA,aAAAuC,GAAAI,EAAA1C,QAAA0C,EAAA1C,SAAA,WAAAuC,EAAA,MAAAC,KA4Cf,SAAC05D,OAWL1hG,EAAQrG,UAAUmhG,oCAAsC,SAASn0F,GAC/D,IAAM2wB,EAAQ3wB,EAAIlF,QAClBK,UAAYC,iBAAiBu1B,EAAOqqE,WACpCloG,KAAK0hG,yBAAyB7jE,GAC9B79B,KAAKmoG,gCAQP5hG,EAAQrG,UAAUwhG,yBAA2B,SAAS7jE,GACpD72B,UAAS4B,OACPi1B,EAAMuqE,sBACN,MACApoG,KAAKmoG,6BACLnoG,MAEFgH,UAAS4B,OACPi1B,EAAMuqE,sBACN,SACApoG,KAAKmoG,6BACLnoG,OAWJuG,EAAQrG,UAAUmoG,kBAAoB,SAASx5F,EAAOtH,GACpD,GAAIsH,aAAiB80B,UAAc,KAAA2kE,GAAA,EAAAC,GAAA,EAAAC,OAAA1kG,EAAA,IACjC,QAAA2kG,EAAAC,EAAgB75F,EAAMV,YAAY42B,WAAlC0G,OAAAC,cAAA48D,GAAAG,EAAAC,EAAA/8D,QAAAC,MAAA08D,GAAA,EAA8C,KAAnCjkF,EAAmCokF,EAAAv9F,MAE5C,GADA7C,UAAY2I,OAAOqT,GACfrkB,KAAKqoG,kBAAkBhkF,EAAG9c,GAC5B,OAAO,GAJsB,MAAAukC,GAAAy8D,GAAA,EAAAC,EAAA18D,EAAA,aAAAw8D,GAAAI,EAAA38D,QAAA28D,EAAA38D,SAAA,WAAAw8D,EAAA,MAAAC,GAOjC,OAAO,EAEP,OAAO35F,EAAM4gB,IAAI,kBAAoBloB,GASzChB,EAAQrG,UAAUohG,uCAAyC,SAASp0F,GAClE,IAAM2wB,EAAQ3wB,EAAIlF,QAClBK,UAAYC,iBAAiBu1B,EAAOqqE,WACpCloG,KAAK2oG,2BAA2B9qE,GAChC79B,KAAKmoG,gCAQP5hG,EAAQrG,UAAUyoG,2BAA6B,SAAS9qE,GACtD72B,UAAS6F,SACPgxB,EAAMuqE,sBACN,MACApoG,KAAKmoG,6BACLnoG,MAEFgH,UAAS6F,SACPgxB,EAAMuqE,sBACN,SACApoG,KAAKmoG,6BACLnoG,OASJuG,EAAQrG,UAAUioG,6BAA+B,WAAW,IAAAxqD,EAAA39C,KAEtDA,KAAKkhG,qCACPlhG,KAAK65C,UAAU9tC,OAAO/L,KAAKkhG,qCAG7BlhG,KAAKkhG,oCAAsClhG,KAAK65C,UAAU,WAAM,IAAA+uD,EACxDlvD,KACA7qB,KAFwDg6E,GAAA,EAAAC,GAAA,EAAAC,OAAAjlG,EAAA,IAK9D,QAAAklG,EAAAC,EAAuBtrD,EAAKohD,+BAA+ByC,UAA3D/1D,OAAAC,cAAAm9D,GAAAG,EAAAC,EAAAt9D,QAAAC,MAAAi9D,GAAA,EAAsE,KAA3DpH,EAA2DuH,EAAA99F,MAGpE2jB,EAAKhoB,KAAK46F,EAASntF,KAGnB,IAAM40F,KAN8DC,GAAA,EAAAC,GAAA,EAAAC,OAAAvlG,EAAA,IAOpE,QAAAwlG,EAAAC,EAA4B9H,EAAS/tC,YAArCjoB,OAAAC,cAAAy9D,GAAAG,EAAAC,EAAA59D,QAAAC,MAAAu9D,GAAA,EAAkD,KAAvCK,EAAuCF,EAAAp+F,MAChD7C,UAAYC,iBAAiBkhG,EAAerC,WAK5C,IAAMj4F,EAAYs6F,EAAcp7D,mBAAmB,GACnD86D,EAAmBriG,KAAKqI,IAd0C,MAAA48B,GAAAs9D,GAAA,EAAAC,EAAAv9D,EAAA,aAAAq9D,GAAAI,EAAAx9D,QAAAw9D,EAAAx9D,SAAA,WAAAq9D,EAAA,MAAAC,GAgBpE3vD,EAAM7yC,KAAKqiG,EAAmB70F,KAAK9N,EAAQsgG,eAAeI,SArBE,MAAAn7D,GAAAg9D,GAAA,EAAAC,EAAAj9D,EAAA,aAAA+8D,GAAAI,EAAAl9D,QAAAk9D,EAAAl9D,SAAA,WAAA+8D,EAAA,MAAAC,GAAA,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAA7lG,EAAA,IAyB9D,QAAA8lG,EAAAC,EAAwBlsD,EAAKohD,+BAA+B4C,WAA5Dl2D,OAAAC,cAAA+9D,GAAAG,EAAAC,EAAAl+D,QAAAC,MAAA69D,GAAA,EAAwE,KAA7D7H,EAA6DgI,EAAA1+F,MAGtE2jB,EAAKhoB,KAAK+6F,EAAUttF,KAGpB,IAAMw1F,KANgEC,GAAA,EAAAC,GAAA,EAAAC,OAAAnmG,EAAA,IAOtE,QAAAomG,EAAAC,EAA6BvI,EAAUluC,YAAvCjoB,OAAAC,cAAAq+D,GAAAG,EAAAC,EAAAx+D,QAAAC,MAAAm+D,GAAA,EAAoD,KAAzCK,EAAyCF,EAAAh/F,MAClD7C,UAAY2I,OAAOo5F,EAAen/D,WAClC6+D,EAAoBjjG,KAAKujG,EAAen/D,YAT4B,MAAAa,GAAAk+D,GAAA,EAAAC,EAAAn+D,EAAA,aAAAi+D,GAAAI,EAAAp+D,QAAAo+D,EAAAp+D,SAAA,WAAAi+D,EAAA,MAAAC,GAWtEvwD,EAAM7yC,KAAKijG,EAAoBz1F,KAAK9N,EAAQsgG,eAAeI,SApCC,MAAAn7D,GAAA49D,GAAA,EAAAC,EAAA79D,EAAA,aAAA29D,GAAAI,EAAA99D,QAAA89D,EAAA99D,SAAA,WAAA29D,EAAA,MAAAC,GAwC9DhsD,EAAK5zC,kBAAkBK,aAAvBigG,EAAAzB,KACGz9F,UAAQqvC,eAAeksD,2BAA6BhtD,EAAMrlC,KACzD9N,EAAQsgG,eAAeC,OAF3BuD,EAAAzB,EAIGz9F,UAAQqvC,eAAeosD,0BAA4B/3E,EAAKxa,KACvD9N,EAAQsgG,eAAeC,OAL3B8B,IAUAjrD,EAAKujD,oCAAsC,QAS/C36F,EAAQrG,UAAU+6C,YAAc,SAASF,GAAQ,IAAAuvD,EAAAtqG,KACzCwR,EAAOnJ,UAAY2I,OAAOhR,KAAKs9B,cAAc8gB,gBADJmsD,GAAA,EAAAC,GAAA,EAAAC,OAAA3mG,EAAA,IAE/C,QAAA4mG,EAAAC,EAAkBn5F,EAAlBi6B,OAAAC,cAAA6+D,GAAAG,EAAAC,EAAAh/D,QAAAC,MAAA2+D,GAAA,EAAwB,KAAb5jG,EAAa+jG,EAAAx/F,MACtB,GAAIvE,EAAIikG,WAAWrkG,EAAQ+5F,YAAYG,mBAAoB,CACzD,IAAMv1F,EAAQvE,EAAI8X,UAAUlY,EAAQ+5F,YAAYG,kBAAkB5/F,QADTgqG,GAAA,EAAAC,GAAA,EAAAC,OAAAjnG,EAAA,IAEzD,QAAAknG,EAAAC,EAAoBlwD,EAApBtP,OAAAC,cAAAm/D,GAAAG,EAAAC,EAAAt/D,QAAAC,MAAAi/D,GAAA,EAA4B,CAC1B,GAD0BG,EAAA9/F,MAChB3D,MAAQ2D,EAAO,CACvBlL,KAAK+J,kBAAkBwwC,YAAY5zC,GACnC,QALqD,MAAAmlC,GAAAg/D,GAAA,EAAAC,EAAAj/D,EAAA,aAAA++D,GAAAI,EAAAl/D,QAAAk/D,EAAAl/D,SAAA,WAAA++D,EAAA,MAAAC,IAS3D,GAAIpkG,EAAIikG,WAAWrkG,EAAQ+5F,YAAYM,oBAAqB,CAC1D,IAAM11F,EAAQvE,EAAI8X,UAAUlY,EAAQ+5F,YAAYM,mBAAmB//F,QADTqqG,GAAA,EAAAC,GAAA,EAAAC,OAAAtnG,EAAA,IAE1D,QAAAunG,EAAAC,EAAoBvwD,EAApBtP,OAAAC,cAAAw/D,GAAAG,EAAAC,EAAA3/D,QAAAC,MAAAs/D,GAAA,EAA4B,CAC1B,GAD0BG,EAAAngG,MAChB3D,MAAQ2D,EAAO,CACvBlL,KAAK+J,kBAAkBwwC,YAAY5zC,GACnC,QALsD,MAAAmlC,GAAAq/D,GAAA,EAAAC,EAAAt/D,EAAA,aAAAo/D,GAAAI,EAAAv/D,QAAAu/D,EAAAv/D,SAAA,WAAAo/D,EAAA,MAAAC,MAZf,MAAAt/D,GAAA0+D,GAAA,EAAAC,EAAA3+D,EAAA,aAAAy+D,GAAAI,EAAA5+D,QAAA4+D,EAAA5+D,SAAA,WAAAy+D,EAAA,MAAAC,GAsB/CzqG,KAAK65C,UAAU,WACb,GAAKywD,EAAK15F,KAAV,CAGA,IAAM/B,EAAQy7F,EAAK15F,KAAK+mC,gBACxBtvC,UAAY2I,OAAOnC,GALA,IAAA08F,GAAA,EAAAC,GAAA,EAAAC,OAAA3nG,EAAA,IAMnB,QAAA4nG,EAAAC,EAAkBn6F,EAAlBi6B,OAAAC,cAAA6/D,GAAAG,EAAAC,EAAAhgE,QAAAC,MAAA2/D,GAAA,EAAwB,KAAb5kG,EAAa+kG,EAAAxgG,MACtB,GAAIvE,EAAIikG,WAAWrkG,EAAQ+5F,YAAYC,aAAc,CACnD,IAAMr1F,EAAQvE,EAAI8X,UAAUlY,EAAQ+5F,YAAYC,YAAY1/F,QACvDypG,EAAKjC,kBAAkBx5F,EAAO3D,IACjCo/F,EAAKvgG,kBAAkBwwC,YAAY5zC,GAGvC,GAAIA,EAAIikG,WAAWrkG,EAAQ+5F,YAAYK,cAAe,CACpD,IAAMz1F,EAAQvE,EAAI8X,UAAUlY,EAAQ+5F,YAAYK,aAAa9/F,QACxDypG,EAAKjC,kBAAkBx5F,EAAO3D,IACjCo/F,EAAKvgG,kBAAkBwwC,YAAY5zC,KAhBtB,MAAAmlC,GAAA0/D,GAAA,EAAAC,EAAA3/D,EAAA,aAAAy/D,GAAAI,EAAA5/D,QAAA4/D,EAAA5/D,SAAA,WAAAy/D,EAAA,MAAAC,QAwBvBllG,EAAQW,OAASC,QAAQD,OAAO,gBAC9B0kG,UAAuBrkG,KACvBgL,UAAerL,OAAOK,KACtBy5F,UAAgB95F,OAAOK,KACvBskG,UAAiBtkG,KACjBukG,UAAoB5kG,OAAOK,KAC3B0M,UAAwB/M,OAAOK,OAGjC4D,UAAQjE,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,MAE5ChB,EAAQW,OAAOE,QAAQ,eAAgBb,GAMvCA,EAAQwlG,2BACN7pF,QAAS,WAMX3b,EAAQ+5F,aACNmD,WAAY,OACZlD,YAAa,eACbE,kBAAmB,qBACnBG,mBAAoB,sBACpBD,aAAc,gBACd7zC,IAAK,QAQPvmD,EAAQsgG,gBACNC,KAAM,IACNG,MAAO,KAIT1gG,EAAQW,OAAOgE,MAAM,0BAKrB,WACE,IAAM8gG,KACN,IAAK,IAAMC,KAAQ1lG,EAAQ+5F,YACzB0L,EAAOnlG,KAAK,IAAIi4C,OAAUv4C,EAAQ+5F,YAAY2L,GAAlC,OAEd,IAAK,IAAMC,KAAQ/gG,UAAQqvC,eACzBwxD,EAAOnlG,KAAK,IAAIi4C,OAAOv4C,EAAQ+5F,YAAY4L,KAE7C7kG,UAASH,OAAOgE,MAAM,oBAAqB8gG,GAR7C,aAYezlG,oGC9hDf,QAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,KACY8J,0JAAZ9J,EAAA,uDAgBA,IAAMC,EAAU,SAAS+E,GAEvBixC,UAAmBh8C,KAAKP,MAMxBA,KAAK0Q,SAAWpF,EAEhB,IAAM6gG,EAAYhlG,QAAQa,QAAQ,yCAClCb,QAAQa,QAAQokG,SAASC,MAAMl0F,OAAOg0F,GAMtCnsG,KAAKssG,WAAaH,EAMlBnsG,KAAK2Q,yDAIPP,EAAOiI,SAAS9R,EAASg2C,WAQzBh2C,EAAQgmG,eAAiB,IAazBhmG,EAAQrG,UAAUo8C,OAAS,SAAShe,GAClCt+B,KAAK8mD,KAAKxoB,IAQZ/3B,EAAQrG,UAAUwM,MAAQ,WACxB,IAAK,IAAMhG,KAAO1G,KAAK2Q,OACrB3Q,KAAKwsG,yBAAyBxsG,KAAK2Q,OAAO6jB,SAAS9tB,EAAK,OAQ5DH,EAAQrG,UAAU2mD,YAAc,SAAStnB,GAAS,IAAAhuB,EAAAvR,KAC1CsT,EAAOisB,EAAQjsB,KACrBjL,UAAYo7B,aAAanwB,EAAM,uBAE/B,IAAMm5F,GAAc,QAAS,QAC7B,OAAQn5F,GACN,KAAKipC,UAAmB7T,KAAKse,MAC3BylD,EAAW5lG,KAAK,gBAChB,MACF,KAAK01C,UAAmB7T,KAAK8T,YAC3BiwD,EAAW5lG,KAAK,cAChB,MACF,KAAK01C,UAAmB7T,KAAKye,QAC3BslD,EAAW5lG,KAAK,iBAChB,MACF,KAAK01C,UAAmB7T,KAAK0e,QAC3BqlD,EAAW5lG,KAAK,iBAMpB,IAAM29E,EAAKr9E,QAAQa,QAAR,eAA+BykG,EAAWp4F,KAAK,KAA/C,aAGPkrB,EAAQmtE,OACEvlG,QAAQa,QAAQu3B,EAAQmtE,QAExB1sG,KAAKssG,YAGTn0F,OAAOqsE,GACjBA,EAAGvsE,KAAKsnB,EAAQ8c,KAAKswD,SAAS,MAE9B,IAAMC,OAA0B9oG,IAAlBy7B,EAAQqtE,MAAsBrtE,EAAQqtE,MAClDrmG,EAAQgmG,eAEJt7F,GACJuzE,MAKI99E,EAAM0J,EAAOuC,OAAO6xE,GAC1BvzE,EAAKqF,QAAUtW,KAAK0Q,SAAS,WAC3B8zE,EAAGpiD,MAAM,gBACF7wB,EAAKZ,OAAOjK,IAClBkmG,GAEH5sG,KAAK2Q,OAAOjK,GAAOuK,GASrB1K,EAAQrG,UAAUssG,yBAA2B,SAASv7F,GACpD,IAAMuzE,EAAKvzE,EAAKuzE,GACVluE,EAAUrF,EAAKqF,QACf5P,EAAM0J,EAAOuC,OAAO6xE,GAG1BA,EAAGpiD,MAAM,SAITpiC,KAAK0Q,SAAS3E,OAAOuK,UAGdtW,KAAK2Q,OAAOjK,KAgBrBH,EAAQW,OAASC,QAAQD,OAAO,wBAGjBE,QAAQ,mBAAoBb,GAE3Cc,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,6kBCrLfD,EAAA,SACAA,EAAA,MACAA,EAAA,OACAA,EAAA,UACAA,EAAA,KACYmT,0JAAZnT,EAAA,uDAEA,IAAMC,cAaJ,SAAAA,EAAYqH,gGAASk5B,CAAA9mC,KAAAuG,GAAA,IAAAgL,mKAAAw1B,CAAA/mC,MAAAuG,EAAAygC,WAAArmC,OAAAsmC,eAAA1gC,IAAAhG,KAAAP,KAEb4N,IAEAi/F,EAAWj/F,EAAQi/F,SAJN,OAanBt7F,EAAKuwD,OAMLvwD,EAAKu7F,iBAAmBD,EAASp9E,IAAI,mBAMrCle,EAAKd,WAAao8F,EAASp9E,IAAI,cAQ/Ble,EAAKw7F,4BAGLx7F,EAAKy7F,QApCcz7F,EAbjB,gUAAAo7B,CAAApmC,EAAwB0mG,WAAxBpgE,EAAAtmC,IAAAI,IAAA,QAAAuE,MAAA,WAwDF7C,UAAY2I,OACVhR,KAAK0zD,YAAY7yD,OAAQ,yCAFrB,IAAAuqC,GAAA,EAAAC,GAAA,EAAAC,OAAAxnC,EAAA,IAIN,QAAAynC,EAAAC,EAAyBxrC,KAAK0zD,YAA9BjoB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAhChG,EAAgCmG,EAAArgC,MACzC7C,UAAYC,iBAAiB88B,EAAY+hE,WACzCnnG,KAAKktG,oBAAoB9nE,IANrB,MAAA0G,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,OAvDJ3kC,IAAA,UAAAuE,MAAA,WAoEM,IAAAsiC,GAAA,EAAAC,GAAA,EAAAC,OAAA5pC,EAAA,IACR,QAAA6pC,EAAAC,EAAyB5tC,KAAK0zD,YAA9BjoB,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAA2C,KAAhCpI,EAAgCuI,EAAAziC,MACzC7C,UAAYC,iBAAiB88B,EAAY+hE,WACzCnnG,KAAKmtG,sBAAsB/nE,IAHrB,MAAA0G,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAKRZ,EAAAvmC,EAAArG,UAAA8mC,WAAArmC,OAAAsmC,eAAA1gC,EAAArG,WAAA,UAAAF,MAAAO,KAAAP,SAzEE2G,IAAA,gBAAAuE,MAAA,SAiGUk6B,GACZ0H,EAAAvmC,EAAArG,UAAA8mC,WAAArmC,OAAAsmC,eAAA1gC,EAAArG,WAAA,gBAAAF,MAAAO,KAAAP,KAAoBolC,GACpB/8B,UAAYC,iBAAiB88B,EAAY+hE,WACzCnnG,KAAKktG,oBAAoB9nE,MApGvBz+B,IAAA,sBAAAuE,MAAA,SA2GgBk6B,GAElB,IAAMkR,EAAKlR,EAAWkR,GAEtBt2C,KAAK+sG,yBAAyBz2D,GAAMt2C,KAAKyQ,WAAWoC,OAClD,kBAAMuyB,EAAWiR,SACjBr2C,KAAKotG,+BAA+BhoG,KAAKpF,OAGtCA,KAAK8hE,QAKR9hE,KAAK8hE,OAAOryC,IAAI,kBAAkB5oB,KAAKyvC,GACvCt2C,KAAKqtG,gBALLrtG,KAAK8hE,OAAS9hE,KAAK8sG,iBAAiB32D,kCAClC/Q,MAtHFz+B,IAAA,iCAAAuE,MAAA,SAmI2BA,EAAOoiG,QACtBxpG,IAAVoH,GAAuBA,IAAUoiG,GACnCttG,KAAKqtG,kBArIL1mG,IAAA,eAAAuE,MAAA,WA6IF,IAAM2D,EAAQ7O,KAAK6O,MACf0+B,KAFSQ,GAAA,EAAAC,GAAA,EAAAC,OAAAnqC,EAAA,IAKb,QAAAoqC,EAAAC,EAAyBnuC,KAAK0zD,YAA9BjoB,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAA2C,KAAhC3I,EAAgC8I,EAAAhjC,MACzC7C,UAAYC,iBAAiB88B,EAAY+hE,WACrC/hE,EAAWiR,UACb9I,EAAaA,EAAWrsC,OAAOkkC,EAAWgJ,sBARjC,MAAAtC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,GAabjuC,KAAK8sG,iBAAiBrzD,oBAAoB5qC,EAAO0+B,EAAWl5B,KAAK,SAzJ/D1N,IAAA,mBAAAuE,MAAA,SA+Jak6B,GACf0H,EAAAvmC,EAAArG,UAAA8mC,WAAArmC,OAAAsmC,eAAA1gC,EAAArG,WAAA,mBAAAF,MAAAO,KAAAP,KAAuBolC,GACvB/8B,UAAYC,iBAAiB88B,EAAY+hE,WACzCnnG,KAAKmtG,sBAAsB/nE,MAlKzBz+B,IAAA,wBAAAuE,MAAA,SAyKkBk6B,GAEpB,IAAMkR,EAAKlR,EAAWkR,GAChBznC,EAAQ7O,KAAK6O,OAInB0+F,EADmBvtG,KAAK+sG,yBAAyBz2D,aAE1Ct2C,KAAK+sG,yBAAyBz2D,GAGrC78B,EAAQgR,OAAOzqB,KAAK0zD,YAAatuB,GAGjC,IAAMpG,EAAMh/B,KAAK8sG,iBAAiBnzD,kBAAkB9qC,GAChDmwB,GACFvlB,EAAQgR,OAAOuU,EAAKsX,GAGlBt2C,KAAK0zD,YAAY7yD,QACnBb,KAAKqtG,kBA7LL1mG,IAAA,QAAA8oB,IAAA,WAsFF,OAAOzvB,KAAK8hE,WAtFVv7D,eAmMSA,kVC1MfD,EAAA,MACAA,EAAA,yDAEA,IAAMC,cAQJ,SAAAA,EAAYqH,gGAASk5B,CAAA9mC,KAAAuG,GAAA,IAAAgL,mKAAAw1B,CAAA/mC,MAAAuG,EAAAygC,WAAArmC,OAAAsmC,eAAA1gC,IAAAhG,KAAAP,KAEb4N,IAFa,OAQnB2D,EAAKi4C,KAAO57C,EAAQ0G,IARD/C,EARjB,gUAAAo7B,CAAApmC,EAAwB2hG,WAAxBr7D,EAAAtmC,IAAAI,IAAA,MAAA8oB,IAAA,WAwBF,OAAOzvB,KAAKwpD,SAxBVjjD,eA6BSA","file":"permalink.39f984cb47c4d681d62b.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module gmfapp.permalink\n */\nconst exports = {};\n\nimport './permalink.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({\n    crosshairStyle: new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 255, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })\n  }));\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/permalink.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}
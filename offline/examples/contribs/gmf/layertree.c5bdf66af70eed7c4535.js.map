{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/DataSources.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./src/datasource/File.js","webpack:///./src/message/popupComponent.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/misc/Time.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./src/message/Popup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./node_modules/angular-sanitize/index.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/layertree/component.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/misc/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./node_modules/angular-sanitize/angular-sanitize.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./contribs/gmf/src/disclaimer/module.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./src/message/Disclaimer.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./contribs/gmf/examples/layertree.js","webpack:///./src/layertree/module.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","olBase","$filter","gettextCatalog","$filter_","gettextCatalog_","ngeoMiscTime","inherits","formatTimeValue","time","resolution","opt_useISOFormat","opt_toUTC","date","utc","yearResolution","monthResolution","dayResolution","getString","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","assert","mode","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","_classCallCheck","collection_","map_","handleDataSourcesAdd_","_createClass","view","getView","handleViewResolutionChange_","getResolution","assertNumber","syncDataSourcesToResolution_","olObservable","unByKey","target","olView","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","maxResolution","minResolution","inRange","event","ngeoDatasourceDataSource","set","unbindMap_","bindMap_","get","defineProperty","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","layers_","layers","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","item","active","interaction","removeInteraction","addInteraction","setMap","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_7__functions_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","__WEBPACK_IMPORTED_MODULE_11__obj_js__","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","handleEvent","handleEvent_","handleDownEvent","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","Event","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","ADD","REMOVE","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_11__xml_js__","GPX","defaultDataProjection","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","readString","RTE_PARSERS","cmt","desc","src","parseLink","number","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","getLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","parentNode","createElementNS","namespaceURI","GPX_SERIALIZERS","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","layout","applyLayoutOptions_","setAttributeNS","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","__WEBPACK_IMPORTED_MODULE_4__color_js__","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_17__math_js__","__WEBPACK_IMPORTED_MODULE_18__proj_js__","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","anchor","anchorOrigin","BOTTOM_LEFT","anchorXUnits","anchorYUnits","rotation","scale","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","DEFAULT_STYLE_","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","findStyle_","styleValue","readColor_","s","getAllTextContent","m","exec","hexColor","parseInt","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","multiGeometry","homogeneous","setCommonGeometryProperties_","setPolygons","GEOMETRY_COLLECTION","readPoint_","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","coord","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","setGeometry","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","abgr","hex","writeCoordinatesTextNode_","dimension","d","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","getGeometries","GEOMETRY_NODE_FACTORY_","MULTI_POINT","getPoints","POINT_NODE_FACTORY_","MULTI_LINE_STRING","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","__WEBPACK_IMPORTED_MODULE_0__xml_js__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","appendChild","DOCUMENT","createCDATASection","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","decimal","toPrecision","nonNegativeInteger","_possibleConstructorReturn","__proto__","getPrototypeOf","featuresCollection_","olSourceVector","layer_","olLayerVector","_inherits","getArray","ngeoPopupTemplateUrl","addClass","close","stopPropagation","preventDefault","oldVal","css","__WEBPACK_IMPORTED_MODULE_2__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","closestPointXY","closestPoint","minSquaredDistance","getRevision","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","extrapolate","interpolate","lineStringsCoordinateAtM","coordinatess","getLineString","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","intersectsExtent","setLayout","setFlatCoordinatesInternal","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","localDate","ngeoLayerHelper","ngeoWMSTime","layerHelper_","ngeoWMSTime_","ogcServersObject_","ogcServersObject","$on","firstParent","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","depth","metadata","opacity","setOpacity","updateLayerState_","setVisible","olLayerImage","getSource","updateParams","LAYERS","reverse","groupNode","isRoot","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","getLayer","_this3","createBasicGroup","timeParam","getTimeParam_","imageType","createBasicWMSLayer","credential","hasActiveChildren","ctrl","updateLayerReferences_","isChecked","setState","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","refreshState","gmfLayerWMTS","newLayer","olLayerTile","createWMTSLayerFromCapabilitites","dimensions","setSource","querySourceIds","disclaimer","disclaimers","wmsTime","VisitorDecision","STOP","timeValues","tree","isOneParentNotMix","ngeoMiscWMSTime","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","getPoint","$compile","$sce","$new","autoDestroy_","destroy","sce_","element_","document","body","getOpen","setOpen","$destroy","setTitle","title","trustedTitle","trustAsHtml","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","cls","fail","Factory","ngeoMessagePopupComponent","$injector","ngeoDataSources","ngeoFile","injector_","dataSources_","collection","ngeoFile_","ngeoLayerHelper_","extDataSources_","files_","fileGroup_","ngeoDatasourceFileGroup","dataSources","injector","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","$inject","wmsGroup","wmsGroupsCollection","found","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","wmsGroups","Symbol","iterator","next","done","err","return","wmtsGroup","wmtsGroupsCollection","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","wmtsGroups","layerGroup","capabilities","req","formats","ogcImageType","wmsInfoFormat","ngeoDatasourceOGC","WMSInfoFormat","GML","ogcLayers","ogcType","Type","visible","wmsUrl","getWMSGroup","addDataSource","ngeoDatasourceWMSGroup","addLayer_","addWMSGroup_","wmtsUrl","assertString","wmtsLayer","WMTS","getWMTSGroup","ngeoDatasourceOGCGroup","addWMTSGroup_","layerObj","createWMTSLayerFromCapabilititesObj","unregister","handleWMTSDataSourceVisibleChange_","file","getFileDataSource_","fileGroup","fit","rejections","read","readOptions","featureProjection","isKml","olFormatKML","isGpx","olFormatGPX","ngeoDatasourceFile","reject","oldValue","removeFileDataSource_","removeOGCDataSource_","removeLayer_","removeDataSource","removeWMSGroup_","removeWMTSGroup_","getGroupFromMap","EXTERNALLAYERGROUP_NAME","ngeoMiscFile","ngeoDatasourceDataSources","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","opt_right","orientLinearRingss","coordinatesss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","lastEnds","ngeoLayertreeTemplateUrl","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","ids","getIds","array","child","layerLayerCreationFn","message","console","error","server","promiseSuccessFn","promises","background_layers","itemType","all","layerGroupCreationFn","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolutionHint","getNodeMinResolution","minResolutionHint","loadThemes","opt_roleId","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","MIXED_GROUP","NOT_MIXED_GROUP","ngeoMapLayerHelper","olObj","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeSyncLayertreeMap","ngeoLayertreeComponent","ngeoMessagePopup","gmfLayertreeTemplate","$element","$attrs","component_","bindings","openLinksInNewWindow","component","$scope","ngeoCreatePopup","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfSyncLayertreeMap","scope_","$sce_","root","gmfSyncLayertreeMap_","infoPopup_","promises_","groupNodeStates_","dataLayerGroup_","on","$apply","DATALAYERGROUP_NAME","_syncArrays2","default","render","updateDimensions_","olLayerLayer","updateLayerDimensions_","_this4","isEmpty","olSourceWMTS","updateDimensions","olSourceTileWMS","olSourceImageWMS","once","numberOfGroupsToAddInThisDigestLoop","listeners","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getDataSource","timeRangeValue","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getOgcServer","getWMSLegendURL","getLegendsObject","_this5","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","getWMTSLegendURL","layersNames","getScale_","ServerType","QGISSERVER","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","_this6","treeUid","metadataURL","resp","infoPopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","refreshFirstLevelGroups","removeNode","removeGroup","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggle","toggleFiltrableDataSource","ds","isNodeLegendVisible","is","supportsCustomization","supportsLegend","supportsOpacityChange","legend","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","code","reason","onprogress","notify","readAsText","load","opt_cancelP","unregister_","ngeoDatasourceGroup","_get","registerDataSource_","handleDataSourceVisibleChange_","unregisterDataSource_","_class","toggleVisibilityState","isDefined","lowercase","noop","nodeContains","htmlParser","htmlSanitizeWriter","$sanitizeMinErr","$$minErr","provider","svgEnabled","$get","$$sanitizeUri","validElements","svgElements","buf","uri","isImage","enableSvg","handler","inertBodyElement","getInertBodyElement","mXSSAttempts","innerHTML","toLowerCase","attrToMap","attributes","chars","textContent","nextNode","getNonDescendant","removeChild","uriValidator","ignoreCurrentElement","out","tag","blockedElements","lkey","validAttrs","uriAttrs","encodeEntities","voidElements","arg","compareDocumentPosition","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","toMap","optionalEndTagBlockElements","optionalEndTagInlineElements","optionalEndTagElements","blockElements","inlineElements","htmlAttrs","svgAttrs","str","lowercaseKeys","items","inertDocument","implementation","createHTMLDocument","documentElement","getDocumentElement","querySelector","DOMParser","parseFromString","e","documentMode","stripCustomNsAttrs","encodeURI","xhr","XMLHttpRequest","responseType","send","attr","charCodeAt","attrNode","attrName","lastIndexOf","removeAttributeNode","propName","outerHTML","outerText","info","angularVersion","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","linkyMinErr","isFunction","isObject","isString","match","attributesFn","addText","addLink","linkAttributes","arr1","arr2","dereg1","dereg2","nodeExpr","state_","mapExpr","$parent","splice","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","state","opt_broadcast","setStateInternal_","firstParents","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","setDataSource","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","_component","gmfDisclaimerComponent","ngeoDisclaimer","ngeoEventHelper","external","popup","msg","msgs_","createPopup_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","olLayerBase","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","$onDestroy","ngeoMessageMessage","WARNING","container","container_","messages_","show","getMessageObjects","closeMessage_","showMessage","getMessageUid_","classNames","ERROR","INFORMATION","SUCCESS","el","button","hasClass","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcLayers_","ogcServerType_","ogcServerType","MAPSERVER","ogcType_","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsUrl_","ogcLayer","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","range","lower","upper","config","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","prefix","defaultPrefix","ft","pop","count","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","setGeometryName","readPoint","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","ring","readLinearRing","readPolygon","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","gmfLayertreeComponent","gmfMapComponent","gmfThemeManager","ngeoLayertreeModule","gmfDisclaimerModule","constant","MainController","ngeoLocation","olSourceOSM","resolutions","center","zoom","modal","getParam","groups","getSetTheme","getSetGroup","getSetLayers","addGroupByLayerName","getSetRemoveTree","flatNodes","getDistinctFlatNodes_","alreadyAdded","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","olServerType","serverType","createBasicWMSLayerFromDataSource","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","optionsFromCapabilities","elt","layerCap","capabilitiesStyles","opt_layers","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","legendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","ngeoNotification_","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","groupID","rootChild","grp","unshift","addGroupByName","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","cloneGroupNode_","assign","toggleNodeCheck_","childNode","correspondingTreeCtrl","firstLevelGroupCtrl","gmfGroup","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","legendElement","_this8","ngeoMessageNotification","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","localStorage","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","__WEBPACK_IMPORTED_MODULE_7__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","schemaLocation_","containerSrs","axisOrientation","proj","getAxisOrientation","coordsGroups","coords","readBox_","BOX_PARSERS_","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","writeGeometryElement","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","line","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","olExtent","multiGeom","navigator","userAgent","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","Error","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","success","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","LOADED","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","compareVersions","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_9__obj_js__","WFS","featureType_","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","typeName","writeUpdate_","getKeys","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","title_","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__extent_js__","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_8__size_js__","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_12__string_js__","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","tileClass","gutter_","gutter","tmpExtent_","setKey","getKeyForParams_","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","hash","getTilePixelRatio","fixedTileUrlFunction","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_13__proj_js__","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","writeFeatureMembers_","geom","featureUidToGroupIndex_","groups_","useSpatialIndex","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","projString","defData","paramName","paramVal","paramOutname","self","paramObj","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","f","temp","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","opt_geometries","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","rotate","angle","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","getActive","setActive","configurable","getOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","DEFAULT_DELAY_","clearMessageByCacheItem_","delay","wmsDataSourceUnregister_","init_","updateLayer_"],"mappings":"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EAAA,aACAjnB,KAAAinB,EAAA,YACAjnB,KAAAinB,EAAA,YACAjnB,KAAAinB,EAAA,SACAjnB,KAAAinB,EAAA,WAEAjnB,KAAA08G,QACA18G,KAAA28G,QACA38G,KAAA08G,KAAA,eACA18G,KAAA28G,KAAA,KACA38G,KAAA08G,KAAA,cACA18G,KAAA28G,KAAA,cACA38G,KAAA08G,KAAA,eACA18G,KAAA28G,KAAA,aACA38G,KAAA08G,KAAA,cACA18G,KAAA28G,KAAA,aACA38G,KAAA08G,KAAA,cACA18G,KAAA28G,KAAA,cACA38G,KAAA08G,KAAA,aACA18G,KAAA28G,KAAA,cAEA38G,KAAA48G,QACA58G,KAAA68G,QACA78G,KAAA48G,KAAA,gBACA58G,KAAA68G,KAAA,KACA78G,KAAA48G,KAAA,eACA58G,KAAA68G,KAAA,eACA78G,KAAA48G,KAAA,cACA58G,KAAA68G,KAAA,eACA78G,KAAA48G,KAAA,cACA58G,KAAA68G,KAAA,aACA78G,KAAA48G,KAAA,cACA58G,KAAA68G,KAAA,cACA78G,KAAA48G,KAAA,aACA58G,KAAA68G,KAAA,aAEA78G,KAAAkrG,KACAlrG,KAAAkrG,EAAA,gBACAlrG,KAAAkrG,EAAA,eACAlrG,KAAAkrG,EAAA,cACAlrG,KAAAkrG,EAAA,aACAlrG,KAAAkrG,EAAA,aACAlrG,KAAAkrG,EAAA,WACAlrG,KAAAkrG,EAAA,SACAlrG,KAAAkrG,EAAA,UACAlrG,KAAAkrG,EAAA,WAwJAtX,QAjJO,SAAgBzsE,GACvB,IAAAqmB,EACAywD,EAAA92E,EAAAW,EAGAg1F,EAFA31F,EAAAY,EAEA/nB,KAAAy2F,KACAiX,EAAAzP,EAAAj+F,KAAAg3F,MAIA+lB,EAAAD,EAA0B5oB,EAAU,KACpC8oB,EAAAtP,EACAuP,EAAA,EAEAC,EAAA,EACA,IAAA1vE,EAAA,EAAaA,GAAA,GAASA,IACtByvE,GAAAF,EACAG,GAAAl9G,KAAAinB,EAAAumB,GAAAyvE,EAIA,IAOAE,EAPAC,EAAAF,EACAG,EAAAL,EAGAM,EAAA,EACAC,EA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","file":"layertree.c5bdf66af70eed7c4535.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/File.js","/**\n * @module ngeo.message.popupComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.misc.Time\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/SyncLayertreeMap.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      });\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","require('./angular-sanitize');\nmodule.exports = 'ngSanitize';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/index.js\n// module id = 209\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\nimport gmfBase from 'gmf/index.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","/**\n * @module ngeo.layertree.component\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessagePopup.module.name,\n  ngeoMessagePopupComponent.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const subTemplateUrl = `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`;\n    return `${'<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          'ngeo-layertree-templateurl=\"'}${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nngeoLayertreeComponent.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`);\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overrided by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup.\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow'\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.$http} $http Angular http service.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $http, $sce, $scope,\n  ngeoCreatePopup, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager,\n  gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @private\n   * @type {!angular.$http}\n   */\n  this.$http_ = $http;\n\n  /**\n   * @private\n   * @type {!angular.$sce}\n   */\n  this.$sce_ = $sce;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @private\n   * @type {!ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {!Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Mutliple urls for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Display a ngeo.infoPopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const treeUid = treeCtrl.uid.toString();\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    if (!(treeUid in this.promises_)) {\n      this.promises_[treeUid] = this.$http_.get(metadataURL).then(\n        (resp) => {\n          const html = this.$sce_.trustAsHtml(resp.data);\n          return html;\n        });\n    }\n    const infoPopup = this.infoPopup_;\n    this.promises_[treeUid].then((html) => {\n      infoPopup.setTitle(node.name);\n      infoPopup.setContent(html);\n      infoPopup.setOpen(true);\n    });\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  }, this);\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach(function(child) {\n    this.layers.push(child.layer);\n  }, this);\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/component.js","/**\n * @module ngeo.misc.File\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/File.js","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/FileGroup.js","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module(\n  'gmfLayertreeDatasourceGroupTreeComponent', [\n    ngeoDatasourceDataSources.module.name,\n  ]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/layertree/datasourceGroupTreeComponent.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","/**\n * @license AngularJS v1.6.9\n * (c) 2010-2018 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar nodeContains;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  nodeContains = window.Node.prototype.contains || /** @this */ function(arg) {\n    // eslint-disable-next-line no-bitwise\n    return !!(this.compareDocumentPosition(arg) & 16);\n  };\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href,xml:base');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  /**\n   * Create an inert document that contains the dirty HTML that needs sanitizing\n   * Depending upon browser support we use one of three strategies for doing this.\n   * Support: Safari 10.x -> XHR strategy\n   * Support: Firefox -> DomParser strategy\n   */\n  var getInertBodyElement /* function(html: string): HTMLBodyElement */ = (function(window, document) {\n    var inertDocument;\n    if (document && document.implementation) {\n      inertDocument = document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');\n\n    // Check for the Safari 10.1 bug - which allows JS to run inside the SVG G element\n    inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (!inertBodyElement.querySelector('svg')) {\n      return getInertBodyElement_XHR;\n    } else {\n      // Check for the Firefox bug - which prevents the inner img JS from being sanitized\n      inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n      if (inertBodyElement.querySelector('svg img')) {\n        return getInertBodyElement_DOMParser;\n      } else {\n        return getInertBodyElement_InertDocument;\n      }\n    }\n\n    function getInertBodyElement_XHR(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        html = encodeURI(html);\n      } catch (e) {\n        return undefined;\n      }\n      var xhr = new window.XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n      xhr.send(null);\n      var body = xhr.response.body;\n      body.firstChild.remove();\n      return body;\n    }\n\n    function getInertBodyElement_DOMParser(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n        body.firstChild.remove();\n        return body;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    function getInertBodyElement_InertDocument(html) {\n      inertBodyElement.innerHTML = html;\n\n      // Support: IE 9-11 only\n      // strip custom-namespaced attributes on IE<=11\n      if (document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n\n      return inertBodyElement;\n    }\n  })(window, window.document);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n\n    var inertBodyElement = getInertBodyElement(html);\n    if (!inertBodyElement) return '';\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // trigger mXSS if it is going to happen by reading and writing the innerHTML\n      html = inertBodyElement.innerHTML;\n      inertBodyElement = getInertBodyElement(html);\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = getNonDescendant('nextSibling', node);\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = getNonDescendant('parentNode', node);\n            if (node === inertBodyElement) break;\n            nextNode = getNonDescendant('nextSibling', node);\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = getNonDescendant('nextSibling', node);\n    }\n  }\n\n  function getNonDescendant(propName, node) {\n    // An element is clobbered if its `propName` property points to one of its descendants\n    var nextNode = node[propName];\n    if (nextNode && nodeContains.call(node, nextNode)) {\n      throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);\n    }\n    return nextNode;\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', [])\n  .provider('$sanitize', $SanitizeProvider)\n  .info({ angularVersion: '1.6.9' });\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/sftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} [target] Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((s?ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/angular-sanitize.js\n// module id = 229\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/syncArrays.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmf.disclaimer.module\n */\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDisclaimerModule', [\n  gmfDisclaimerComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/module.js","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize'\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach(function(layer) {\n      this.registerLayer_(layer);\n    }, this);\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.showDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(this.unregisterLayer_, this);\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.closeDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/component.js","/**\n * @module ngeo.message.Disclaimer\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Disclaimer.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.layertree\n */\nconst exports = {};\n\nimport './layertree.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDisclaimerModule from 'gmf/disclaimer/module.js';\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoLayertreeModule from 'ngeo/layertree/module.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change when other dependencies are in a module\n  gmfLayertreeComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfMapComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerLocation.module.name,\n  ngeoLayertreeModule.name,\n  gmfDisclaimerModule.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background&interface=desktop');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.theme.Manager} gmfThemeManager gmf Theme Manager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n */\nexports.MainController = function(gmfTreeManager, gmfThemes, gmfThemeManager, ngeoLocation) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  // How should disclaimer message be displayed: in modals or alerts\n  const modal = ngeoLocation.getParam('modal');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modal = modal === 'true';\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @export\n   */\n  this.gmfTreeManager = gmfTreeManager;\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {Array.<gmfThemes.GmfTheme>}\n   * @export\n   */\n  this.themes = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @export\n   */\n  this.groups = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfLayer>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @param {gmfThemes.GmfTheme|undefined} value A theme or undefined to get Themes.\n   * @return {Array.<gmfThemes.GmfTheme>} All themes.\n   * @export\n   */\n  this.getSetTheme = function(value) {\n    if (value) {\n      this.gmfThemeManager.addTheme(value);\n    }\n    return this.themes;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in all themes.\n   * @export\n   */\n  this.getSetGroup = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.setFirstLevelGroups([value]);\n    }\n    return this.groups;\n  };\n\n  /**\n   * @param {gmfThemes.GmfLayer|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfLayer>} All groups in all themes.\n   * @export\n   */\n  this.getSetLayers = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.addGroupByLayerName(value.name);\n    }\n    return this.layers;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A GeoMapFish group, or undefined\n   *     to get the groups of the tree manager.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in the tree manager.\n   * @export\n   */\n  this.getSetRemoveTree = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.removeGroup(value);\n    }\n    return this.gmfTreeManager.root.children;\n  };\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      this.themes = themes;\n\n      // Get an array with all nodes entities existing in \"themes\".\n      const flatNodes = [];\n      this.themes.forEach((theme) => {\n        theme.children.forEach((group) => {\n          this.groups.push(group); // get a list of all groups\n          this.getDistinctFlatNodes_(group, flatNodes);\n        });\n      });\n      flatNodes.forEach((node) => {\n        // Get an array of all layers\n        if (node.children === undefined) {\n          this.layers.push(node);\n        }\n      });\n    }\n  });\n\n  /**\n   * Just for this example\n   * @param {gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer} node A theme, group or layer node.\n   * @param {Array.<gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An Array of nodes.\n   * @export\n   */\n  this.getDistinctFlatNodes_ = function(node, nodes) {\n    let i;\n    const children = node.children;\n    if (children !== undefined) {\n      for (i = 0; i < children.length; i++) {\n        this.getDistinctFlatNodes_(children[i], nodes);\n      }\n    }\n    let alreadyAdded = false;\n    nodes.some((n) => {\n      if (n.id === node.id) {\n        return alreadyAdded = true;\n      }\n    });\n    if (!alreadyAdded) {\n      nodes.push(node);\n    }\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/layertree.js","/**\n * @module ngeo.layertree.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.layertree.Controller (already required by ngeo.layertree.component)\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertreeModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoLayertreeComponent.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/module.js","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./contribs/gmf/examples/themeselector.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./src/message/Notification.js"],"names":["__webpack_require__","exports","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","this","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","prototype","addTheme","theme","opt_silent","updateState","name","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","module","angular","gmfLayertreeTreeManager","ngeoStatemanagerService","value","service","gmfBase","requires","push","__WEBPACK_IMPORTED_MODULE_0__xml_js__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","s","getAllTextContent","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_2__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","coordinates","opt_layout","call","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","lineString","flatCoordinates","getFlatCoordinates","slice","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","getRevision","Math","sqrt","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","lineStringsCoordinateAtM","getCoordinates","coordinatess","getEnds","getLineString","index","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","MULTI_LINE_STRING","intersectsExtent","extent","setLayout","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","getPoint","n","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","opt_right","orientLinearRingss","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","endss","polygons","jj","MULTI_POLYGON","lastEnds","setPolygons","olBase","olArray","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeoBase","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","source","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","wmsUrl","layerNames","getOGCLayerNames","ogcServerType","ogcImageType","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","read","options","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","TIME","getQuerySourceIds","$timeout","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","ngeoMessageMessage","Type","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","key","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","XML","isDocument","readFromDocument","isNode","readFromNode","doc","gmfThemeModule","constant","MainController","gmfThemeManager","manager","gmfThemeSelectorComponent","component_","bindings","templateUrl","baseModuleTemplateUrl","component","Controller_","listenerKeys_","setThemes_","handleDestroy_","setTheme","unlistenByKey","olExtent","geometry","multiGeom","olGeomPoint","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","navigator","userAgent","hex","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","pair","indexOfEquals","decodeURIComponent","return","queryItem","encodeURIComponent","event","olEventsCondition","noModifierKeys","singleClick","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","isArray","XLink","readHref","getAttributeNS","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","image","ol_Image","ImageWMS","opt_options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","axisOrientation","getAxisOrientation","bbox","substr","uri","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__extent_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_8__size_js__","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_12__string_js__","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","setKey","getKeyForParams_","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","hash","getTilePixelRatio","res","fixedTileUrlFunction","scale","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","OWS","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","owsObject","xml","pushParseAndPop","PARSERS_","readAddress_","objectStack","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","getAttribute","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","makeObjectPropertySetter","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","style","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","format","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","makeArrayPusher","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","olInteractionInteraction","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","olSourceTile","olSourceImage","$applyAsync","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clear","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay"],"mappings":"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","file":"themeselector.fadc35a15fe380ebca29.js","sourcesContent":["/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module gmfapp.themeselector\n */\nconst exports = {};\n\nimport './themeselector.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeModule from 'gmf/theme/module.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfThemeModule.name,\n]);\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\n\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {angular.$http} $http Angular's $http service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @param {gmf.theme.Manager} gmfThemeManager gmf Tree Manager service.\n * @ngInject\n */\nexports.MainController = function($http, gmfThemes, gmfThemeManager) {\n\n  /**\n   * @param {gmfThemes.GmfTheme} theme Theme.\n   * @return {boolean} Theme is 'Enseignement'\n   * @export\n   */\n  this.filter = function(theme) {\n    return theme.name !== 'Enseignement';\n  };\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.manager = gmfThemeManager;\n\n  gmfThemes.loadThemes();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/themeselector.js","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/module.js","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/theme/selectorComponent.html`\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/selectorComponent.js","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/backgroundlayerselector.js","webpack:///./contribs/gmf/src/backgroundlayerselector/module.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","olBase","_Event","type","detail","olEventsEvent","inherits","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","defineProperty","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","layers_","layers","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_7__functions_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","__WEBPACK_IMPORTED_MODULE_11__obj_js__","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","handleEvent","handleEvent_","handleDownEvent","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","Event","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","ADD","REMOVE","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","squaredDistanceToSegment","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_0__xml_js__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_2__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","getRevision","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","lineStringsCoordinateAtM","coordinatess","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","intersectsExtent","setLayout","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","getPoint","n","getPoints","MULTI_POINT","olObservable","mapUids_","mapUid","previous","setAt","removeAt","insertAt","event","ngeoCustomEvent","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","olLayerGroup","getArray","olLayerLayer","hasUpdates","updatedDimensions","getSource","olSourceWMTS","refresh","olSourceTileWMS","olSourceImageWMS","updateParams","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","opt_right","orientLinearRingss","coordinatesss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","MULTI_POLYGON","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","gmfBackgroundlayerselectorModule","gmfMapComponent","constant","MainController","olView","center","projection","minZoom","zoom","_component","gmfBackgroundlayerselectorComponent","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","$element","component_","bindings","select","component","ngeoBackgroundLayerMgr","bgLayer","bgLayers","backgroundLayerMgr_","handleDestroy_","setLayer","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","fid","getAttributeNS","nextElementSibling","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","serverType","crossOrigin","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","optionsFromCapabilities","isEmpty","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","__WEBPACK_IMPORTED_MODULE_7__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","makeChildAppender","writeGeometryElement","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","olExtent","multiGeom","navigator","userAgent","hex","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","typeName","setAttributeNS","writeUpdate_","getKeys","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__extent_js__","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_8__size_js__","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_12__string_js__","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","setKey","getKeyForParams_","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","hash","getTilePixelRatio","fixedTileUrlFunction","scale","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_13__proj_js__","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"backgroundlayerselector.ab8b7c07cea3da7f5796.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.backgroundlayerselector\n */\nconst exports = {};\n\nimport './backgroundlayerselector.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfBackgroundlayerselectorModule from 'gmf/backgroundlayerselector/module.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBackgroundlayerselectorModule.name,\n  gmfMapComponent.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.module.value(\n  'gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?' +\n        'version=2&background=background');\n\nexports.module.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function(gmfThemes) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [],\n    view: new olView({\n      center: [632464, 185457],\n      projection: 'EPSG:21781',\n      minZoom: 3,\n      zoom: 3\n    })\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/backgroundlayerselector.js","/**\n * @module gmf.backgroundlayerselector.module\n */\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselectorModule', [\n  gmfBackgroundlayerselectorComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/backgroundlayerselector/module.js","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template URL.\n     */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/backgroundlayerselector/component.html`;\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-dimensions=\"::ctrl.dimensions\"\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {Object.<string, string>} gmf-backgroundlayerselector-dimensions\n *     The dimensions.\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'dimensions': '=gmfBackgroundlayerselectorDimensions',\n    'map': '=gmfBackgroundlayerselectorMap',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  googAsserts.assert(this.dimensions, 'The dimensions object is required');\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers(this.dimensions).then((layers) => {\n    this.bgLayers = layers;\n  });\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/backgroundlayerselector/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}
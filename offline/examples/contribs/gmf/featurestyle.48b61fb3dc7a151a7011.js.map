{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/featurestyle.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","olBase","_Event","type","detail","olEventsEvent","inherits","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","defineProperty","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","layers_","layers","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_7__functions_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","__WEBPACK_IMPORTED_MODULE_11__obj_js__","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","handleEvent","handleEvent_","handleDownEvent","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","Event","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","ADD","REMOVE","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","setCoordinates","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","wrapX","getDefaultStyleFunction","updateWhileInteracting","geometryName_","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","events","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","Style","createDefaultEditing","resolution","event","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","setGeometryName","setGeometry","dispatchEvent","last","sketchLineGeom","ring","getLinearRing","getLayout","done","pop","removeLastPoint","splice","sketchFeature","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","getSource","sketchFeatures","overlaySource","addFeatures","getActive","createRegularPolygon","opt_sides","opt_angle","center","angle","atan","createBox","ol_extent","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","transition","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","olInteractionInteraction","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","olLayerVector","olSourceVector","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","format","geom","transform","abs","getArea","getFormattedCircleArea","PI","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","addOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","callback","getTooltipElement","RECTANGLE","TEXT","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","opt_layout","layout","closestPointXY","closestPoint","minSquaredDistance","delta","containsXY","getRadiusSquared_","getCenter","computeExtent","intersectsExtent","circleExtent","intersectsCoordinate","setCenter","setLayout","changed","setFlatCoordinatesInternal","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","olString","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$injector","$filter_","decimals_","has","get","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","azimut","AZIMUT","line","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","console","zIndex","opt_incGeomFunc","incGeomFunc","olStyleRegularShape","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","assertString","COLOR","fromString","NAME","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","dataProjection","featureProjection","rotation","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","assertArray","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_11__xml_js__","defaultDataProjection","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","readString","RTE_PARSERS","cmt","desc","src","parseLink","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","time","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","createElementNS","namespaceURI","GPX_SERIALIZERS","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","applyLayoutOptions_","setAttributeNS","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","__WEBPACK_IMPORTED_MODULE_4__color_js__","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_17__math_js__","__WEBPACK_IMPORTED_MODULE_18__proj_js__","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","anchor","anchorOrigin","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","DEFAULT_STYLE_","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","findStyle_","styleValue","readColor_","getAllTextContent","exec","hexColor","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","test","w","h","heading","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","multiGeometry","homogeneous","setCommonGeometryProperties_","setPolygons","GEOMETRY_COLLECTION","readPoint_","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","doc","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","abgr","hex","writeCoordinatesTextNode_","dimension","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","getGeometries","GEOMETRY_NODE_FACTORY_","getPoints","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","__WEBPACK_IMPORTED_MODULE_0__xml_js__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","DOCUMENT","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","toPrecision","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_2__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","getRevision","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","extrapolate","interpolate","lineStringsCoordinateAtM","coordinatess","getLineString","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","coords","rad","acos","__WEBPACK_AMD_DEFINE_RESULT__","navigator","userAgent","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","String","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","getPoint","Error","__webpack_amd_options__","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","linearRingssContainsXY","linearRingss","opt_right","orientLinearRingss","coordinatesss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","lastEnds","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","$element","setColor","ngeoMiscColorpickerComponent","ngeoMiscFeatureHelper","ngeoFeatureHelper","scope_","featureHelper_","handleColorSet_","featureListenerKeys_","handleFeatureSet_","newFeature","previousFeature","propName","olObject","handleGeometryChange_","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","$apply","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","ogcLayer","err","return","supportsWFS","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","gmfDrawingFeatureStyleComponent","gmfMapComponent","constant","MainController","pointProperties","textProperties","lineProperties","poly1Properties","poly2Properties","rectProperties","fromExtent","circleProperties","fromCircle","olView","zoom","olSourceOSM","selectedFeature","on","handleMapSingleClick_","forEachFeatureAtPixel","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","defaultPrefix","ft","count","uri","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","readPoint","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readLinearRing","readPolygon","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","__WEBPACK_IMPORTED_MODULE_7__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","schemaLocation_","containerSrs","axisOrientation","proj","getAxisOrientation","coordsGroups","readBox_","BOX_PARSERS_","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","getTopLeft","getTopRight","getBottomRight","getBottomLeft","rgb","r","g","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","olEventsCondition","singleClick","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_9__obj_js__","WFS","featureType_","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","typeName","writeUpdate_","getKeys","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","__WEBPACK_IMPORTED_MODULE_3__extent_js__","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_8__size_js__","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_12__string_js__","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","tileClass","gutter_","gutter","tmpExtent_","setKey","getKeyForParams_","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","hash","getTilePixelRatio","fixedTileUrlFunction","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_13__proj_js__","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","writeFeatureMembers_","featureUidToGroupIndex_","groups_","layer_","styleFunction_","updateWhileAnimating","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","opt_geometries","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","geometryCollection","setGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","rotate","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","f","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"featurestyle.48b61fb3dc7a151a7011.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.misc.colorpickerComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.featurestyle\n */\nconst exports = {};\n\nimport './featurestyle.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfDrawingFeatureStyleComponent.name,\n  gmfMapComponent.name,\n  ngeoBase.module.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.module.value('ngeoMeasureDecimals', 2);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  // create features\n  const features = [];\n\n  const pointProperties = {\n    geometry: new olGeomPoint([-8458215, 6672646])\n  };\n  pointProperties[ngeoFormatFeatureProperties.COLOR] = '#009D57';\n  pointProperties[ngeoFormatFeatureProperties.NAME] = 'Point1';\n  pointProperties[ngeoFormatFeatureProperties.SIZE] = '6';\n  features.push(new olFeature(pointProperties));\n\n  const textProperties = {\n    geometry: new olGeomPoint([-8007848, 6209744])\n  };\n  textProperties[ngeoFormatFeatureProperties.ANGLE] = '0';\n  textProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  textProperties[ngeoFormatFeatureProperties.IS_TEXT] = true;\n  textProperties[ngeoFormatFeatureProperties.NAME] = 'Text 1';\n  textProperties[ngeoFormatFeatureProperties.SIZE] = '16';\n  textProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(textProperties));\n\n  const lineProperties = {\n    geometry: new olGeomLineString([\n      [-8321240, 6523441],\n      [-8103547, 6726458],\n      [-8091318, 6408480],\n      [-7973910, 6631065]\n    ])\n  };\n  lineProperties[ngeoFormatFeatureProperties.COLOR] = '#0BA9CC';\n  lineProperties[ngeoFormatFeatureProperties.NAME] = 'LineString 1';\n  lineProperties[ngeoFormatFeatureProperties.STROKE] = '4';\n  features.push(new olFeature(lineProperties));\n\n  const poly1Properties = {\n    geometry: new olGeomPolygon([\n      [\n        [-8512027, 6359560],\n        [-8531595, 6080718],\n        [-8267428, 6031798],\n        [-8238077, 6247045],\n        [-8512027, 6359560]\n      ]\n    ])\n  };\n  poly1Properties[ngeoFormatFeatureProperties.COLOR] = '#4186F0';\n  poly1Properties[ngeoFormatFeatureProperties.NAME] = 'Polygon 1';\n  poly1Properties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  poly1Properties[ngeoFormatFeatureProperties.SHOW_MEASURE] = true;\n  poly1Properties[ngeoFormatFeatureProperties.STROKE] = '1';\n  features.push(new olFeature(poly1Properties));\n\n  const poly2Properties = {\n    geometry: new olGeomPolygon([\n      [\n        [-7952508, 6096617],\n        [-8051570, 5959642],\n        [-7848554, 5926621],\n        [-7754383, 6025683],\n        [-7952508, 6096617]\n      ]\n    ])\n  };\n  poly2Properties[ngeoFormatFeatureProperties.COLOR] = '#CCCCCC';\n  poly2Properties[ngeoFormatFeatureProperties.NAME] = 'Polygon 2';\n  poly2Properties[ngeoFormatFeatureProperties.OPACITY] = '1';\n  poly2Properties[ngeoFormatFeatureProperties.STROKE] = '3';\n  features.push(new olFeature(poly2Properties));\n\n  const rectProperties = {\n    geometry: olGeomPolygon.fromExtent([-7874848, 6496535, -7730535, 6384020])\n  };\n  rectProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  rectProperties[ngeoFormatFeatureProperties.IS_RECTANGLE] = true;\n  rectProperties[ngeoFormatFeatureProperties.NAME] = 'Rectangle 1';\n  rectProperties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  rectProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(rectProperties));\n\n  const circleProperties = {\n    geometry: olGeomPolygon.fromCircle(\n      new olGeomCircle([-7691093, 6166327], 35000), 64)\n  };\n  circleProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  circleProperties[ngeoFormatFeatureProperties.IS_CIRCLE] = true;\n  circleProperties[ngeoFormatFeatureProperties.NAME] = 'Circle 1';\n  circleProperties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  circleProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(circleProperties));\n\n  const view = new olView({\n    center: [-8174482, 6288627],\n    zoom: 6\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  // set style\n  features.forEach((feature) => {\n    ngeoFeatureHelper.setStyle(feature);\n  }, this);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          wrapX: false,\n          features: features\n        })\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  this.map.on('singleclick', this.handleMapSingleClick_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapSingleClick_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  if (this.selectedFeature) {\n    this.featureHelper_.setStyle(this.selectedFeature);\n  }\n\n  if (feature) {\n    if (this.selectedFeature !== feature) {\n      this.selectedFeature = feature;\n      this.featureHelper_.setStyle(feature, true);\n    }\n  } else {\n    this.selectedFeature = null;\n  }\n\n  this.scope_.$apply();\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/featurestyle.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexports.extentToRectangle = function(extent) {\n  return [\n    olExtent.getTopLeft(extent),\n    olExtent.getTopRight(extent),\n    olExtent.getBottomRight(extent),\n    olExtent.getBottomLeft(extent),\n    olExtent.getTopLeft(extent),\n  ];\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}
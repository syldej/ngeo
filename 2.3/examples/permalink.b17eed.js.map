{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./examples/permalink.js"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","11","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","LINE_STRING","POINT","POLYGON","opt_options","olFormatTextFeature","this","options","undefined","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","defaultValues_","defaultValues","olBase","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","feature","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","assert","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","olColor","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","split","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","ii","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","geometry","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","olArray","parts","part","decodeURIComponent","keyVal","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","join","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","_this","features","forEach","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","replace","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","angular","ngeoMapModule","ngeoMiscDebounce","ngeoStatemanagerModule","mapComponent","controller","bindings","map","template","component","MapComponentController","ngeoLocation","ngeoDebounce","ngeoLocation_","ngeoDebounce_","$onInit","view","getView","zoom","getParam","center","setCenter","setZoom","updateParams","z","on","e","getCenter","params","getZoom","drawComponent","layer","DrawComponentController","$scope","scope_","featureSeq_","interaction","_this2","vectorSource","getSource","olInteractionDraw","type","source","setActive","addInteraction","ngeoMiscDecorate","fhFormat","ngeoFormatFeatureHash","getFeatures","encodedFeatures","$applyAsync","addFeatures","clearLayer","clear","deleteParam","MainController","olMap","layers","olLayerTile","olSourceOSM","olSourceVector","vectorLayer","olLayerVector","setMap"],"mappings":"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","file":"permalink.b17eed.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t11: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([356,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module app.permalink\n */\nconst exports = {};\n\nimport './permalink.css';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\n\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport olMap from 'ol/Map.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name,\n  ngeoMiscDebounce.name,\n  ngeoStatemanagerModule.name,\n]);\n\n/**\n * An application-specific map component that updates the URL in the browser\n * address bar when the map view changes. It also sets the initial view based\n * on the URL query params at init time.\n *\n * This component gets a reference to the map instance through the \"app-map\"\n * attribute.\n *\n * @type {!angular.Component}\n */\nexports.mapComponent = {\n  controller: 'AppMapController as ctrl',\n  bindings: {\n    'map': '=appMap'\n  },\n  template: '<div ngeo-map=ctrl.map></div>'\n};\n\n\nexports.module.component('appMap', exports.mapComponent);\n\n\n/**\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @ngInject\n */\nexports.MapComponentController = function(ngeoLocation, ngeoDebounce) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n};\n\nexports.module.controller('AppMapController', exports.MapComponentController);\n\nexports.MapComponentController.prototype.$onInit = function() {\n  const view = this.map.getView();\n\n  let zoom = this.ngeoLocation_.getParam('z');\n  zoom = zoom !== undefined ? +zoom : 4;\n\n  const x = this.ngeoLocation_.getParam('x');\n  const y = this.ngeoLocation_.getParam('y');\n  const center = (x !== undefined) && (y !== undefined) ?\n    [+x, +y] : [0, 0];\n\n  view.setCenter(center);\n  view.setZoom(zoom);\n\n  this.ngeoLocation_.updateParams({\n    'z': zoom,\n    'x': Math.round(center[0]),\n    'y': Math.round(center[1])\n  });\n\n  view.on('propertychange',\n    this.ngeoDebounce_(\n      /**\n       * @param {ol.Object.Event} e Object event.\n       */\n      (e) => {\n        const center = view.getCenter();\n        const params = {\n          'z': view.getZoom(),\n          'x': Math.round(center[0]),\n          'y': Math.round(center[1])\n        };\n        this.ngeoLocation_.updateParams(params);\n      }, 300, /* invokeApply */ true));\n};\n\n/**\n * A draw component that adds a simple draw tool.\n *\n * @type {!angular.Component}\n */\nexports.drawComponent = {\n  controller: 'AppDrawController as ctrl',\n  bindings: {\n    'map': '=appDrawMap',\n    'layer': '=appDrawLayer'\n  },\n  template:\n      '<label>Enable drawing:' +\n      '<input type=\"checkbox\" ng-model=\"ctrl.interaction.active\" />' +\n      '</label><br>' +\n      '<button ng-click=\"ctrl.clearLayer()\">Clear layer</button>'\n};\n\n\nexports.module.component('appDraw', exports.drawComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @constructor\n * @export\n * @ngInject\n */\nexports.DrawComponentController = function($scope, ngeoLocation) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   */\n  this.layer;\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.featureSeq_ = 0;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.interaction;\n};\n\nexports.DrawComponentController.prototype.$onInit = function() {\n  const vectorSource = this.layer.getSource();\n\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: vectorSource\n  });\n\n  this.interaction.setActive(false);\n  this.map.addInteraction(this.interaction);\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  this.interaction.on('drawend', function(e) {\n    e.feature.set('id', ++this.featureSeq_);\n  }, this);\n\n  // Deal with the encoding and decoding of features in the URL.\n\n  const fhFormat = new ngeoFormatFeatureHash();\n\n  vectorSource.on('addfeature', (e) => {\n    const feature = e.feature;\n    feature.setStyle(new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: [255, 0, 0, 1],\n        width: 2\n      })\n    }));\n    const features = vectorSource.getFeatures();\n    const encodedFeatures = fhFormat.writeFeatures(features);\n    this.scope_.$applyAsync(() => {\n      this.ngeoLocation_.updateParams({'features': encodedFeatures});\n    });\n  });\n\n  const encodedFeatures = this.ngeoLocation_.getParam('features');\n  if (encodedFeatures !== undefined) {\n    const features = fhFormat.readFeatures(encodedFeatures);\n    this.featureSeq_ = features.length;\n    vectorSource.addFeatures(features);\n  }\n};\n\n\n/**\n * Clear the vector layer.\n * @export\n */\nexports.DrawComponentController.prototype.clearLayer = function() {\n  this.layer.getSource().clear(true);\n  this.featureSeq_ = 0;\n  this.ngeoLocation_.deleteParam('features');\n};\n\nexports.module.controller('AppDrawController', exports.DrawComponentController);\n\n\n/**\n * @constructor\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ]\n  });\n\n\n  const vectorSource = new olSourceVector();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  this.vectorLayer.setMap(this.map);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n"],"sourceRoot":""}
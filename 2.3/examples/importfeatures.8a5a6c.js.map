{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/importfeatures.js"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","24","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","angular","ngeoMapModule","ngeoMiscFilereaderComponent","MainController","$scope","_this","this","kmlFormat_","olFormatKML","extractStyles","vectorSource_","olSourceVector","map","olMap","layers","olLayerTile","source","olSourceOSM","olLayerVector","view","olView","center","zoom","fileReaderSupported","undefined","fileContent","$watch","importKml_","kml","vectorSource","features","readFeatures","featureProjection","clear","addFeatures","extent","getExtent","mapSize","getSize","olExtent","getView","fit","controller"],"mappings":"aACA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAA,GACA,IAAAE,EAAAF,EAAA,GACA,IAAAG,EAAAH,EAAA,GAGA,IAAAI,EAAAC,EAAAC,EAAA,EAAAC,KACA,KAAQD,EAAAL,EAAAO,OAAoBF,IAAA,CAC5BD,EAAAJ,EAAAK,GACA,GAAAG,EAAAJ,GAAA,CACAE,EAAAG,KAAAD,EAAAJ,GAAA,IAEAI,EAAAJ,GAAA,EAEA,IAAAD,KAAAF,EAAA,CACA,GAAAS,OAAAC,UAAAC,eAAAC,KAAAZ,EAAAE,GAAA,CACAW,EAAAX,GAAAF,EAAAE,IAGA,GAAAY,IAAAhB,GACA,MAAAO,EAAAC,OAAA,CACAD,EAAAU,OAAAV,GAIAW,EAAAR,KAAAS,MAAAD,EAAAf,OAGA,OAAAiB,IAEA,SAAAA,IACA,IAAAC,EACA,QAAAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAC7C,IAAAgB,EAAAJ,EAAAZ,GACA,IAAAiB,EAAA,KACA,QAAAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,GAAAf,EAAAgB,KAAA,EAAAF,EAAA,MAEA,GAAAA,EAAA,CACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKA,IAAApB,GACAqB,GAAA,GAGA,IAAAZ,KAGA,SAAAS,EAAAvB,GAGA,GAAAyB,EAAAzB,GAAA,CACA,OAAAyB,EAAAzB,GAAA2B,QAGA,IAAAC,EAAAH,EAAAzB,IACAE,EAAAF,EACA6B,EAAA,MACAF,YAIAhB,EAAAX,GAAAU,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,EAAA,KAGA,OAAAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACA,IAAAX,EAAAY,EAAAR,EAAAM,GAAA,CACA1B,OAAA6B,eAAAT,EAAAM,GACAI,aAAA,MACAC,WAAA,KACAC,IAAAL,MAMAX,EAAAiB,EAAA,SAAAb,GACApB,OAAA6B,eAAAT,EAAA,cAAiDc,MAAA,QAIjDlB,EAAAmB,EAAA,SAAAd,GACA,IAAAM,EAAAN,KAAAe,WACA,SAAAC,IAA2B,OAAAhB,EAAA,YAC3B,SAAAiB,IAAiC,OAAAjB,GACjCL,EAAAS,EAAAE,EAAA,IAAAA,GACA,OAAAA,GAIAX,EAAAY,EAAA,SAAAW,EAAAC,GAAsD,OAAAxC,OAAAC,UAAAC,eAAAC,KAAAoC,EAAAC,IAGtDxB,EAAAyB,EAAA,GAEA,IAAAC,EAAAC,OAAA,gBAAAA,OAAA,oBACA,IAAAC,EAAAF,EAAA3C,KAAA8C,KAAAH,GACAA,EAAA3C,KAAAX,EACAsD,IAAAI,QACA,QAAAnD,EAAA,EAAgBA,EAAA+C,EAAA7C,OAAuBF,IAAAP,EAAAsD,EAAA/C,IACvC,IAAAU,EAAAuC,EAIArC,EAAAR,MAAA,QAEA,OAAAU,kMClIA,IAAMW,KAmBNA,EAAQC,OAAS0B,QAAQ1B,OAAO,OAC9B,UACA2B,OAActB,KACduB,OAA4BvB,OAU9BN,EAAQ8B,eAAiB,SAASC,GAAQ,IAAAC,EAAAC,KAMxCA,KAAKC,WAAa,IAAIC,QACpBC,cAAe,QAOjBH,KAAKI,cAAgB,IAAIC,OAMzBL,KAAKM,IAAM,IAAIC,QACbC,QACE,IAAIC,QACFC,OAAQ,IAAIC,SAEd,IAAIC,QACFF,OAAQV,KAAKI,iBAGjBS,KAAM,IAAIC,QACRC,QAAS,EAAG,GACZC,KAAM,MASVhB,KAAKiB,oBAAsBC,UAM3BlB,KAAKmB,YAAc,GAEnBrB,EAAOsB,OAAO,kBAAMrB,EAAKoB,aAAanB,KAAKqB,WAAW7B,KAAKQ,QAhD7DjC,EAAQ8B,kCAyDR9B,EAAQ8B,eAAejD,UAAUyE,WAAa,SAASC,GACrD,IAAMhB,EAAMN,KAAKM,IACjB,IAAMiB,EAAevB,KAAKI,cAC1B,IAAMoB,EAAWxB,KAAKC,WAAWwB,aAAaH,GAC5CI,kBAAmB,cAErBH,EAAaI,MAAM,MACnBJ,EAAaK,YAAYJ,GACzB,IAAMK,EAASN,EAAaO,YAC5B,IAAMC,EAAUzB,EAAI0B,UACpB,GAAID,IAAYE,OAAiBJ,GAAS,CACxCvB,EAAI4B,UAAUC,IAAIN,EAAQE,KAK9BhE,EAAQC,OAAOoE,WAAW,iBAAkBrE,EAAQ8B,gBAGrC9B","file":"importfeatures.8a5a6c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t24: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([382,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module app.importfeatures\n */\nconst exports = {};\n\nimport './importfeatures.css';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name,\n  ngeoMiscFilereaderComponent.name,\n]);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Scope.\n * @export\n * @ngInject\n */\nexports.MainController = function($scope) {\n\n  /**\n   * @private\n   * @type {ol.format.KML}\n   */\n  this.kmlFormat_ = new olFormatKML({\n    extractStyles: false\n  });\n\n  /**\n   * @private\n   * @type {ol.source.Vector}\n   */\n  this.vectorSource_ = new olSourceVector();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      new olLayerVector({\n        source: this.vectorSource_\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 2\n    })\n  });\n\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.fileReaderSupported = undefined;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fileContent = '';\n\n  $scope.$watch(() => this.fileContent, this.importKml_.bind(this));\n\n};\n\n\n/**\n * @param {string} kml KML document.\n * @private\n */\nexports.MainController.prototype.importKml_ = function(kml) {\n  const map = this.map;\n  const vectorSource = this.vectorSource_;\n  const features = this.kmlFormat_.readFeatures(kml, {\n    featureProjection: 'EPSG:3857'\n  });\n  vectorSource.clear(true);\n  vectorSource.addFeatures(features);\n  const extent = vectorSource.getExtent();\n  const mapSize = map.getSize();\n  if (mapSize && !olExtent.isEmpty(extent)) {\n    map.getView().fit(extent, mapSize);\n  }\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n"],"sourceRoot":""}
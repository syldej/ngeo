{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/mapfishprint.js"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","24","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","_url_js__WEBPACK_IMPORTED_MODULE_0__","_mapfishprint_css__WEBPACK_IMPORTED_MODULE_1__","_mapfishprint_css__WEBPACK_IMPORTED_MODULE_1___default","ngeo_proj_EPSG21781_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_4__","ol_Map_js__WEBPACK_IMPORTED_MODULE_5__","ol_View_js__WEBPACK_IMPORTED_MODULE_6__","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_7__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_8__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_10__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_module_js__WEBPACK_IMPORTED_MODULE_12__","appmodule","angular","ngeoMapModule","ngeoPrintService","ngeoPrintUtils","PRINT_SCALES_","PRINT_FORMAT_","PRINT_LAYOUT_","PRINT_DPI_","PRINT_PAPER_SIZE_","MainController","$timeout","ngeoCreatePrint","this","map","olMap","layers","olLayerImage","source","olSourceImageWMS","url","appURL","MAPSERVER_PROXY","params","LAYERS","serverType","olLayerVector","olSourceVector","format","olFormatGeoJSON","defaultDataProjection","EPSG21781","view","olView","projection","resolutions","center","zoom","printState","$timeout_","print_","PRINT_PROXY","printUtils_","postcomposeListener","createPrintMaskPostcompose","frameState","mapSize","size","mapResolution","viewState","resolution","undefined","getOptimalScale","on","print","getSize","viewResolution","getView","getResolution","scale","dpi","layout","spec","createSpec","datasource","debug","comments","title","createReport","then","handleCreateReportSuccess_","handleCreateReportError_","resp","mfResp","getStatus_","ref","getStatus","handleGetStatusSuccess_","handleGetStatusError_","done","location","href","getReportUrl","that","controller"],"mappings":"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","file":"mapfishprint.b588a5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t24: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([476,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module app.mapfishprint\n */\nconst exports = {};\n\nimport appURL from './url.js';\nimport './mapfishprint.css';\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nconst appmodule = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n]);\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_SCALES_ = [100, 250, 500, 2500, 5000, 10000, 25000, 50000,\n  100000, 500000];\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_FORMAT_ = 'pdf';\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_LAYOUT_ = '1 A4 portrait';\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_DPI_ = 72;\n\n\n/**\n * @const\n * @private\n */\nexports.PRINT_PAPER_SIZE_ = [555, 675];\n\n\n/**\n * @constructor\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n * @ngInject\n * @export\n */\nexports.MainController = function($timeout, ngeoCreatePrint, ngeoPrintUtils) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerImage({\n        source: new olSourceImageWMS({\n          url: appURL.MAPSERVER_PROXY,\n          params: {\n            'LAYERS': 'osm'\n          },\n          serverType: /** @type {ol.source.WMSServerType} */ ('mapserver')\n        })\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          url: 'data/polygon-swizerland.json',\n          format: new olFormatGeoJSON({\n            defaultDataProjection: EPSG21781\n          })\n        })\n      })\n    ],\n    view: new olView({\n      projection: EPSG21781,\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  /**\n   * Text to display a \"loading\" message while waiting for the report.\n   * @type {string}\n   * @export\n   */\n  this.printState = '';\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {ngeo.print.Service}\n   * @private\n   */\n  this.print_ = ngeoCreatePrint(appURL.PRINT_PROXY);\n\n  /**\n   * @type {ngeo.print.Utils}\n   * @private\n   */\n  this.printUtils_ = ngeoPrintUtils;\n\n  /**\n   * @type {function(ol.render.Event)}\n   */\n  const postcomposeListener = ngeoPrintUtils.createPrintMaskPostcompose(\n    /**\n       * @return {ol.Size} Size in dots of the map to print.\n       */\n    () => exports.PRINT_PAPER_SIZE_,\n    /**\n       * @param {olx.FrameState} frameState Frame state.\n       * @return {number} Scale of the map to print.\n       */\n    (frameState) => {\n      const mapSize = frameState.size;\n      const mapResolution = frameState.viewState.resolution;\n      // we test mapSize and mapResolution just to please the compiler\n      return mapSize !== undefined && mapResolution !== undefined ?\n        ngeoPrintUtils.getOptimalScale(mapSize, mapResolution,\n          exports.PRINT_PAPER_SIZE_, exports.PRINT_SCALES_) :\n        exports.PRINT_SCALES_[0];\n    });\n\n  /**\n   * Draw the print window in a map postcompose listener.\n   */\n  this.map.on('postcompose', postcomposeListener);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.print = function() {\n  const map = this.map;\n\n  const mapSize = map.getSize();\n  const viewResolution = map.getView().getResolution();\n\n  // we test mapSize and viewResolution just to please the compiler\n  const scale = mapSize !== undefined && viewResolution !== undefined ?\n    this.printUtils_.getOptimalScale(mapSize, viewResolution,\n      exports.PRINT_PAPER_SIZE_, exports.PRINT_SCALES_) :\n    exports.PRINT_SCALES_[0];\n\n  const dpi = exports.PRINT_DPI_;\n  const format = exports.PRINT_FORMAT_;\n  const layout = exports.PRINT_LAYOUT_;\n\n  this.printState = 'Printing...';\n\n  const spec = this.print_.createSpec(map, scale, dpi, layout, format, {\n    'datasource': [],\n    'debug': 0,\n    'comments': 'My comments',\n    'title': 'My print'\n  });\n\n  this.print_.createReport(spec).then(\n    this.handleCreateReportSuccess_.bind(this),\n    this.handleCreateReportError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleCreateReportSuccess_ = function(resp) {\n  const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n  this.getStatus_(mfResp.ref);\n};\n\n\n/**\n * @param {string} ref Ref.\n * @private\n */\nexports.MainController.prototype.getStatus_ = function(ref) {\n  this.print_.getStatus(ref).then(\n    this.handleGetStatusSuccess_.bind(this, ref),\n    this.handleGetStatusError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleCreateReportError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\n/**\n * @param {string} ref Ref.\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleGetStatusSuccess_ = function(ref, resp) {\n  const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n  const done = mfResp.done;\n  if (done) {\n    // The report is ready. Open it by changing the window location.\n    this.printState = '';\n    window.location.href = this.print_.getReportUrl(ref);\n  } else {\n    // The report is not ready yet. Check again in 1s.\n    const that = this;\n    this.$timeout_(() => {\n      that.getStatus_(ref);\n    }, 1000, false);\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.MainController.prototype.handleGetStatusError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\nappmodule.controller('MainController', exports.MainController);\n\n\nexport default exports;\n"],"sourceRoot":""}